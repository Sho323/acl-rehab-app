{"version":3,"file":"static/js/main.7e3de98b.js","mappings":"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","sources":["src/services/api.js","src/store/slices/authSlice.js","src/store/slices/exerciseSlice.js","src/store/slices/progressSlice.js","src/store/slices/medicalCollaborationSlice.js","src/store/index.js","src/theme.js","src/screens/HomeScreen.js","src/screens/ExerciseScreen.js","src/screens/ExerciseMenuScreen.js","src/screens/ExerciseSessionScreen.js","src/screens/ProgressScreen.js","src/data/returnToSportCriteria.js","src/screens/ReturnToSportScreen.js","src/data/runningCriteria.js","src/screens/RunningCriteriaScreen.js","src/screens/EvaluationCheckpointsScreen.js","src/components/ErrorBoundary.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import axios from 'axios';\nimport Constants from 'expo-constants';\n\n// API基底URL（環境変数対応）\nconst API_BASE_URL = Constants.expoConfig?.extra?.apiUrl || \n  (process.env.NODE_ENV === 'production' \n    ? 'https://acl-rehab-app-4npr.onrender.com' \n    : 'http://localhost:3000');\n\n// APIクライアントの設定\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// リクエストインターセプター（認証トークンの自動付与）\napiClient.interceptors.request.use(\n  (config) => {\n    // トークンが必要な場合は各APIメソッドで個別に設定\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// レスポンスインターセプター（エラーハンドリング）\napiClient.interceptors.response.use(\n  (response) => response.data,\n  (error) => {\n    if (error.response?.status === 401) {\n      // 認証エラーの場合はログアウト処理\n      // Note: 本番環境では適切なログ管理システムを実装\n      if (__DEV__) {\n        console.log('Authentication error - redirecting to login');\n      }\n    }\n    return Promise.reject(error);\n  }\n);\n\n// 認証API\nexport const authAPI = {\n  login: async (patientNumber, password) => {\n    return await apiClient.post('/auth/login', {\n      patientNumber,\n      password,\n    });\n  },\n\n  getProfile: async (token) => {\n    return await apiClient.get('/auth/profile', {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n\n  logout: async (token) => {\n    return await apiClient.post('/auth/logout', {}, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n};\n\n// 運動API\nexport const exerciseAPI = {\n  // すべてのフェーズ取得（パブリック）\n  getAllPhases: async () => {\n    return await apiClient.get('/api/exercises/phases');\n  },\n\n  // フェーズ別運動一覧取得（パブリック）\n  getExercisesByPhase: async (phase) => {\n    return await apiClient.get(`/api/exercises/phase/${phase}`);\n  },\n\n  // 運動詳細取得（パブリック）\n  getExerciseDetails: async (exerciseId) => {\n    return await apiClient.get(`/api/exercises/detail/${exerciseId}`);\n  },\n\n  // 運動カテゴリー一覧取得（認証必要）\n  getCategories: async (phase, token) => {\n    const params = phase ? `?phase=${phase}` : '';\n    return await apiClient.get(`/api/exercises/categories${params}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n\n  // カテゴリー別運動一覧取得（認証必要）\n  getExercisesByCategory: async (categoryId, token) => {\n    return await apiClient.get(`/api/exercises/category/${categoryId}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n\n  // 患者の運動プラン取得（認証必要）\n  getPatientExercisePlan: async (patientId, phase, token) => {\n    return await apiClient.get(`/api/exercises/patient/${patientId}/plan?phase=${phase}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n\n  // 運動セッション記録\n  recordSession: async (sessionData, token) => {\n    return await apiClient.post('/api/exercises/session', sessionData, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n\n  uploadVideo: async (formData, token) => {\n    return await apiClient.post('/api/patient/videos/upload', formData, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n  },\n};\n\n// 進捗API\nexport const progressAPI = {\n  getProgress: async (token) => {\n    return await apiClient.get('/api/patient/progress', {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n\n  submitACLRSI: async (rsiData, token) => {\n    return await apiClient.post('/api/patient/tests/acl-rsi', rsiData, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n};\n\n// 医療連携API\nexport const medicalCollaborationAPI = {\n  getMedicalStaff: async (patientId, token) => {\n    return await apiClient.get(`/api/medical-collaboration/staff?patientId=${patientId}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n\n  sendReport: async (reportData, token) => {\n    return await apiClient.post('/api/medical-collaboration/reports', reportData, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n\n  getMessages: async (patientId, limit, token) => {\n    return await apiClient.get(`/api/medical-collaboration/messages?patientId=${patientId}&limit=${limit}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n\n  sendMessage: async (messageData, token) => {\n    return await apiClient.post('/api/medical-collaboration/messages', messageData, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n\n  getAppointments: async (patientId, token) => {\n    return await apiClient.get(`/api/medical-collaboration/appointments?patientId=${patientId}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n};","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { authAPI } from '../../services/api';\n\n// 初期状態\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n};\n\n// 非同期アクション: ログイン\nexport const loginUser = createAsyncThunk(\n  'auth/loginUser',\n  async ({ patientNumber, password }, { rejectWithValue }) => {\n    try {\n      const response = await authAPI.login(patientNumber, password);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.message || 'ログインに失敗しました');\n    }\n  }\n);\n\n// 非同期アクション: プロフィール取得\nexport const fetchUserProfile = createAsyncThunk(\n  'auth/fetchUserProfile',\n  async (token, { rejectWithValue }) => {\n    try {\n      const response = await authAPI.getProfile(token);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.message || 'プロフィール取得に失敗しました');\n    }\n  }\n);\n\n// 非同期アクション: ログアウト\nexport const logoutUser = createAsyncThunk(\n  'auth/logoutUser',\n  async (token, { rejectWithValue }) => {\n    try {\n      if (token) {\n        await authAPI.logout(token);\n      }\n      return null;\n    } catch (error) {\n      // ログアウトエラーは無視して正常終了扱い\n      return null;\n    }\n  }\n);\n\n// authSlice\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    clearError: (state) => {\n      state.error = null;\n    },\n    resetAuth: () => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      // ログイン\n      .addCase(loginUser.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.user = action.payload.user;\n        state.token = action.payload.token;\n        state.isAuthenticated = true;\n        state.error = null;\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n        state.isAuthenticated = false;\n      })\n      // プロフィール取得\n      .addCase(fetchUserProfile.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(fetchUserProfile.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.user = action.payload.user;\n      })\n      .addCase(fetchUserProfile.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      })\n      // ログアウト\n      .addCase(logoutUser.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(logoutUser.fulfilled, () => initialState)\n      .addCase(logoutUser.rejected, () => initialState);\n  },\n});\n\nexport const { clearError, resetAuth } = authSlice.actions;\nexport default authSlice.reducer;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { exerciseAPI } from '../../services/api';\n\n// 非同期アクション: 運動カテゴリー取得\nexport const fetchCategories = createAsyncThunk(\n  'exercise/fetchCategories',\n  async ({ phase, token }, { rejectWithValue }) => {\n    try {\n      const response = await exerciseAPI.getCategories(phase, token);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.error || 'カテゴリー取得に失敗しました');\n    }\n  }\n);\n\n// 非同期アクション: フェーズ別運動取得\nexport const fetchExercisesByPhase = createAsyncThunk(\n  'exercise/fetchExercisesByPhase',\n  async ({ phase, token }, { rejectWithValue }) => {\n    try {\n      const response = await exerciseAPI.getExercisesByPhase(phase, token);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.error || '運動メニューの取得に失敗しました');\n    }\n  }\n);\n\n// 非同期アクション: 患者の運動プラン取得\nexport const fetchPatientExercisePlan = createAsyncThunk(\n  'exercise/fetchPatientExercisePlan',\n  async ({ patientId, phase, token }, { rejectWithValue }) => {\n    try {\n      const response = await exerciseAPI.getPatientExercisePlan(patientId, phase, token);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.error || '運動プランの取得に失敗しました');\n    }\n  }\n);\n\n// 非同期アクション: 運動セッション記録\nexport const recordExerciseSession = createAsyncThunk(\n  'exercise/recordSession',\n  async ({ sessionData, token }, { rejectWithValue }) => {\n    try {\n      const response = await exerciseAPI.recordSession(sessionData, token);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.error || 'セッション記録に失敗しました');\n    }\n  }\n);\n\nconst initialState = {\n  categories: [],\n  exercises: [],\n  patientPlan: [],\n  currentSession: null,\n  sessionHistory: [],\n  isLoading: false,\n  error: null,\n  currentExerciseIndex: 0,\n  exerciseProgress: {},\n  currentPhase: 'pre_surgery',\n};\n\nconst exerciseSlice = createSlice({\n  name: 'exercise',\n  initialState,\n  reducers: {\n    clearError: (state) => {\n      state.error = null;\n    },\n    setCurrentExerciseIndex: (state, action) => {\n      state.currentExerciseIndex = action.payload;\n    },\n    updateExerciseProgress: (state, action) => {\n      const { exerciseId, progress } = action.payload;\n      if (!state.exerciseProgress[exerciseId]) {\n        state.exerciseProgress[exerciseId] = {};\n      }\n      state.exerciseProgress[exerciseId] = {\n        ...state.exerciseProgress[exerciseId],\n        ...progress,\n      };\n    },\n    resetExerciseProgress: (state) => {\n      state.exerciseProgress = {};\n      state.currentExerciseIndex = 0;\n    },\n    setCurrentPhase: (state, action) => {\n      state.currentPhase = action.payload;\n    },\n    startLocalSession: (state, action) => {\n      state.currentSession = {\n        id: Date.now(),\n        patientId: action.payload.patientId,\n        phase: action.payload.phase,\n        startTime: new Date().toISOString(),\n        exercises: [],\n        painLevel: null,\n        borgScale: null,\n        location: null,\n        notes: '',\n      };\n    },\n    endLocalSession: (state) => {\n      if (state.currentSession) {\n        state.currentSession.endTime = new Date().toISOString();\n        state.currentSession.completed = true;\n      }\n    },\n    addExerciseToSession: (state, action) => {\n      if (state.currentSession) {\n        state.currentSession.exercises.push(action.payload);\n      }\n    },\n    // セッション実行関連のアクション\n    setCurrentExercise: (state, action) => {\n      state.currentExercise = action.payload;\n    },\n    completeExercise: (state, action) => {\n      const { exerciseId, sessionData } = action.payload;\n      if (state.currentSession) {\n        state.currentSession.exercises.push({\n          exerciseId,\n          ...sessionData,\n          completedAt: new Date().toISOString(),\n        });\n      }\n      // 運動を完了としてマーク\n      if (state.exerciseProgress[exerciseId]) {\n        state.exerciseProgress[exerciseId].completed = true;\n      }\n    },\n    updateSessionInfo: (state, action) => {\n      if (state.currentSession) {\n        state.currentSession = {\n          ...state.currentSession,\n          ...action.payload,\n        };\n      }\n    },\n    pauseSession: (state) => {\n      if (state.currentSession) {\n        state.currentSession.isPaused = true;\n        state.currentSession.pausedAt = new Date().toISOString();\n      }\n    },\n    resumeSession: (state) => {\n      if (state.currentSession) {\n        state.currentSession.isPaused = false;\n        if (state.currentSession.pausedAt) {\n          const pauseDuration = new Date() - new Date(state.currentSession.pausedAt);\n          state.currentSession.totalPauseDuration = \n            (state.currentSession.totalPauseDuration || 0) + pauseDuration;\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // カテゴリー取得\n      .addCase(fetchCategories.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(fetchCategories.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.categories = action.payload;\n        state.error = null;\n      })\n      .addCase(fetchCategories.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      })\n      // 運動メニュー取得\n      .addCase(fetchExercisesByPhase.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(fetchExercisesByPhase.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.exercises = action.payload;\n        state.error = null;\n      })\n      .addCase(fetchExercisesByPhase.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      })\n      // 患者運動プラン取得\n      .addCase(fetchPatientExercisePlan.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(fetchPatientExercisePlan.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.patientPlan = action.payload;\n        state.error = null;\n      })\n      .addCase(fetchPatientExercisePlan.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      })\n      // セッション記録\n      .addCase(recordExerciseSession.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(recordExerciseSession.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.sessionHistory.push(state.currentSession);\n        state.currentSession = null;\n        state.exerciseProgress = {};\n        state.currentExerciseIndex = 0;\n        state.error = null;\n      })\n      .addCase(recordExerciseSession.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      });\n  },\n});\n\nexport const {\n  clearError,\n  setCurrentExerciseIndex,\n  updateExerciseProgress,\n  resetExerciseProgress,\n  setCurrentPhase,\n  startLocalSession,\n  endLocalSession,\n  addExerciseToSession,\n  setCurrentExercise,\n  completeExercise,\n  updateSessionInfo,\n  pauseSession,\n  resumeSession,\n} = exerciseSlice.actions;\n\nexport default exerciseSlice.reducer;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { progressAPI } from '../../services/api';\n\n// 非同期アクション: 進捗データ取得\nexport const fetchProgressData = createAsyncThunk(\n  'progress/fetchProgressData',\n  async ({ patientId, timeRange, token }, { rejectWithValue }) => {\n    try {\n      const response = await progressAPI.getProgressData(patientId, timeRange, token);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.error || '進捗データの取得に失敗しました');\n    }\n  }\n);\n\n// 非同期アクション: セッション履歴取得\nexport const fetchSessionHistory = createAsyncThunk(\n  'progress/fetchSessionHistory',\n  async ({ patientId, limit, token }, { rejectWithValue }) => {\n    try {\n      const response = await progressAPI.getSessionHistory(patientId, limit, token);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.error || 'セッション履歴の取得に失敗しました');\n    }\n  }\n);\n\n// 非同期アクション: 進捗統計取得\nexport const fetchProgressStats = createAsyncThunk(\n  'progress/fetchProgressStats',\n  async ({ patientId, period, token }, { rejectWithValue }) => {\n    try {\n      const response = await progressAPI.getProgressStats(patientId, period, token);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.error || '統計データの取得に失敗しました');\n    }\n  }\n);\n\nconst initialState = {\n  // 週間・月間目標\n  weeklyGoal: {\n    completed: 0,\n    total: 6,\n    targetSessions: 6,\n  },\n  monthlyGoal: {\n    completed: 0,\n    total: 24,\n    targetSessions: 24,\n  },\n  \n  // 統計データ\n  monthlyStats: {\n    sessionsCompleted: 0,\n    totalExercises: 0,\n    totalDuration: 0,\n    averagePainLevel: 0,\n    averageBorgScale: 0,\n    improvementRate: 0,\n  },\n  \n  // セッション履歴\n  recentSessions: [],\n  sessionHistory: [],\n  \n  // チャートデータ\n  painLevelTrend: [],\n  borgScaleTrend: [],\n  exerciseCountTrend: [],\n  phaseProgressData: [],\n  \n  // フィルター・設定\n  selectedTimeRange: 'week', // week, month, 3months, 6months\n  selectedMetric: 'painLevel', // painLevel, borgScale, exerciseCount\n  \n  // UI状態\n  isLoading: false,\n  error: null,\n  lastUpdated: null,\n};\n\nconst progressSlice = createSlice({\n  name: 'progress',\n  initialState,\n  reducers: {\n    // ローカルセッションデータの追加\n    addSessionToHistory: (state, action) => {\n      const sessionData = {\n        id: Date.now(),\n        date: new Date().toISOString().split('T')[0],\n        ...action.payload,\n      };\n      \n      state.recentSessions.unshift(sessionData);\n      state.sessionHistory.unshift(sessionData);\n      \n      // 最新20件に制限\n      if (state.recentSessions.length > 20) {\n        state.recentSessions = state.recentSessions.slice(0, 20);\n      }\n      \n      // 統計を更新\n      updateStatsFromSessions(state);\n    },\n    \n    // 目標設定\n    setWeeklyGoal: (state, action) => {\n      state.weeklyGoal.targetSessions = action.payload;\n      state.weeklyGoal.total = action.payload;\n    },\n    \n    setMonthlyGoal: (state, action) => {\n      state.monthlyGoal.targetSessions = action.payload;\n      state.monthlyGoal.total = action.payload;\n    },\n    \n    // フィルター設定\n    setTimeRange: (state, action) => {\n      state.selectedTimeRange = action.payload;\n    },\n    \n    setSelectedMetric: (state, action) => {\n      state.selectedMetric = action.payload;\n    },\n    \n    // エラークリア\n    clearError: (state) => {\n      state.error = null;\n    },\n    \n    // リセット\n    resetProgress: (state) => {\n      return {\n        ...initialState,\n        selectedTimeRange: state.selectedTimeRange,\n        selectedMetric: state.selectedMetric,\n      };\n    },\n    \n    // ダミーデータ設定（デモ用）\n    setDummyData: (state) => {\n      state.weeklyGoal = { completed: 4, total: 6, targetSessions: 6 };\n      state.monthlyStats = {\n        sessionsCompleted: 18,\n        totalExercises: 156,\n        totalDuration: 450, // 分\n        averagePainLevel: 2.3,\n        averageBorgScale: 12.5,\n        improvementRate: 15.2,\n      };\n      state.recentSessions = [\n        {\n          id: 1,\n          date: '2024-12-25',\n          exercises: 8,\n          duration: 25,\n          painLevel: 2,\n          borgScale: 11,\n          phase: 'phase_3_2',\n        },\n        {\n          id: 2,\n          date: '2024-12-23',\n          exercises: 6,\n          duration: 20,\n          painLevel: 3,\n          borgScale: 13,\n          phase: 'phase_3_2',\n        },\n        {\n          id: 3,\n          date: '2024-12-21',\n          exercises: 7,\n          duration: 22,\n          painLevel: 2,\n          borgScale: 12,\n          phase: 'phase_3_1',\n        },\n        {\n          id: 4,\n          date: '2024-12-19',\n          exercises: 9,\n          duration: 28,\n          painLevel: 4,\n          borgScale: 14,\n          phase: 'phase_3_1',\n        },\n        {\n          id: 5,\n          date: '2024-12-17',\n          exercises: 5,\n          duration: 18,\n          painLevel: 3,\n          borgScale: 12,\n          phase: 'phase_3_1',\n        },\n      ];\n      \n      // チャートデータ\n      state.painLevelTrend = [\n        { date: '12/17', value: 3 },\n        { date: '12/19', value: 4 },\n        { date: '12/21', value: 2 },\n        { date: '12/23', value: 3 },\n        { date: '12/25', value: 2 },\n      ];\n      \n      state.borgScaleTrend = [\n        { date: '12/17', value: 12 },\n        { date: '12/19', value: 14 },\n        { date: '12/21', value: 12 },\n        { date: '12/23', value: 13 },\n        { date: '12/25', value: 11 },\n      ];\n      \n      state.exerciseCountTrend = [\n        { date: '12/17', value: 5 },\n        { date: '12/19', value: 9 },\n        { date: '12/21', value: 7 },\n        { date: '12/23', value: 6 },\n        { date: '12/25', value: 8 },\n      ];\n      \n      state.lastUpdated = new Date().toISOString();\n    },\n  },\n  \n  extraReducers: (builder) => {\n    builder\n      // 進捗データ取得\n      .addCase(fetchProgressData.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(fetchProgressData.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.monthlyStats = action.payload.stats;\n        state.weeklyGoal = action.payload.weeklyGoal;\n        state.monthlyGoal = action.payload.monthlyGoal;\n        state.lastUpdated = new Date().toISOString();\n      })\n      .addCase(fetchProgressData.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      })\n      \n      // セッション履歴取得\n      .addCase(fetchSessionHistory.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(fetchSessionHistory.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.recentSessions = action.payload.sessions;\n        state.sessionHistory = action.payload.sessions;\n        state.lastUpdated = new Date().toISOString();\n      })\n      .addCase(fetchSessionHistory.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      })\n      \n      // 統計データ取得\n      .addCase(fetchProgressStats.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(fetchProgressStats.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.painLevelTrend = action.payload.painLevelTrend;\n        state.borgScaleTrend = action.payload.borgScaleTrend;\n        state.exerciseCountTrend = action.payload.exerciseCountTrend;\n        state.phaseProgressData = action.payload.phaseProgressData;\n        state.lastUpdated = new Date().toISOString();\n      })\n      .addCase(fetchProgressStats.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      });\n  },\n});\n\n// ヘルパー関数：セッションデータから統計を更新\nfunction updateStatsFromSessions(state) {\n  const sessions = state.recentSessions;\n  if (sessions.length === 0) return;\n  \n  // 今週のセッション数を計算\n  const today = new Date();\n  const weekStart = new Date(today.setDate(today.getDate() - today.getDay()));\n  const weekSessions = sessions.filter(session => {\n    const sessionDate = new Date(session.date);\n    return sessionDate >= weekStart;\n  });\n  \n  state.weeklyGoal.completed = weekSessions.length;\n  \n  // 今月のセッション数を計算\n  const monthStart = new Date(today.getFullYear(), today.getMonth(), 1);\n  const monthSessions = sessions.filter(session => {\n    const sessionDate = new Date(session.date);\n    return sessionDate >= monthStart;\n  });\n  \n  state.monthlyStats.sessionsCompleted = monthSessions.length;\n  \n  // 平均値計算\n  if (monthSessions.length > 0) {\n    state.monthlyStats.averagePainLevel = \n      monthSessions.reduce((sum, s) => sum + (s.painLevel || 0), 0) / monthSessions.length;\n    state.monthlyStats.averageBorgScale = \n      monthSessions.reduce((sum, s) => sum + (s.borgScale || 0), 0) / monthSessions.length;\n    state.monthlyStats.totalExercises = \n      monthSessions.reduce((sum, s) => sum + (s.exercises || 0), 0);\n    state.monthlyStats.totalDuration = \n      monthSessions.reduce((sum, s) => sum + (s.duration || 0), 0);\n  }\n}\n\nexport const {\n  addSessionToHistory,\n  setWeeklyGoal,\n  setMonthlyGoal,\n  setTimeRange,\n  setSelectedMetric,\n  clearError,\n  resetProgress,\n  setDummyData,\n} = progressSlice.actions;\n\nexport default progressSlice.reducer;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { medicalCollaborationAPI } from '../../services/api';\n\n// 初期状態\nconst initialState = {\n  staff: [],\n  messages: [],\n  appointments: [],\n  reports: [],\n  isLoading: false,\n  error: null,\n};\n\n// 非同期アクション: 医療スタッフ取得\nexport const fetchMedicalStaff = createAsyncThunk(\n  'medicalCollaboration/fetchMedicalStaff',\n  async ({ patientId, token }, { rejectWithValue }) => {\n    try {\n      const response = await medicalCollaborationAPI.getMedicalStaff(patientId, token);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.message || '医療スタッフ情報の取得に失敗しました');\n    }\n  }\n);\n\n// 非同期アクション: メッセージ取得\nexport const fetchMessages = createAsyncThunk(\n  'medicalCollaboration/fetchMessages',\n  async ({ patientId, limit, token }, { rejectWithValue }) => {\n    try {\n      const response = await medicalCollaborationAPI.getMessages(patientId, limit, token);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.message || 'メッセージの取得に失敗しました');\n    }\n  }\n);\n\n// 非同期アクション: メッセージ送信\nexport const sendMessage = createAsyncThunk(\n  'medicalCollaboration/sendMessage',\n  async ({ messageData, token }, { rejectWithValue }) => {\n    try {\n      const response = await medicalCollaborationAPI.sendMessage(messageData, token);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.message || 'メッセージの送信に失敗しました');\n    }\n  }\n);\n\n// 非同期アクション: レポート送信\nexport const sendReport = createAsyncThunk(\n  'medicalCollaboration/sendReport',\n  async ({ reportData, token }, { rejectWithValue }) => {\n    try {\n      const response = await medicalCollaborationAPI.sendReport(reportData, token);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.message || 'レポートの送信に失敗しました');\n    }\n  }\n);\n\n// 非同期アクション: 予約取得\nexport const fetchAppointments = createAsyncThunk(\n  'medicalCollaboration/fetchAppointments',\n  async ({ patientId, token }, { rejectWithValue }) => {\n    try {\n      const response = await medicalCollaborationAPI.getAppointments(patientId, token);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.message || '予約情報の取得に失敗しました');\n    }\n  }\n);\n\n// medicalCollaborationSlice\nconst medicalCollaborationSlice = createSlice({\n  name: 'medicalCollaboration',\n  initialState,\n  reducers: {\n    clearError: (state) => {\n      state.error = null;\n    },\n    resetMedicalCollaboration: () => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      // 医療スタッフ取得\n      .addCase(fetchMedicalStaff.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(fetchMedicalStaff.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.staff = action.payload;\n      })\n      .addCase(fetchMedicalStaff.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      })\n      // メッセージ取得\n      .addCase(fetchMessages.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(fetchMessages.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.messages = action.payload;\n      })\n      .addCase(fetchMessages.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      })\n      // メッセージ送信\n      .addCase(sendMessage.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(sendMessage.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.messages.push(action.payload);\n      })\n      .addCase(sendMessage.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      })\n      // レポート送信\n      .addCase(sendReport.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(sendReport.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.reports.push(action.payload);\n      })\n      .addCase(sendReport.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      })\n      // 予約取得\n      .addCase(fetchAppointments.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(fetchAppointments.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.appointments = action.payload;\n      })\n      .addCase(fetchAppointments.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      });\n  },\n});\n\nexport const { clearError, resetMedicalCollaboration } = medicalCollaborationSlice.actions;\nexport default medicalCollaborationSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\nimport authSlice from './slices/authSlice';\nimport exerciseSlice from './slices/exerciseSlice';\nimport progressSlice from './slices/progressSlice';\nimport medicalCollaborationSlice from './slices/medicalCollaborationSlice';\n\nexport const store = configureStore({\n  reducer: {\n    auth: authSlice,\n    exercise: exerciseSlice,\n    progress: progressSlice,\n    medicalCollaboration: medicalCollaborationSlice,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: ['persist/PERSIST'],\n      },\n    }),\n});","import { MD3LightTheme as DefaultTheme } from 'react-native-paper';\n\nexport const theme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: '#2E7D32', // 医療用グリーン\n    primaryContainer: '#C8E6C9',\n    secondary: '#1976D2', // 信頼感のあるブルー\n    secondaryContainer: '#BBDEFB',\n    tertiary: '#F57C00', // アクセントオレンジ\n    surface: '#FFFFFF',\n    surfaceVariant: '#F5F5F5',\n    background: '#FAFAFA',\n    error: '#D32F2F',\n    onPrimary: '#FFFFFF',\n    onSecondary: '#FFFFFF',\n    onSurface: '#212121',\n    onBackground: '#212121',\n  },\n  fonts: {\n    ...DefaultTheme.fonts,\n    labelLarge: {\n      fontFamily: 'System',\n      fontSize: 16,\n      fontWeight: '600',\n    },\n  },\n};","import React, { useEffect } from 'react';\nimport {\n  View,\n  StyleSheet,\n  ScrollView,\n  Dimensions,\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport {\n  Text,\n  Card,\n  Button,\n  ProgressBar,\n  Chip,\n  Divider,\n  IconButton,\n} from 'react-native-paper';\n\nconst { width } = Dimensions.get('window');\n\nconst HomeScreen = ({ navigation }) => {\n\n  // フェーズに応じた表示内容\n  const getPhaseInfo = (phase) => {\n    const phaseMap = {\n      'pre_surgery': {\n        title: '術前期',\n        description: '手術前の準備期間',\n        color: '#FF9800',\n        progress: 0.1,\n      },\n      'post_surgery_early': {\n        title: '術直後期',\n        description: '手術直後〜2週間',\n        color: '#F44336',\n        progress: 0.2,\n      },\n      'phase_3_1': {\n        title: '基礎回復期',\n        description: '2〜6週間',\n        color: '#2196F3',\n        progress: 0.4,\n      },\n      'phase_3_2': {\n        title: '筋力強化期',\n        description: '6〜12週間',\n        color: '#4CAF50',\n        progress: 0.6,\n      },\n      'phase_3_3': {\n        title: '機能訓練期',\n        description: '3〜6ヶ月',\n        color: '#9C27B0',\n        progress: 0.8,\n      },\n      'phase_3_4': {\n        title: '競技復帰期',\n        description: '6〜12ヶ月',\n        color: '#E91E63',\n        progress: 0.95,\n      },\n      'completed': {\n        title: '完了',\n        description: '競技復帰達成',\n        color: '#4CAF50',\n        progress: 1.0,\n      },\n    };\n    return phaseMap[phase] || phaseMap['pre_surgery'];\n  };\n\n  const currentPhaseInfo = getPhaseInfo('pre_surgery');\n\n  const menuItems = [\n    {\n      title: '自主トレーニング',\n      icon: 'dumbbell',\n      description: '今日の運動メニュー',\n      onPress: () => navigation.navigate('Exercise'),\n      color: '#2E7D32',\n    },\n    {\n      title: '進捗確認',\n      icon: 'chart-line',\n      description: '回復状況の確認',\n      onPress: () => navigation.navigate('Progress'),\n      color: '#1976D2',\n    },\n  ];\n\n  return (\n    <ScrollView style={styles.container}>\n      {/* ヘッダー */}\n      <Card style={styles.headerCard}>\n        <Card.Content>\n          <View style={styles.headerContent}>\n            <View style={styles.userInfo}>\n              <Text style={styles.welcomeText}>ACL リハビリアプリ</Text>\n              <Text style={styles.userName}>自主トレーニング</Text>\n            </View>\n          </View>\n        </Card.Content>\n      </Card>\n\n      {/* 現在のフェーズ */}\n      <Card style={styles.phaseCard}>\n        <Card.Content>\n          <View style={styles.phaseHeader}>\n            <Text style={styles.phaseTitle}>現在のリハビリ段階</Text>\n            <Chip\n              mode=\"outlined\"\n              style={[styles.phaseChip, { borderColor: currentPhaseInfo.color }]}\n              textStyle={{ color: currentPhaseInfo.color }}\n            >\n              {currentPhaseInfo.title}\n            </Chip>\n          </View>\n          \n          <Text style={styles.phaseDescription}>\n            {currentPhaseInfo.description}\n          </Text>\n          \n          <View style={styles.progressContainer}>\n            <Text style={styles.progressLabel}>全体の進捗</Text>\n            <ProgressBar\n              progress={currentPhaseInfo.progress}\n              color={currentPhaseInfo.color}\n              style={styles.progressBar}\n            />\n            <Text style={styles.progressText}>\n              {Math.round(currentPhaseInfo.progress * 100)}%\n            </Text>\n          </View>\n\n          {user?.surgeryDate && (\n            <Text style={styles.surgeryDate}>\n              手術日: {new Date(user.surgeryDate).toLocaleDateString('ja-JP')}\n            </Text>\n          )}\n        </Card.Content>\n      </Card>\n\n      {/* メインメニュー */}\n      <View style={styles.menuContainer}>\n        {menuItems.map((item, index) => (\n          <Card key={index} style={styles.menuCard}>\n            <Card.Content>\n              <View style={styles.menuContent}>\n                <View style={styles.menuTextContainer}>\n                  <Text style={styles.menuTitle}>{item.title}</Text>\n                  <Text style={styles.menuDescription}>{item.description}</Text>\n                </View>\n                <IconButton\n                  icon={item.icon}\n                  size={32}\n                  iconColor={item.color}\n                  style={[styles.menuIcon, { backgroundColor: `${item.color}15` }]}\n                />\n              </View>\n              <Button\n                mode=\"contained\"\n                onPress={item.onPress}\n                style={[styles.menuButton, { backgroundColor: item.color }]}\n                labelStyle={styles.menuButtonLabel}\n              >\n                開始\n              </Button>\n            </Card.Content>\n          </Card>\n        ))}\n      </View>\n\n      {/* 今日のヒント */}\n      <Card style={styles.tipCard}>\n        <Card.Content>\n          <Text style={styles.tipTitle}>今日のヒント</Text>\n          <Divider style={styles.tipDivider} />\n          <Text style={styles.tipText}>\n            運動前のアイシングは5-10分程度に留め、運動後は15-20分間のアイシングを行いましょう。\n            痛みが強い場合は無理をせず、担当医師にご相談ください。\n          </Text>\n        </Card.Content>\n      </Card>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  headerCard: {\n    margin: 16,\n    marginBottom: 8,\n    elevation: 2,\n  },\n  headerContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  userInfo: {\n    flex: 1,\n  },\n  welcomeText: {\n    fontSize: 14,\n    color: '#666',\n  },\n  userName: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  phaseCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n  },\n  phaseHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  phaseTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  phaseChip: {\n    borderWidth: 1,\n  },\n  phaseDescription: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 16,\n  },\n  progressContainer: {\n    marginBottom: 12,\n  },\n  progressLabel: {\n    fontSize: 12,\n    color: '#666',\n    marginBottom: 4,\n  },\n  progressBar: {\n    height: 8,\n    borderRadius: 4,\n    marginBottom: 4,\n  },\n  progressText: {\n    fontSize: 12,\n    textAlign: 'right',\n    color: '#666',\n  },\n  surgeryDate: {\n    fontSize: 12,\n    color: '#666',\n    textAlign: 'center',\n  },\n  menuContainer: {\n    padding: 16,\n    paddingTop: 8,\n  },\n  menuCard: {\n    marginBottom: 12,\n    elevation: 2,\n  },\n  menuContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  menuTextContainer: {\n    flex: 1,\n  },\n  menuTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 4,\n  },\n  menuDescription: {\n    fontSize: 12,\n    color: '#666',\n  },\n  menuIcon: {\n    margin: 0,\n    borderRadius: 8,\n  },\n  menuButton: {\n    borderRadius: 8,\n  },\n  menuButtonLabel: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  tipCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n  },\n  tipTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  tipDivider: {\n    marginBottom: 12,\n  },\n  tipText: {\n    fontSize: 14,\n    lineHeight: 20,\n    color: '#333',\n  },\n});\n\nHomeScreen.propTypes = {\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default HomeScreen;","import React from 'react';\nimport {\n  View,\n  StyleSheet,\n  ScrollView,\n} from 'react-native';\nimport {\n  Text,\n  Card,\n  Button,\n  List,\n  IconButton,\n} from 'react-native-paper';\nimport { useSelector } from 'react-redux';\n\nconst ExerciseScreen = ({ navigation }) => {\n  const { user } = useSelector((state) => state.auth);\n\n  const handleNavigateToMenu = () => {\n    navigation.navigate('ExerciseMenu');\n  };\n\n  const handleNavigateToHistory = () => {\n    navigation.navigate('ExerciseHistory');\n  };\n\n  const menuItems = [\n    {\n      title: '今日のトレーニング',\n      description: '段階別運動メニュー',\n      icon: 'dumbbell',\n      onPress: handleNavigateToMenu,\n      color: '#2E7D32',\n    },\n    {\n      title: 'トレーニング履歴',\n      description: '過去の運動記録',\n      icon: 'history',\n      onPress: handleNavigateToHistory,\n      color: '#1976D2',\n    },\n  ];\n\n  return (\n    <ScrollView style={styles.container}>\n      <Card style={styles.headerCard}>\n        <Card.Content>\n          <Text style={styles.title}>自主トレーニング</Text>\n          <Text style={styles.subtitle}>\n            ACLリハビリテーション プログラム\n          </Text>\n        </Card.Content>\n      </Card>\n\n      <View style={styles.menuContainer}>\n        {menuItems.map((item, index) => (\n          <Card key={index} style={styles.menuCard}>\n            <Card.Content>\n              <View style={styles.menuContent}>\n                <View style={styles.menuTextContainer}>\n                  <Text style={styles.menuTitle}>{item.title}</Text>\n                  <Text style={styles.menuDescription}>{item.description}</Text>\n                </View>\n                <IconButton\n                  icon={item.icon}\n                  size={32}\n                  iconColor={item.color}\n                  style={[styles.menuIcon, { backgroundColor: `${item.color}15` }]}\n                />\n              </View>\n              <Button\n                mode=\"contained\"\n                onPress={item.onPress}\n                style={[styles.menuButton, { backgroundColor: item.color }]}\n                labelStyle={styles.menuButtonLabel}\n              >\n                開始\n              </Button>\n            </Card.Content>\n          </Card>\n        ))}\n      </View>\n\n      <Card style={styles.infoCard}>\n        <Card.Content>\n          <Text style={styles.infoTitle}>運動時の注意事項</Text>\n          <List.Section>\n            <List.Item\n              title=\"痛みの確認\"\n              description=\"運動中に痛みを感じた場合は即座に中止してください\"\n              left={() => <List.Icon icon=\"alert-circle\" color=\"#F44336\" />}\n            />\n            <List.Item\n              title=\"適切な環境\"\n              description=\"十分なスペースと安全な環境で実施してください\"\n              left={() => <List.Icon icon=\"home\" color=\"#4CAF50\" />}\n            />\n            <List.Item\n              title=\"水分補給\"\n              description=\"運動前後の水分補給を忘れずに行ってください\"\n              left={() => <List.Icon icon=\"water\" color=\"#2196F3\" />}\n            />\n          </List.Section>\n        </Card.Content>\n      </Card>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  headerCard: {\n    margin: 16,\n    elevation: 2,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 4,\n  },\n  subtitle: {\n    fontSize: 14,\n    color: '#666',\n  },\n  menuContainer: {\n    padding: 16,\n    paddingTop: 8,\n  },\n  menuCard: {\n    marginBottom: 12,\n    elevation: 2,\n  },\n  menuContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  menuTextContainer: {\n    flex: 1,\n  },\n  menuTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 4,\n  },\n  menuDescription: {\n    fontSize: 14,\n    color: '#666',\n  },\n  menuIcon: {\n    margin: 0,\n    borderRadius: 8,\n  },\n  menuButton: {\n    borderRadius: 8,\n  },\n  menuButtonLabel: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  infoCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n  },\n  infoTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n});\n\nexport default ExerciseScreen;","import React, { useEffect, useState } from 'react';\nimport {\n  View,\n  StyleSheet,\n  ScrollView,\n  Dimensions,\n  Alert,\n} from 'react-native';\nimport {\n  Text,\n  Card,\n  Button,\n  List,\n  Chip,\n  ActivityIndicator,\n  Divider,\n  Badge,\n  IconButton,\n} from 'react-native-paper';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchPatientExercisePlan,\n  setCurrentPhase,\n  startLocalSession,\n  clearError,\n} from '../store/slices/exerciseSlice';\n\nconst { width } = Dimensions.get('window');\n\nconst ExerciseMenuScreen = ({ navigation }) => {\n  const dispatch = useDispatch();\n  const { user, token } = useSelector((state) => state.auth);\n  const { \n    patientPlan, \n    isLoading, \n    error, \n    currentPhase,\n    currentSession \n  } = useSelector((state) => state.exercise);\n\n  const [expandedCategories, setExpandedCategories] = useState({});\n\n  useEffect(() => {\n    // ユーザーの現在のフェーズを設定（デフォルトは術前期）\n    const userPhase = user?.currentPhase || 'pre_surgery';\n    dispatch(setCurrentPhase(userPhase));\n    \n    // 常に実際のAPIから運動プランを取得\n    if (user && token) {\n      // 認証済みユーザーの場合：患者の運動プランを取得\n      dispatch(fetchPatientExercisePlan({\n        patientId: user.id,\n        phase: userPhase,\n        token: token\n      }));\n    } else {\n      // ゲストアクセスまたは未認証の場合：公開APIから運動データを取得\n      fetchPublicExerciseData(userPhase);\n    }\n  }, [dispatch, user, token]);\n\n  const [localPatientPlan, setLocalPatientPlan] = useState([]);\n\n  // 公開APIから運動データを取得\n  const fetchPublicExerciseData = async (phase) => {\n    try {\n      // exerciseAPI.getExercisesByPhaseを使用してAPIからデータを取得\n      const { exerciseAPI } = await import('../services/api');\n      const phaseData = await exerciseAPI.getExercisesByPhase(phase);\n      \n      console.log('Fetched phase data:', phaseData); // デバッグログ\n      \n      if (phaseData && phaseData.exercises) {\n        // データを適切なフォーマットに変換\n        const exerciseList = phaseData.exercises.map(exercise => ({\n          id: exercise.id,\n          exercise_name: exercise.name,\n          description: exercise.description,\n          instructions: exercise.instructions,\n          category_name: exercise.category || 'その他',\n          assigned_sets: exercise.sets,\n          assigned_reps: exercise.reps,\n          duration: exercise.duration ? `${exercise.duration}分` : '',\n          difficulty_level: exercise.difficulty,\n          requires_ai_analysis: exercise.requiresAI,\n          is_completed: false,\n        }));\n        console.log('Converted exercise list:', exerciseList); // デバッグログ\n        setLocalPatientPlan(exerciseList);\n      } else {\n        console.log('No exercises in phase data, using dummy data');\n        // フォールバックとしてダミーデータを使用\n        const dummyPlan = getDummyExercisePlan(phase);\n        setLocalPatientPlan(dummyPlan);\n      }\n    } catch (error) {\n      console.error('Error fetching exercise data:', error);\n      // エラー時はダミーデータを使用\n      const dummyPlan = getDummyExercisePlan(phase);\n      setLocalPatientPlan(dummyPlan);\n    }\n  };\n\n  // ダミーデータ生成関数\n  const getDummyExercisePlan = (phase) => {\n    const phaseExercises = {\n      'pre_surgery': [\n        // ROM改善\n        {\n          id: '1',\n          exercise_name: 'ヒールプロップス',\n          description: '膝裏に空間を作り、重力で自然に伸びるようにする。最優先事項',\n          category_name: 'ROM改善',\n          assigned_sets: 1,\n          assigned_reps: 1,\n          duration: '10-20分',\n          frequency: '1日数回',\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        {\n          id: '2',\n          exercise_name: 'ヒールスライド',\n          description: 'タオルで補助し、痛みのない範囲でゆっくり曲げる',\n          category_name: 'ROM改善',\n          assigned_sets: 5,\n          assigned_reps: 20,\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        {\n          id: '3',\n          exercise_name: 'パテラモビライゼーション',\n          description: '膝のお皿を上下左右に優しく動かす',\n          category_name: 'ROM改善',\n          assigned_sets: 1,\n          assigned_reps: 1,\n          duration: '5分程度',\n          frequency: '1日数回',\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        \n        // 筋力（患側）\n        {\n          id: '4',\n          exercise_name: 'クワッドセッティング',\n          description: '膝裏のタオルを押しつぶす意識。ハムストリングスも同時に収縮させる（同時収縮）',\n          category_name: '筋力（患側）',\n          assigned_sets: 3,\n          assigned_reps: 12,\n          hold_time: '5秒保持',\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        {\n          id: '5',\n          exercise_name: 'SLR（ストレートレッグレイズ）',\n          description: '膝が曲がり落ちないように（ラグ無し）。股関節ではなく大腿四頭筋で上げる意識',\n          category_name: '筋力（患側）',\n          assigned_sets: 3,\n          assigned_reps: 12,\n          difficulty_level: 'beginner',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        {\n          id: '6',\n          exercise_name: 'グルートブリッジ',\n          description: '股関節をしっかり伸展させる。お尻の筋肉を意識する',\n          category_name: '筋力（患側）',\n          assigned_sets: 3,\n          assigned_reps: 15,\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        \n        // 筋力（患部外）\n        {\n          id: '7',\n          exercise_name: '健側の片脚トレーニング',\n          description: '片脚スクワット、片脚カーフレイズ、片脚RDLなど。クロス・エデュケーション効果を狙う',\n          category_name: '筋力（患部外）',\n          assigned_sets: 3,\n          assigned_reps: 15,\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        {\n          id: '8',\n          exercise_name: '体幹トレーニング',\n          description: 'プランク、サイドプランク。体幹の安定は全ての動作の基礎',\n          category_name: '筋力（患部外）',\n          assigned_sets: 3,\n          assigned_reps: 1,\n          duration: '30-60秒',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        {\n          id: '9',\n          exercise_name: '上半身トレーニング',\n          description: 'プレス系、プル系など、膝に負担のかからない種目をバランス良く行う',\n          category_name: '筋力（患部外）',\n          assigned_sets: 3,\n          assigned_reps: 12,\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        \n        // 有酸素運動\n        {\n          id: '10',\n          exercise_name: 'エアロバイク',\n          description: 'サドルの高さを調整し、伸展・屈曲両方の可動域改善にも活用する',\n          category_name: '有酸素運動',\n          assigned_sets: 1,\n          assigned_reps: 1,\n          duration: '20-30分',\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n      ],\n      'post_surgery_early': [\n        // アイシング・挙上\n        {\n          id: '101',\n          exercise_name: 'アイシング・挙上',\n          description: '痛みと腫れの管理が最優先。挙上時は膝裏に枕を入れない',\n          category_name: 'アイシング・挙上',\n          assigned_sets: 1,\n          assigned_reps: 1,\n          duration: '20分',\n          frequency: '頻回',\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        \n        // ROM\n        {\n          id: '102',\n          exercise_name: 'ヒールプロップス',\n          description: '完全伸展（0°）の達成と維持が最重要目標',\n          category_name: 'ROM',\n          assigned_sets: 1,\n          assigned_reps: 1,\n          duration: '20-30分',\n          frequency: '1日数回',\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        {\n          id: '103',\n          exercise_name: 'ヒールスライド',\n          description: '痛みのない範囲で優しく行う。目標は90°屈曲',\n          category_name: 'ROM',\n          assigned_sets: 3,\n          assigned_reps: 15,\n          note: '10-20回の範囲で調整',\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        {\n          id: '104',\n          exercise_name: 'アンクルポンプ',\n          description: 'DVT予防のために積極的に行う',\n          category_name: 'ROM',\n          assigned_sets: 1,\n          assigned_reps: 15,\n          frequency: '毎時',\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        \n        // 筋力（患側）\n        {\n          id: '105',\n          exercise_name: 'クワッドセッティング',\n          description: '強い収縮を意識する。NMESが有効な場合もある',\n          category_name: '筋力（患側）',\n          assigned_sets: 3,\n          assigned_reps: 12,\n          hold_time: '5秒保持',\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        {\n          id: '106',\n          exercise_name: 'SLR（伸展ラグ無し）',\n          description: '膝が完全に伸びたまま上げられる場合のみ実施',\n          category_name: '筋力（患側）',\n          assigned_sets: 3,\n          assigned_reps: 10,\n          difficulty_level: 'beginner',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        \n        // 筋力（健側）\n        {\n          id: '107',\n          exercise_name: '片脚ブリッジ',\n          description: '健側のお尻とハムストリングスを強化',\n          category_name: '筋力（健側）',\n          assigned_sets: 3,\n          assigned_reps: 12,\n          note: '10-15回の範囲で調整',\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        {\n          id: '108',\n          exercise_name: '片脚カーフレイズ',\n          description: '健側のふくらはぎを強化',\n          category_name: '筋力（健側）',\n          assigned_sets: 3,\n          assigned_reps: 17,\n          note: '15-20回の範囲で調整',\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n      ],\n      'post_surgery_1_4weeks': [\n        // ROM\n        {\n          id: '201',\n          exercise_name: 'エアロバイク',\n          description: '最初は揺らす動きから。完全な回転ができるようになったら徐々に時間を延ばす',\n          category_name: 'ROM',\n          assigned_sets: 1,\n          assigned_reps: 1,\n          duration: '10-20分',\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        \n        // 歩行\n        {\n          id: '202',\n          exercise_name: '歩行訓練',\n          description: '鏡を見ながら、左右対称で滑らかな歩行を意識する。質を重視',\n          category_name: '歩行',\n          assigned_sets: 1,\n          assigned_reps: 1,\n          note: '質を重視',\n          difficulty_level: 'beginner',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        \n        // 筋力（患側）\n        {\n          id: '203',\n          exercise_name: '両脚ミニスクワット',\n          description: '膝屈曲45°まで。膝がつま先より前に出過ぎないように注意',\n          category_name: '筋力（患側）',\n          assigned_sets: 3,\n          assigned_reps: 17,\n          note: '15-20回の範囲で調整',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        {\n          id: '204',\n          exercise_name: 'レッグプレス（両脚）',\n          description: '軽い負荷から開始し、左右均等に力を入れる',\n          category_name: '筋力（患側）',\n          assigned_sets: 3,\n          assigned_reps: 17,\n          note: '15-20回の範囲で調整',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        {\n          id: '205',\n          exercise_name: 'OKC膝伸展（4週目以降）',\n          description: '抵抗なしで、90°から45°の範囲のみ。痛みに注意',\n          category_name: '筋力（患側）',\n          assigned_sets: 2,\n          assigned_reps: 12,\n          note: '10-15回×2-3セット',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        \n        // 筋力（健側）\n        {\n          id: '206',\n          exercise_name: '片脚レッグプレス',\n          description: '健側の筋力を積極的に向上させる',\n          category_name: '筋力（健側）',\n          assigned_sets: 3,\n          assigned_reps: 11,\n          note: '10-12回の範囲で調整',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        {\n          id: '207',\n          exercise_name: '片脚RDL',\n          description: 'フォームを重視し、ハムストリングスと殿筋を鍛える',\n          category_name: '筋力（健側）',\n          assigned_sets: 3,\n          assigned_reps: 11,\n          note: '10-12回の範囲で調整',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        \n        // 体幹\n        {\n          id: '208',\n          exercise_name: 'プランク（動的バリエーション）',\n          description: '腕や脚を交互に上げるなど、安定性を保ちながら動きを加える',\n          category_name: '体幹',\n          assigned_sets: 3,\n          assigned_reps: 1,\n          duration: '30-60秒',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n      ],\n      'post_surgery_1_2months': [\n        // 筋力（CKC）\n        {\n          id: '301',\n          exercise_name: 'スクワット',\n          description: '屈曲角度を90°に近づける。フォームを最優先',\n          category_name: '筋力（CKC）',\n          assigned_sets: 3,\n          assigned_reps: 13,\n          note: '12-15回の範囲で調整',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        {\n          id: '302',\n          exercise_name: 'ステップアップ（前方・側方）',\n          description: '低い台から始める。体幹がぶれないように',\n          category_name: '筋力（CKC）',\n          assigned_sets: 3,\n          assigned_reps: 12,\n          note: '10-15回の範囲で調整',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        {\n          id: '303',\n          exercise_name: '片脚レッグプレス',\n          description: '患側の脚でコントロールしながら押す',\n          category_name: '筋力（CKC）',\n          assigned_sets: 3,\n          assigned_reps: 12,\n          note: '10-15回の範囲で調整',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        \n        // バランス\n        {\n          id: '304',\n          exercise_name: '片脚立ち（不安定面上）',\n          description: 'BOSUやフォームパッド上で。視線を動かしたり、ボールを扱ったりして難易度を上げる',\n          category_name: 'バランス',\n          assigned_sets: 3,\n          assigned_reps: 1,\n          duration: '30-60秒保持',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        \n        // 体幹\n        {\n          id: '305',\n          exercise_name: 'バードドッグ',\n          description: '体幹を一直線に保ち、ゆっくりと手足を伸ばす',\n          category_name: '体幹',\n          assigned_sets: 3,\n          assigned_reps: 10,\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n      ],\n      'post_surgery_2_3months': [\n        // 筋力\n        {\n          id: '401',\n          exercise_name: 'ランジ（前方・側方）',\n          description: '踏み出した膝が内側に入らないように。体幹は直立を保つ',\n          category_name: '筋力',\n          assigned_sets: 3,\n          assigned_reps: 11,\n          note: '10-12回の範囲で調整',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        {\n          id: '402',\n          exercise_name: '片脚スクワット（支持あり）',\n          description: '鏡でフォームを確認しながら、徐々に深く。膝とつま先の向きを揃える',\n          category_name: '筋力',\n          assigned_sets: 3,\n          assigned_reps: 10,\n          note: '8-12回の範囲で調整',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        {\n          id: '403',\n          exercise_name: 'フィジオボール・ハムストリングカール',\n          description: 'お尻を高く保ち、ハムストリングスでボールを引き寄せる',\n          category_name: '筋力',\n          assigned_sets: 3,\n          assigned_reps: 12,\n          note: '10-15回の範囲で調整',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        \n        // 有酸素運動\n        {\n          id: '404',\n          exercise_name: 'バイク/エリプティカル',\n          description: '強度を上げて心拍数を高める。ランニングへの準備',\n          category_name: '有酸素運動',\n          assigned_sets: 1,\n          assigned_reps: 1,\n          duration: '20-30分',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        \n        // 体幹\n        {\n          id: '405',\n          exercise_name: 'フィジオボール・プランク',\n          description: '不安定なボールの上で体幹を固める',\n          category_name: '体幹',\n          assigned_sets: 3,\n          assigned_reps: 1,\n          duration: '30-60秒',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n      ],\n      'post_surgery_3_4months': [\n        // 有酸素\n        {\n          id: '501',\n          exercise_name: 'ジョグ/ウォークプログラム',\n          description: '基準を満たした場合のみ開始。痛みや腫れが出たら中止',\n          category_name: '有酸素',\n          assigned_sets: 1,\n          assigned_reps: 1,\n          duration: '20分から開始',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: false,\n          is_completed: false,\n          note: 'ランニング開始基準をクリアしてから実施',\n        },\n        \n        // プライオメトリクス\n        {\n          id: '502',\n          exercise_name: '両脚ラインホップ',\n          description: '軽く、静かに着地する。膝のアライメントに集中',\n          category_name: 'プライオメトリクス',\n          assigned_sets: 3,\n          assigned_reps: 1,\n          duration: '30秒',\n          difficulty_level: 'advanced',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        {\n          id: '503',\n          exercise_name: '両脚ボックスジャンプ（低）',\n          description: '低い台（15-30cm）へ跳び乗り、静かに降りる。着地をコントロール',\n          category_name: 'プライオメトリクス',\n          assigned_sets: 3,\n          assigned_reps: 9,\n          note: '8-10回の範囲で調整',\n          difficulty_level: 'advanced',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        \n        // 筋力\n        {\n          id: '504',\n          exercise_name: 'ゴブレットスクワット',\n          description: '重量を増やし、パワー（挙上速度）を意識する',\n          category_name: '筋力',\n          assigned_sets: 3,\n          assigned_reps: 10,\n          note: '8-12回の範囲で調整',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        {\n          id: '505',\n          exercise_name: 'ウォーキングランジ',\n          description: '安定したフォームで一歩ずつ進む',\n          category_name: '筋力',\n          assigned_sets: 3,\n          assigned_reps: 10,\n          note: '10歩',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        \n        // 体幹\n        {\n          id: '506',\n          exercise_name: 'メディシンボールツイスト',\n          description: '座位で体幹を回旋させる。スポーツ動作への準備',\n          category_name: '体幹',\n          assigned_sets: 3,\n          assigned_reps: 15,\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n      ],\n      'post_surgery_4_6months': [\n        // プライオメトリクス\n        {\n          id: '601',\n          exercise_name: '片脚着地ドリル',\n          description: '低い台から片脚で着地し、3秒静止。膝と股関節で衝撃を吸収',\n          category_name: 'プライオメトリクス',\n          assigned_sets: 3,\n          assigned_reps: 9,\n          note: '8-10回の範囲で調整',\n          difficulty_level: 'advanced',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        {\n          id: '602',\n          exercise_name: 'スケーターホップ',\n          description: '左右に跳び、片脚でバランスを保つ。着地の安定性を重視',\n          category_name: 'プライオメトリクス',\n          assigned_sets: 3,\n          assigned_reps: 11,\n          note: '10-12回の範囲で調整',\n          difficulty_level: 'advanced',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        {\n          id: '603',\n          exercise_name: '片脚ホップ（距離）',\n          description: '距離よりもフォームと着地の質を優先する',\n          category_name: 'プライオメトリクス',\n          assigned_sets: 3,\n          assigned_reps: 6,\n          note: '5-8回の範囲で調整',\n          difficulty_level: 'advanced',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        \n        // アジリティ\n        {\n          id: '604',\n          exercise_name: 'ラダードリル',\n          description: '素早い足の動きを練習。最初はゆっくり正確に',\n          category_name: 'アジリティ',\n          assigned_sets: 2,\n          assigned_reps: 1,\n          note: '各ドリル × 2-3セット',\n          difficulty_level: 'advanced',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        {\n          id: '605',\n          exercise_name: 'Tドリル／ボックスドリル',\n          description: '計画された前後左右への移動。減速と加速のコントロール',\n          category_name: 'アジリティ',\n          assigned_sets: 3,\n          assigned_reps: 4,\n          note: '3-5往復',\n          difficulty_level: 'advanced',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        \n        // 筋力\n        {\n          id: '606',\n          exercise_name: 'バーベルスクワット／デッドリフト',\n          description: '最大筋力向上のため高重量・低回数で。フォームは絶対に崩さない',\n          category_name: '筋力',\n          assigned_sets: 3,\n          assigned_reps: 5,\n          note: '3-8回 × 3-4セット',\n          difficulty_level: 'advanced',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n      ],\n      'phase_3_1': [\n        {\n          id: '4',\n          exercise_name: '片脚立位',\n          description: '患側での片脚立位練習',\n          category_name: '歩行訓練',\n          assigned_sets: 3,\n          assigned_reps: 5,\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n      ],\n      'phase_3_2': [\n        {\n          id: '5',\n          exercise_name: 'ミニスクワット',\n          description: '膝屈曲30度までの浅いスクワット',\n          category_name: '筋力強化',\n          assigned_sets: 3,\n          assigned_reps: 10,\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        {\n          id: '6',\n          exercise_name: 'バランスボード',\n          description: 'バランスボードを使った安定性訓練',\n          category_name: 'バランス訓練',\n          assigned_sets: 3,\n          assigned_reps: 1,\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n      ],\n      'phase_3_3': [\n        {\n          id: '7',\n          exercise_name: 'ジャンプ着地',\n          description: '両足でのジャンプ着地練習',\n          category_name: 'スポーツ動作訓練',\n          assigned_sets: 3,\n          assigned_reps: 10,\n          difficulty_level: 'advanced',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n      ],\n      'phase_3_4': [\n        {\n          id: '8',\n          exercise_name: 'カッティング動作',\n          description: '方向転換動作の練習',\n          category_name: '競技特異的訓練',\n          assigned_sets: 3,\n          assigned_reps: 5,\n          difficulty_level: 'advanced',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n      ],\n    };\n    \n    return phaseExercises[phase] || [];\n  };\n\n  const getPhaseInfo = (phase) => {\n    const phaseMap = {\n      'pre_surgery': {\n        title: '術前期',\n        description: '手術前の準備期間',\n        color: '#FF9800',\n      },\n      'post_surgery_early': {\n        title: '術直後期',\n        description: '手術直後〜1週間',\n        color: '#F44336',\n      },\n      'post_surgery_1_4weeks': {\n        title: '術後1-4週間',\n        description: '術後1〜4週間',\n        color: '#E91E63',\n      },\n      'post_surgery_1_2months': {\n        title: '術後1-2ヶ月',\n        description: '術後1〜2ヶ月',\n        color: '#9C27B0',\n      },\n      'post_surgery_2_3months': {\n        title: '術後2-3ヶ月',\n        description: '術後2〜3ヶ月',\n        color: '#673AB7',\n      },\n      'post_surgery_3_4months': {\n        title: '術後3-4ヶ月',\n        description: '術後3〜4ヶ月',\n        color: '#3F51B5',\n      },\n      'post_surgery_4_6months': {\n        title: '術後4-6ヶ月',\n        description: '術後4〜6ヶ月',\n        color: '#2196F3',\n      },\n      'phase_3_1': {\n        title: '基礎回復期',\n        description: '2〜6週間',\n        color: '#2196F3',\n      },\n      'phase_3_2': {\n        title: '筋力強化期',\n        description: '6〜12週間',\n        color: '#4CAF50',\n      },\n      'phase_3_3': {\n        title: '機能訓練期',\n        description: '3〜6ヶ月',\n        color: '#9C27B0',\n      },\n      'phase_3_4': {\n        title: '競技復帰期',\n        description: '6〜12ヶ月',\n        color: '#E91E63',\n      },\n    };\n    return phaseMap[phase] || phaseMap['pre_surgery'];\n  };\n\n  const groupExercisesByCategory = (exercises) => {\n    const grouped = {};\n    exercises.forEach(exercise => {\n      const categoryName = exercise.category_name || 'その他';\n      if (!grouped[categoryName]) {\n        grouped[categoryName] = [];\n      }\n      grouped[categoryName].push(exercise);\n    });\n    return grouped;\n  };\n\n  const handleStartSession = () => {\n    const planToUse = token ? patientPlan : localPatientPlan;\n    \n    if (currentSession) {\n      Alert.alert(\n        '進行中のセッション',\n        'すでに進行中のセッションがあります。継続しますか？',\n        [\n          { text: 'キャンセル', style: 'cancel' },\n          { text: '継続', onPress: () => navigation.navigate('ExerciseSession') },\n        ]\n      );\n      return;\n    }\n\n    if (planToUse.length === 0) {\n      Alert.alert('お知らせ', '現在利用可能な運動メニューがありません。');\n      return;\n    }\n\n    // セッション開始\n    dispatch(startLocalSession({\n      patientId: user?.id || 'guest',\n      phase: currentPhase,\n    }));\n\n    Alert.alert(\n      'セッション開始',\n      `${planToUse.length}個の運動メニューでトレーニングを開始します。`,\n      [\n        { text: 'キャンセル', style: 'cancel' },\n        { text: '開始', onPress: () => navigation.navigate('ExerciseSession') }\n      ]\n    );\n  };\n\n  const handleExercisePress = async (exercise) => {\n    try {\n      // 詳細な運動情報をAPIから取得\n      const { exerciseAPI } = await import('../services/api');\n      const detailedExercise = await exerciseAPI.getExerciseDetails(exercise.id);\n      \n      const instructions = detailedExercise.instructions;\n      const instructionText = instructions ? [\n        `【準備】${instructions.preparation || ''}`,\n        `【実施方法】${instructions.execution || ''}`,\n        `【コツ】${instructions.tips || ''}`,\n        `【注意点】${instructions.cautions || ''}`,\n        `【進行方法】${instructions.progression || ''}`,\n        `【効果】${instructions.effects || ''}`,\n      ].filter(text => text.length > 4).join('\\n\\n') : '';\n\n      Alert.alert(\n        exercise.exercise_name,\n        `${detailedExercise.description}\\n\\n${instructionText}\\n\\n【トレーニング設定】\\nセット数: ${exercise.assigned_sets}\\n回数: ${exercise.assigned_reps}\\n難易度: ${getDifficultyLabel(exercise.difficulty_level)}\\n${detailedExercise.equipment ? `器具: ${detailedExercise.equipment}` : ''}`,\n        [\n          { text: 'OK' }\n        ]\n      );\n    } catch (error) {\n      console.error('Error fetching exercise details:', error);\n      // フォールバック：基本情報のみ表示\n      Alert.alert(\n        exercise.exercise_name,\n        `詳細: ${exercise.description}\\n\\nセット数: ${exercise.assigned_sets}\\n回数: ${exercise.assigned_reps}\\n難易度: ${getDifficultyLabel(exercise.difficulty_level)}`,\n        [\n          { text: 'OK' }\n        ]\n      );\n    }\n  };\n\n  const toggleCategory = (categoryName) => {\n    setExpandedCategories(prev => ({\n      ...prev,\n      [categoryName]: !prev[categoryName]\n    }));\n  };\n\n  const getDifficultyColor = (level) => {\n    const colorMap = {\n      'beginner': '#4CAF50',\n      'intermediate': '#FF9800',\n      'advanced': '#F44336',\n    };\n    return colorMap[level] || '#757575';\n  };\n\n  const getDifficultyLabel = (level) => {\n    const labelMap = {\n      'beginner': '初級',\n      'intermediate': '中級',\n      'advanced': '上級',\n    };\n    return labelMap[level] || level;\n  };\n\n  if (isLoading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" />\n        <Text style={styles.loadingText}>運動メニューを読み込み中...</Text>\n      </View>\n    );\n  }\n\n  if (error) {\n    return (\n      <View style={styles.errorContainer}>\n        <Text style={styles.errorText}>エラーが発生しました</Text>\n        <Text style={styles.errorMessage}>{error}</Text>\n        <Button mode=\"contained\" onPress={() => dispatch(clearError())}>\n          再試行\n        </Button>\n      </View>\n    );\n  }\n\n  const phaseInfo = getPhaseInfo(currentPhase);\n  // APIからのデータまたはダミーデータを使用\n  const currentPlan = token ? patientPlan : localPatientPlan;\n  const groupedExercises = groupExercisesByCategory(currentPlan);\n\n  return (\n    <ScrollView style={styles.container}>\n      {/* フェーズ情報 */}\n      <Card style={styles.phaseCard}>\n        <Card.Content>\n          <View style={styles.phaseHeader}>\n            <Text style={styles.phaseTitle}>現在のリハビリ段階</Text>\n            <Chip\n              mode=\"outlined\"\n              style={[styles.phaseChip, { borderColor: phaseInfo.color }]}\n              textStyle={{ color: phaseInfo.color }}\n            >\n              {phaseInfo.title}\n            </Chip>\n          </View>\n          <Text style={styles.phaseDescription}>{phaseInfo.description}</Text>\n        </Card.Content>\n      </Card>\n\n      {/* セッション開始ボタン */}\n      <Card style={styles.sessionCard}>\n        <Card.Content>\n          <Text style={styles.sessionTitle}>今日のトレーニング</Text>\n          <Text style={styles.sessionDescription}>\n            {currentPlan.length}個の運動メニューが利用可能です\n          </Text>\n          <Button\n            mode=\"contained\"\n            onPress={handleStartSession}\n            style={styles.startButton}\n            disabled={currentPlan.length === 0}\n          >\n            {currentSession ? 'セッションを継続' : 'セッションを開始'}\n          </Button>\n        </Card.Content>\n      </Card>\n\n      {/* 運動メニュー一覧 */}\n      {Object.keys(groupedExercises).length > 0 ? (\n        Object.entries(groupedExercises).map(([categoryName, exercises]) => (\n          <Card key={categoryName} style={styles.categoryCard}>\n            <List.Section>\n              <List.Subheader style={styles.categoryHeader}>\n                <View style={styles.categoryHeaderContent}>\n                  <Text style={styles.categoryTitle}>{categoryName}</Text>\n                  <Badge size={24}>{exercises.length}</Badge>\n                </View>\n              </List.Subheader>\n              <Divider />\n              {exercises.map((exercise, index) => (\n                <List.Item\n                  key={exercise.id}\n                  title={exercise.exercise_name}\n                  description={`${exercise.assigned_sets}セット × ${exercise.assigned_reps}回`}\n                  left={() => (\n                    <View style={styles.exerciseIcon}>\n                      <IconButton\n                        icon={exercise.requires_ai_analysis ? \"camera\" : \"dumbbell\"}\n                        size={24}\n                        iconColor={phaseInfo.color}\n                      />\n                    </View>\n                  )}\n                  right={() => (\n                    <View style={styles.exerciseInfo}>\n                      <Chip\n                        mode=\"outlined\"\n                        compact\n                        style={[\n                          styles.difficultyChip,\n                          { borderColor: getDifficultyColor(exercise.difficulty_level) }\n                        ]}\n                        textStyle={{ \n                          color: getDifficultyColor(exercise.difficulty_level),\n                          fontSize: 10\n                        }}\n                      >\n                        {getDifficultyLabel(exercise.difficulty_level)}\n                      </Chip>\n                      {exercise.is_completed && (\n                        <IconButton\n                          icon=\"check-circle\"\n                          size={20}\n                          iconColor=\"#4CAF50\"\n                          style={styles.completedIcon}\n                        />\n                      )}\n                    </View>\n                  )}\n                  onPress={() => handleExercisePress(exercise)}\n                  style={styles.exerciseItem}\n                />\n              ))}\n            </List.Section>\n          </Card>\n        ))\n      ) : (\n        <Card style={styles.emptyCard}>\n          <Card.Content>\n            <Text style={styles.emptyTitle}>運動メニューがありません</Text>\n            <Text style={styles.emptyDescription}>\n              現在利用可能な運動メニューがありません。\n              医療従事者にご相談ください。\n            </Text>\n          </Card.Content>\n        </Card>\n      )}\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n  },\n  loadingText: {\n    marginTop: 16,\n    fontSize: 16,\n    color: '#666',\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n    padding: 20,\n  },\n  errorText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#F44336',\n    marginBottom: 8,\n  },\n  errorMessage: {\n    fontSize: 14,\n    color: '#666',\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n  phaseCard: {\n    margin: 16,\n    elevation: 2,\n  },\n  phaseHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  phaseTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  phaseChip: {\n    borderWidth: 1,\n  },\n  phaseDescription: {\n    fontSize: 14,\n    color: '#666',\n  },\n  sessionCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n  },\n  sessionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  sessionDescription: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 16,\n  },\n  startButton: {\n    borderRadius: 8,\n  },\n  categoryCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n  },\n  categoryHeader: {\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n  },\n  categoryHeaderContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n  },\n  categoryTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  exerciseItem: {\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n  },\n  exerciseIcon: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 8,\n  },\n  exerciseInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  difficultyChip: {\n    borderWidth: 1,\n    marginRight: 4,\n  },\n  completedIcon: {\n    margin: 0,\n  },\n  emptyCard: {\n    margin: 16,\n    elevation: 2,\n  },\n  emptyTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 8,\n  },\n  emptyDescription: {\n    fontSize: 14,\n    color: '#666',\n    textAlign: 'center',\n    lineHeight: 20,\n  },\n});\n\nexport default ExerciseMenuScreen;","import React, { useState, useEffect, useRef } from 'react';\nimport {\n  View,\n  StyleSheet,\n  ScrollView,\n  Alert,\n  Dimensions,\n} from 'react-native';\nimport {\n  Text,\n  Card,\n  Button,\n  IconButton,\n  ProgressBar,\n  Chip,\n  Divider,\n  Surface,\n  Portal,\n  Modal,\n} from 'react-native-paper';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  endLocalSession,\n  completeExercise,\n  updateSessionInfo,\n  pauseSession,\n  resumeSession,\n  setCurrentExercise,\n} from '../store/slices/exerciseSlice';\n\nconst { width } = Dimensions.get('window');\n\nconst ExerciseSessionScreen = ({ navigation }) => {\n  const dispatch = useDispatch();\n  const { user, token } = useSelector((state) => state.auth);\n  const { \n    currentSession, \n    patientPlan, \n    currentPhase,\n    exerciseProgress \n  } = useSelector((state) => state.exercise);\n\n  const [currentExerciseIndex, setCurrentExerciseIndex] = useState(0);\n  const [currentSet, setCurrentSet] = useState(1);\n  const [currentRep, setCurrentRep] = useState(0);\n  const [isResting, setIsResting] = useState(false);\n  const [restTimeLeft, setRestTimeLeft] = useState(0);\n  const [exerciseTimeElapsed, setExerciseTimeElapsed] = useState(0);\n  const [showCompletionModal, setShowCompletionModal] = useState(false);\n  const [sessionNotes, setSessionNotes] = useState('');\n  const [painLevel, setPainLevel] = useState(0);\n  const [borgScale, setBorgScale] = useState(6);\n\n  const intervalRef = useRef(null);\n  const restIntervalRef = useRef(null);\n\n  // 使用するプランを取得（APIまたはダミーデータ）\n  const exercises = token ? patientPlan : getDummyExercisePlan(currentPhase);\n  const currentExercise = exercises[currentExerciseIndex];\n\n  // ダミーデータ（ExerciseMenuScreenと同じ）\n  const getDummyExercisePlan = (phase) => {\n    const phaseExercises = {\n      'pre_surgery': [\n        {\n          id: '1',\n          exercise_name: '大腿四頭筋セッティング',\n          description: '膝を伸ばした状態で太ももの前の筋肉を収縮',\n          category_name: '筋力維持',\n          assigned_sets: 3,\n          assigned_reps: 15,\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          rest_time_seconds: 30,\n          assigned_duration_seconds: 5,\n        },\n        {\n          id: '2',\n          exercise_name: '立ち上がり練習',\n          description: '椅子からの立ち上がり動作の練習',\n          category_name: '基本動作訓練',\n          assigned_sets: 3,\n          assigned_reps: 10,\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          rest_time_seconds: 60,\n          assigned_duration_seconds: 0,\n        },\n      ],\n      'phase_3_2': [\n        {\n          id: '5',\n          exercise_name: 'ミニスクワット',\n          description: '膝屈曲30度までの浅いスクワット',\n          category_name: '筋力強化',\n          assigned_sets: 3,\n          assigned_reps: 10,\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          rest_time_seconds: 60,\n          assigned_duration_seconds: 3,\n        },\n      ],\n    };\n    \n    return phaseExercises[phase] || phaseExercises['pre_surgery'];\n  };\n\n  useEffect(() => {\n    if (currentExercise) {\n      dispatch(setCurrentExercise(currentExercise));\n    }\n  }, [currentExercise, dispatch]);\n\n  useEffect(() => {\n    // 運動時間カウンター\n    if (!isResting && !currentSession?.isPaused) {\n      intervalRef.current = setInterval(() => {\n        setExerciseTimeElapsed(prev => prev + 1);\n      }, 1000);\n    } else {\n      clearInterval(intervalRef.current);\n    }\n\n    return () => clearInterval(intervalRef.current);\n  }, [isResting, currentSession?.isPaused]);\n\n  useEffect(() => {\n    // 休憩時間カウンター\n    if (isResting && restTimeLeft > 0) {\n      restIntervalRef.current = setInterval(() => {\n        setRestTimeLeft(prev => {\n          if (prev <= 1) {\n            setIsResting(false);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      clearInterval(restIntervalRef.current);\n    }\n\n    return () => clearInterval(restIntervalRef.current);\n  }, [isResting, restTimeLeft]);\n\n  const handleNextRep = () => {\n    if (currentRep < currentExercise.assigned_reps) {\n      setCurrentRep(prev => prev + 1);\n    } else {\n      // セット完了\n      handleSetComplete();\n    }\n  };\n\n  const handleSetComplete = () => {\n    if (currentSet < currentExercise.assigned_sets) {\n      // 次のセットへ\n      setCurrentSet(prev => prev + 1);\n      setCurrentRep(0);\n      \n      // 休憩開始\n      const restTime = currentExercise.rest_time_seconds || 30;\n      setRestTimeLeft(restTime);\n      setIsResting(true);\n    } else {\n      // 運動完了\n      handleExerciseComplete();\n    }\n  };\n\n  const handleExerciseComplete = () => {\n    const exerciseData = {\n      exerciseId: currentExercise.id,\n      sets_completed: currentExercise.assigned_sets,\n      reps_completed: currentExercise.assigned_reps * currentExercise.assigned_sets,\n      duration_seconds: exerciseTimeElapsed,\n      pain_level: painLevel,\n      borg_scale: borgScale,\n      notes: sessionNotes,\n    };\n\n    dispatch(completeExercise({\n      exerciseId: currentExercise.id,\n      sessionData: exerciseData,\n    }));\n\n    // 次の運動へ\n    if (currentExerciseIndex < exercises.length - 1) {\n      setCurrentExerciseIndex(prev => prev + 1);\n      setCurrentSet(1);\n      setCurrentRep(0);\n      setExerciseTimeElapsed(0);\n      setPainLevel(0);\n      setBorgScale(6);\n    } else {\n      // 全運動完了\n      setShowCompletionModal(true);\n    }\n  };\n\n  const handleSessionComplete = () => {\n    dispatch(updateSessionInfo({\n      painLevel,\n      borgScale,\n      notes: sessionNotes,\n    }));\n    dispatch(endLocalSession());\n    \n    Alert.alert(\n      'セッション完了',\n      'お疲れ様でした！トレーニングが完了しました。',\n      [\n        { text: 'OK', onPress: () => navigation.navigate('Home') }\n      ]\n    );\n  };\n\n  const handlePauseResume = () => {\n    if (currentSession?.isPaused) {\n      dispatch(resumeSession());\n    } else {\n      dispatch(pauseSession());\n    }\n  };\n\n  const handleSkipRest = () => {\n    setIsResting(false);\n    setRestTimeLeft(0);\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const getProgressPercentage = () => {\n    const totalExercises = exercises.length;\n    const completedExercises = currentExerciseIndex;\n    const currentExerciseProgress = currentSet / currentExercise?.assigned_sets || 0;\n    return ((completedExercises + currentExerciseProgress) / totalExercises) * 100;\n  };\n\n  if (!currentSession || !currentExercise) {\n    return (\n      <View style={styles.errorContainer}>\n        <Text style={styles.errorText}>セッションが見つかりません</Text>\n        <Button mode=\"contained\" onPress={() => navigation.goBack()}>\n          戻る\n        </Button>\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView style={styles.container}>\n      {/* セッション進捗 */}\n      <Card style={styles.progressCard}>\n        <Card.Content>\n          <Text style={styles.progressTitle}>セッション進捗</Text>\n          <ProgressBar \n            progress={getProgressPercentage() / 100} \n            color=\"#4CAF50\"\n            style={styles.progressBar}\n          />\n          <Text style={styles.progressText}>\n            {currentExerciseIndex + 1} / {exercises.length} 運動完了\n          </Text>\n        </Card.Content>\n      </Card>\n\n      {/* 現在の運動情報 */}\n      <Card style={styles.exerciseCard}>\n        <Card.Content>\n          <View style={styles.exerciseHeader}>\n            <Text style={styles.exerciseName}>{currentExercise.exercise_name}</Text>\n            {currentExercise.requires_ai_analysis && (\n              <Chip \n                icon=\"camera\" \n                mode=\"outlined\" \n                compact\n                onPress={() => navigation.navigate('AIAnalysis', {\n                  exerciseType: currentExercise.exercise_name.includes('スクワット') ? 'squat' : 'general',\n                  exerciseName: currentExercise.exercise_name\n                })}\n              >\n                AI分析\n              </Chip>\n            )}\n          </View>\n          <Text style={styles.exerciseDescription}>\n            {currentExercise.description}\n          </Text>\n          <Text style={styles.exerciseCategory}>\n            カテゴリー: {currentExercise.category_name}\n          </Text>\n        </Card.Content>\n      </Card>\n\n      {/* 休憩中の表示 */}\n      {isResting && (\n        <Surface style={styles.restSurface}>\n          <Text style={styles.restTitle}>休憩中</Text>\n          <Text style={styles.restTime}>{formatTime(restTimeLeft)}</Text>\n          <Button mode=\"outlined\" onPress={handleSkipRest}>\n            休憩をスキップ\n          </Button>\n        </Surface>\n      )}\n\n      {/* セット・レップ情報 */}\n      {!isResting && (\n        <Card style={styles.setCard}>\n          <Card.Content>\n            <View style={styles.setHeader}>\n              <Text style={styles.setTitle}>\n                セット {currentSet} / {currentExercise.assigned_sets}\n              </Text>\n              <Text style={styles.repTitle}>\n                {currentRep} / {currentExercise.assigned_reps} 回\n              </Text>\n            </View>\n            \n            <View style={styles.setProgress}>\n              <ProgressBar \n                progress={currentRep / currentExercise.assigned_reps} \n                color=\"#2196F3\"\n                style={styles.setProgressBar}\n              />\n            </View>\n\n            <View style={styles.timerContainer}>\n              <Text style={styles.timerLabel}>運動時間</Text>\n              <Text style={styles.timerValue}>{formatTime(exerciseTimeElapsed)}</Text>\n            </View>\n\n            <View style={styles.controlButtons}>\n              <Button\n                mode=\"contained\"\n                onPress={handleNextRep}\n                style={styles.nextButton}\n                disabled={currentSession?.isPaused}\n              >\n                {currentRep < currentExercise.assigned_reps ? '次の回数' : 'セット完了'}\n              </Button>\n            </View>\n          </Card.Content>\n        </Card>\n      )}\n\n      {/* コントロールボタン */}\n      <Card style={styles.controlCard}>\n        <Card.Content>\n          <View style={styles.controlRow}>\n            <Button\n              mode={currentSession?.isPaused ? \"contained\" : \"outlined\"}\n              onPress={handlePauseResume}\n              style={styles.controlButton}\n            >\n              {currentSession?.isPaused ? '再開' : '一時停止'}\n            </Button>\n            \n            <Button\n              mode=\"outlined\"\n              onPress={() => setShowCompletionModal(true)}\n              style={styles.controlButton}\n            >\n              セッション終了\n            </Button>\n          </View>\n        </Card.Content>\n      </Card>\n\n      {/* 完了モーダル */}\n      <Portal>\n        <Modal \n          visible={showCompletionModal} \n          onDismiss={() => setShowCompletionModal(false)}\n          contentContainerStyle={styles.modalContainer}\n        >\n          <Text style={styles.modalTitle}>セッション完了</Text>\n          <Text style={styles.modalText}>\n            お疲れ様でした！今日のトレーニングはどうでしたか？\n          </Text>\n          \n          <Divider style={styles.modalDivider} />\n          \n          <Text style={styles.ratingLabel}>痛みレベル (0-10)</Text>\n          <View style={styles.ratingButtons}>\n            {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(level => (\n              <Button\n                key={level}\n                mode={painLevel === level ? \"contained\" : \"outlined\"}\n                onPress={() => setPainLevel(level)}\n                style={styles.ratingButton}\n                compact\n              >\n                {level}\n              </Button>\n            ))}\n          </View>\n\n          <Text style={styles.ratingLabel}>疲労度 (6-20)</Text>\n          <View style={styles.ratingButtons}>\n            {[6, 8, 10, 12, 14, 16, 18, 20].map(scale => (\n              <Button\n                key={scale}\n                mode={borgScale === scale ? \"contained\" : \"outlined\"}\n                onPress={() => setBorgScale(scale)}\n                style={styles.ratingButton}\n                compact\n              >\n                {scale}\n              </Button>\n            ))}\n          </View>\n\n          <View style={styles.modalButtons}>\n            <Button\n              mode=\"outlined\"\n              onPress={() => setShowCompletionModal(false)}\n              style={styles.modalButton}\n            >\n              キャンセル\n            </Button>\n            <Button\n              mode=\"contained\"\n              onPress={handleSessionComplete}\n              style={styles.modalButton}\n            >\n              完了\n            </Button>\n          </View>\n        </Modal>\n      </Portal>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  errorText: {\n    fontSize: 18,\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  progressCard: {\n    margin: 16,\n    elevation: 2,\n  },\n  progressTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 12,\n  },\n  progressBar: {\n    height: 8,\n    borderRadius: 4,\n    marginBottom: 8,\n  },\n  progressText: {\n    fontSize: 14,\n    textAlign: 'center',\n    color: '#666',\n  },\n  exerciseCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n  },\n  exerciseHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  exerciseName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    flex: 1,\n  },\n  exerciseDescription: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 4,\n  },\n  exerciseCategory: {\n    fontSize: 12,\n    color: '#888',\n  },\n  restSurface: {\n    margin: 16,\n    padding: 24,\n    borderRadius: 12,\n    alignItems: 'center',\n    backgroundColor: '#E3F2FD',\n    elevation: 1,\n  },\n  restTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#1976D2',\n    marginBottom: 8,\n  },\n  restTime: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    color: '#1976D2',\n    marginBottom: 16,\n  },\n  setCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n  },\n  setHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  setTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  repTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#2196F3',\n  },\n  setProgress: {\n    marginBottom: 16,\n  },\n  setProgressBar: {\n    height: 6,\n    borderRadius: 3,\n  },\n  timerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  timerLabel: {\n    fontSize: 14,\n    color: '#666',\n  },\n  timerValue: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  controlButtons: {\n    alignItems: 'center',\n  },\n  nextButton: {\n    width: '100%',\n    paddingVertical: 8,\n  },\n  controlCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n  },\n  controlRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  controlButton: {\n    flex: 1,\n    marginHorizontal: 4,\n  },\n  modalContainer: {\n    backgroundColor: 'white',\n    margin: 20,\n    padding: 20,\n    borderRadius: 12,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 16,\n  },\n  modalText: {\n    fontSize: 14,\n    textAlign: 'center',\n    color: '#666',\n    marginBottom: 20,\n  },\n  modalDivider: {\n    marginBottom: 20,\n  },\n  ratingLabel: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  ratingButtons: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginBottom: 16,\n  },\n  ratingButton: {\n    marginRight: 4,\n    marginBottom: 4,\n    minWidth: 40,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 20,\n  },\n  modalButton: {\n    flex: 1,\n    marginHorizontal: 8,\n  },\n});\n\nexport default ExerciseSessionScreen;","import React, { useEffect } from 'react';\nimport {\n  View,\n  StyleSheet,\n  ScrollView,\n} from 'react-native';\nimport {\n  Text,\n  Card,\n  ProgressBar,\n  Chip,\n  Divider,\n  ActivityIndicator,\n} from 'react-native-paper';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setDummyData } from '../store/slices/progressSlice';\n\nconst ProgressScreen = () => {\n  const dispatch = useDispatch();\n  const {\n    weeklyGoal,\n    monthlyStats,\n    recentSessions,\n    isLoading,\n    error,\n  } = useSelector((state) => state.progress);\n\n  useEffect(() => {\n    // デモ用ダミーデータを設定\n    dispatch(setDummyData());\n  }, [dispatch]);\n\n  const getPainLevelColor = (level) => {\n    if (level <= 3) return '#4CAF50';\n    if (level <= 6) return '#FF9800';\n    return '#F44336';\n  };\n\n  const getBorgScaleColor = (scale) => {\n    if (scale <= 11) return '#4CAF50';\n    if (scale <= 15) return '#FF9800';\n    return '#F44336';\n  };\n\n  if (isLoading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" />\n        <Text style={styles.loadingText}>進捗データを読み込み中...</Text>\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView style={styles.container}>\n      {/* 週間目標 */}\n      <Card style={styles.goalCard}>\n        <Card.Content>\n          <Text style={styles.sectionTitle}>今週の目標</Text>\n          <View style={styles.goalContent}>\n            <Text style={styles.goalText}>\n              {weeklyGoal.completed} / {weeklyGoal.total} セッション完了\n            </Text>\n            <ProgressBar\n              progress={weeklyGoal.completed / weeklyGoal.total}\n              color=\"#2E7D32\"\n              style={styles.goalProgress}\n            />\n            <Text style={styles.goalPercentage}>\n              {Math.round((weeklyGoal.completed / weeklyGoal.total) * 100)}%\n            </Text>\n          </View>\n        </Card.Content>\n      </Card>\n\n      {/* 月間統計 */}\n      <Card style={styles.statsCard}>\n        <Card.Content>\n          <Text style={styles.sectionTitle}>今月の統計</Text>\n          \n          <View style={styles.statsGrid}>\n            <View style={styles.statItem}>\n              <Text style={styles.statValue}>{monthlyStats.sessionsCompleted}</Text>\n              <Text style={styles.statLabel}>セッション数</Text>\n            </View>\n            <View style={styles.statItem}>\n              <Text style={styles.statValue}>{monthlyStats.totalExercises}</Text>\n              <Text style={styles.statLabel}>総運動回数</Text>\n            </View>\n          </View>\n\n          <Divider style={styles.statsDivider} />\n\n          <View style={styles.averageStats}>\n            <View style={styles.averageStat}>\n              <Text style={styles.averageLabel}>平均痛みレベル</Text>\n              <View style={styles.averageValue}>\n                <Text style={[styles.averageNumber, { color: getPainLevelColor(monthlyStats.averagePainLevel) }]}>\n                  {monthlyStats.averagePainLevel}\n                </Text>\n                <Text style={styles.averageUnit}>/10</Text>\n              </View>\n            </View>\n            \n            <View style={styles.averageStat}>\n              <Text style={styles.averageLabel}>平均疲労度</Text>\n              <View style={styles.averageValue}>\n                <Text style={[styles.averageNumber, { color: getBorgScaleColor(monthlyStats.averageBorgScale) }]}>\n                  {monthlyStats.averageBorgScale}\n                </Text>\n                <Text style={styles.averageUnit}>/20</Text>\n              </View>\n            </View>\n          </View>\n        </Card.Content>\n      </Card>\n\n      {/* 最近のセッション */}\n      <Card style={styles.sessionsCard}>\n        <Card.Content>\n          <Text style={styles.sectionTitle}>最近のセッション</Text>\n          \n          {recentSessions.map((session, index) => (\n            <View key={index} style={styles.sessionItem}>\n              <View style={styles.sessionHeader}>\n                <Text style={styles.sessionDate}>\n                  {new Date(session.date).toLocaleDateString('ja-JP', {\n                    month: 'short',\n                    day: 'numeric',\n                  })}\n                </Text>\n                <Chip\n                  mode=\"outlined\"\n                  style={[styles.painChip, { borderColor: getPainLevelColor(session.painLevel) }]}\n                  textStyle={{ color: getPainLevelColor(session.painLevel) }}\n                >\n                  痛み {session.painLevel}\n                </Chip>\n              </View>\n              \n              <View style={styles.sessionDetails}>\n                <Text style={styles.sessionDetail}>\n                  {session.exercises}種目 • {session.duration}分\n                </Text>\n              </View>\n              \n              {index < recentSessions.length - 1 && (\n                <Divider style={styles.sessionDivider} />\n              )}\n            </View>\n          ))}\n        </Card.Content>\n      </Card>\n\n      {/* 評価指標の説明 */}\n      <Card style={styles.legendCard}>\n        <Card.Content>\n          <Text style={styles.sectionTitle}>評価指標</Text>\n          \n          <View style={styles.legendSection}>\n            <Text style={styles.legendTitle}>痛みレベル (VAS)</Text>\n            <View style={styles.legendItems}>\n              <View style={styles.legendItem}>\n                <View style={[styles.legendColor, { backgroundColor: '#4CAF50' }]} />\n                <Text style={styles.legendText}>0-3: 軽度</Text>\n              </View>\n              <View style={styles.legendItem}>\n                <View style={[styles.legendColor, { backgroundColor: '#FF9800' }]} />\n                <Text style={styles.legendText}>4-6: 中等度</Text>\n              </View>\n              <View style={styles.legendItem}>\n                <View style={[styles.legendColor, { backgroundColor: '#F44336' }]} />\n                <Text style={styles.legendText}>7-10: 重度</Text>\n              </View>\n            </View>\n          </View>\n\n          <View style={styles.legendSection}>\n            <Text style={styles.legendTitle}>疲労度 (Borgスケール)</Text>\n            <View style={styles.legendItems}>\n              <View style={styles.legendItem}>\n                <View style={[styles.legendColor, { backgroundColor: '#4CAF50' }]} />\n                <Text style={styles.legendText}>6-11: 楽</Text>\n              </View>\n              <View style={styles.legendItem}>\n                <View style={[styles.legendColor, { backgroundColor: '#FF9800' }]} />\n                <Text style={styles.legendText}>12-15: やや〜きつい</Text>\n              </View>\n              <View style={styles.legendItem}>\n                <View style={[styles.legendColor, { backgroundColor: '#F44336' }]} />\n                <Text style={styles.legendText}>16-20: 非常にきつい</Text>\n              </View>\n            </View>\n          </View>\n        </Card.Content>\n      </Card>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  goalCard: {\n    margin: 16,\n    marginBottom: 8,\n    elevation: 2,\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 12,\n  },\n  goalContent: {\n    alignItems: 'center',\n  },\n  goalText: {\n    fontSize: 14,\n    marginBottom: 8,\n    color: '#333',\n  },\n  goalProgress: {\n    width: '100%',\n    height: 8,\n    borderRadius: 4,\n    marginBottom: 4,\n  },\n  goalPercentage: {\n    fontSize: 12,\n    color: '#666',\n    alignSelf: 'flex-end',\n  },\n  statsCard: {\n    margin: 16,\n    marginTop: 8,\n    marginBottom: 8,\n    elevation: 2,\n  },\n  statsGrid: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 16,\n  },\n  statItem: {\n    alignItems: 'center',\n  },\n  statValue: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#2E7D32',\n  },\n  statLabel: {\n    fontSize: 12,\n    color: '#666',\n    marginTop: 4,\n  },\n  statsDivider: {\n    marginBottom: 16,\n  },\n  averageStats: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n  averageStat: {\n    alignItems: 'center',\n  },\n  averageLabel: {\n    fontSize: 12,\n    color: '#666',\n    marginBottom: 4,\n  },\n  averageValue: {\n    flexDirection: 'row',\n    alignItems: 'baseline',\n  },\n  averageNumber: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  averageUnit: {\n    fontSize: 12,\n    color: '#666',\n    marginLeft: 2,\n  },\n  sessionsCard: {\n    margin: 16,\n    marginTop: 8,\n    marginBottom: 8,\n    elevation: 2,\n  },\n  sessionItem: {\n    marginBottom: 12,\n  },\n  sessionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 4,\n  },\n  sessionDate: {\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n  painChip: {\n    borderWidth: 1,\n  },\n  sessionDetails: {\n    marginLeft: 4,\n  },\n  sessionDetail: {\n    fontSize: 12,\n    color: '#666',\n  },\n  sessionDivider: {\n    marginTop: 12,\n  },\n  legendCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 1,\n    backgroundColor: '#FAFAFA',\n  },\n  legendSection: {\n    marginBottom: 12,\n  },\n  legendTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  legendItems: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  legendItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: 16,\n  },\n  legendColor: {\n    width: 12,\n    height: 12,\n    borderRadius: 6,\n    marginRight: 6,\n  },\n  legendText: {\n    fontSize: 12,\n    color: '#333',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n  },\n  loadingText: {\n    marginTop: 16,\n    fontSize: 16,\n    color: '#666',\n  },\n});\n\nexport default ProgressScreen;","/**\n * 競技復帰チェックリスト\n * 術後6ヶ月以降の競技復帰評価項目\n */\n\nexport const returnToSportCriteria = {\n  title: '競技復帰チェックリスト',\n  description: '術後6ヶ月以降の競技復帰に向けた総合評価項目。すべての基準をクリアしてから競技復帰を検討してください。',\n  evaluationPeriod: '術後6ヶ月以降',\n  \n  categories: [\n    {\n      id: 'medical_clearance',\n      title: '医学的クリアランス',\n      description: '医療従事者による評価と許可',\n      criteria: [\n        {\n          id: 'surgeon_clearance',\n          title: '執刀医の復帰許可',\n          description: '手術を行った医師からの競技復帰許可',\n          type: 'medical_approval',\n          required: true,\n          measurementMethod: '医師による診察・評価',\n          passingCriteria: '執刀医による競技復帰許可',\n          icon: '👨‍⚕️',\n          weight: 10, // 最重要\n        },\n        {\n          id: 'pt_clearance',\n          title: '理学療法士の評価クリア',\n          description: '理学療法士による機能評価の合格',\n          type: 'medical_approval',\n          required: true,\n          measurementMethod: '理学療法士による機能評価',\n          passingCriteria: '理学療法士による復帰推奨',\n          icon: '🤸‍♂️',\n          weight: 8,\n        }\n      ]\n    },\n    {\n      id: 'physical_function',\n      title: '身体機能評価',\n      description: '筋力・可動域・バランス等の身体機能',\n      criteria: [\n        {\n          id: 'knee_rom',\n          title: '膝関節可動域（完全回復）',\n          description: '膝関節の屈曲・伸展可動域が健側と同等',\n          type: 'rom_measurement',\n          required: true,\n          measurementMethod: 'ゴニオメーター測定',\n          passingCriteria: '健側との差2°以内',\n          icon: '📐',\n          weight: 7,\n        },\n        {\n          id: 'quadriceps_strength',\n          title: '大腿四頭筋筋力（90%以上）',\n          description: '大腿四頭筋筋力が健側の90%以上',\n          type: 'strength_test',\n          required: true,\n          measurementMethod: '等尺性筋力測定',\n          passingCriteria: '健側の90%以上',\n          icon: '💪',\n          weight: 9,\n        },\n        {\n          id: 'hamstring_strength',\n          title: 'ハムストリングス筋力（90%以上）',\n          description: 'ハムストリングス筋力が健側の90%以上',\n          type: 'strength_test',\n          required: true,\n          measurementMethod: '等尺性筋力測定',\n          passingCriteria: '健側の90%以上',\n          icon: '🦵',\n          weight: 8,\n        },\n        {\n          id: 'hamstring_quad_ratio',\n          title: 'H/Q比（60%以上）',\n          description: 'ハムストリングス/大腿四頭筋比が適正範囲',\n          type: 'ratio_calculation',\n          required: true,\n          measurementMethod: '筋力測定値から算出',\n          passingCriteria: '60%以上',\n          icon: '⚖️',\n          weight: 7,\n        }\n      ]\n    },\n    {\n      id: 'functional_tests',\n      title: '機能的テスト',\n      description: 'ホップテスト・動作パフォーマンス評価',\n      criteria: [\n        {\n          id: 'single_hop',\n          title: 'シングルホップテスト（90%以上）',\n          description: '片脚ホップ距離が健側の90%以上',\n          type: 'hop_test',\n          required: true,\n          measurementMethod: '最大跳躍距離測定（3回の平均）',\n          passingCriteria: '健側の90%以上',\n          icon: '🦘',\n          weight: 8,\n        },\n        {\n          id: 'triple_hop',\n          title: 'トリプルホップテスト（90%以上）',\n          description: '3回連続ホップ距離が健側の90%以上',\n          type: 'hop_test',\n          required: true,\n          measurementMethod: '3回連続跳躍距離測定',\n          passingCriteria: '健側の90%以上',\n          icon: '🏃‍♂️',\n          weight: 8,\n        },\n        {\n          id: 'crossover_hop',\n          title: 'クロスオーバーホップテスト（90%以上）',\n          description: '左右交互ホップ距離が健側の90%以上',\n          type: 'hop_test',\n          required: true,\n          measurementMethod: '左右交互跳躍距離測定',\n          passingCriteria: '健側の90%以上',\n          icon: '↔️',\n          weight: 8,\n        },\n        {\n          id: 'timed_hop',\n          title: '6mタイムドホップテスト（90%以上）',\n          description: '6m片脚ホップタイムが健側の110%以内',\n          type: 'hop_test',\n          required: true,\n          measurementMethod: '6m片脚ホップの時間測定',\n          passingCriteria: '健側の110%以内（時間が短いほど良い）',\n          icon: '⏱️',\n          weight: 8,\n        }\n      ]\n    },\n    {\n      id: 'movement_quality',\n      title: '動作の質',\n      description: '着地動作・動的バランス・協調性',\n      criteria: [\n        {\n          id: 'landing_technique',\n          title: '着地動作の質',\n          description: 'ドロップジャンプでの適切な着地フォーム',\n          type: 'movement_analysis',\n          required: true,\n          measurementMethod: '動作分析・観察評価',\n          passingCriteria: '膝外反なし、体幹安定',\n          icon: '🎯',\n          weight: 9,\n        },\n        {\n          id: 'cutting_movement',\n          title: 'カッティング動作',\n          description: '方向転換動作の適切な実施',\n          type: 'movement_analysis',\n          required: true,\n          measurementMethod: '45°カッティング動作評価',\n          passingCriteria: '膝外反なし、スムーズな動作',\n          icon: '🔄',\n          weight: 8,\n        },\n        {\n          id: 'single_leg_squat_quality',\n          title: '片脚スクワットの質',\n          description: '片脚スクワット60°での動作品質',\n          type: 'movement_analysis',\n          required: true,\n          measurementMethod: '片脚スクワット動作観察',\n          passingCriteria: '膝外反なし、20回連続実施可能',\n          icon: '🏋️‍♂️',\n          weight: 7,\n        }\n      ]\n    },\n    {\n      id: 'psychological_readiness',\n      title: '心理的準備度',\n      description: '競技復帰への心理的準備と恐怖心評価',\n      criteria: [\n        {\n          id: 'acl_rsi_score',\n          title: 'ACL-RSIスコア（≥56点）',\n          description: 'ACL復帰スポーツ心理準備度評価',\n          type: 'psychological_test',\n          required: true,\n          measurementMethod: 'ACL-RSI質問票（12項目）',\n          passingCriteria: '56点以上（満点84点）',\n          icon: '🧠',\n          weight: 8,\n        },\n        {\n          id: 'fear_avoidance',\n          title: '恐怖回避行動の評価',\n          description: '競技特異的動作への恐怖心の程度',\n          type: 'psychological_assessment',\n          required: true,\n          measurementMethod: '心理的評価・面談',\n          passingCriteria: '競技特異的動作への恐怖心が minimal',\n          icon: '😰',\n          weight: 7,\n        },\n        {\n          id: 'confidence_level',\n          title: '自信レベル',\n          description: '競技復帰への自信と意欲',\n          type: 'psychological_assessment',\n          required: true,\n          measurementMethod: 'VASスケール（0-10）',\n          passingCriteria: '8/10以上',\n          icon: '💪',\n          weight: 6,\n        }\n      ]\n    },\n    {\n      id: 'sport_specific',\n      title: '競技特異的能力',\n      description: '各競技に特化した技能と体力',\n      criteria: [\n        {\n          id: 'sport_specific_skills',\n          title: '競技特異的技能',\n          description: '各競技の基本的な技術動作',\n          type: 'skill_assessment',\n          required: true,\n          measurementMethod: '競技特異的動作評価',\n          passingCriteria: '受傷前レベルの80%以上',\n          icon: '⚽',\n          weight: 8,\n        },\n        {\n          id: 'agility_performance',\n          title: 'アジリティパフォーマンス',\n          description: 'T-test、505アジリティテスト等',\n          type: 'performance_test',\n          required: true,\n          measurementMethod: 'アジリティテスト実施',\n          passingCriteria: '健側の95%以上',\n          icon: '🏃‍♀️',\n          weight: 8,\n        },\n        {\n          id: 'plyometric_performance',\n          title: 'プライオメトリック能力',\n          description: '爆発的パワー・反応時間',\n          type: 'performance_test',\n          required: true,\n          measurementMethod: 'プライオメトリックテスト',\n          passingCriteria: '健側の90%以上',\n          icon: '💥',\n          weight: 7,\n        }\n      ]\n    },\n    {\n      id: 'injury_prevention',\n      title: '再損傷予防',\n      description: '継続的なトレーニングと予防策',\n      criteria: [\n        {\n          id: 'prevention_program',\n          title: '予防プログラムの理解',\n          description: 'FIFA11+等の予防プログラムの習得',\n          type: 'education_assessment',\n          required: true,\n          measurementMethod: 'プログラム実技チェック',\n          passingCriteria: '適切な実施が可能',\n          icon: '🛡️',\n          weight: 7,\n        },\n        {\n          id: 'maintenance_plan',\n          title: '維持トレーニング計画',\n          description: '復帰後の継続的トレーニング計画',\n          type: 'plan_assessment',\n          required: true,\n          measurementMethod: 'トレーニング計画書作成',\n          passingCriteria: '具体的な計画が策定済み',\n          icon: '📋',\n          weight: 6,\n        }\n      ]\n    }\n  ],\n  \n  // 総合評価の算出\n  getOverallEvaluation: (results) => {\n    const allCriteria = returnToSportCriteria.categories.flatMap(cat => cat.criteria);\n    const totalWeight = allCriteria.reduce((sum, criterion) => sum + criterion.weight, 0);\n    \n    let achievedWeight = 0;\n    let passedCount = 0;\n    let totalCount = allCriteria.length;\n    \n    allCriteria.forEach(criterion => {\n      const result = results.find(r => r.id === criterion.id);\n      if (result && result.passed) {\n        achievedWeight += criterion.weight;\n        passedCount++;\n      }\n    });\n    \n    const weightedScore = (achievedWeight / totalWeight) * 100;\n    const passRate = (passedCount / totalCount) * 100;\n    \n    return {\n      totalCriteria: totalCount,\n      passedCriteria: passedCount,\n      passRate,\n      weightedScore,\n      canReturnToSport: weightedScore >= 85 && passRate >= 90,\n      recommendation: getReturnRecommendation(weightedScore, passRate)\n    };\n  }\n};\n\nconst getReturnRecommendation = (weightedScore, passRate) => {\n  if (weightedScore >= 85 && passRate >= 90) {\n    return {\n      level: 'success',\n      title: '競技復帰可能',\n      message: 'すべての主要基準をクリアしています。段階的な競技復帰を開始できます。',\n      nextSteps: [\n        '段階的な練習参加（練習強度50%から開始）',\n        '2週間ごとの段階的強度向上',\n        '4-6週間後の試合復帰検討',\n        '継続的な予防トレーニング実施'\n      ],\n      returnPhase: 'phase_4_gradual_return'\n    };\n  } else if (weightedScore >= 75 && passRate >= 80) {\n    return {\n      level: 'warning',\n      title: '条件付き復帰可能',\n      message: '多くの基準をクリアしていますが、一部改善が必要です。',\n      nextSteps: [\n        '未達成項目の集中的改善',\n        '4週間後の再評価',\n        '医療従事者との詳細相談',\n        '段階的復帰プログラムの調整'\n      ],\n      returnPhase: 'phase_3_final_preparation'\n    };\n  } else if (weightedScore >= 60 && passRate >= 70) {\n    return {\n      level: 'caution',\n      title: '復帰準備継続',\n      message: '基礎的な基準は満たしていますが、さらなる改善が必要です。',\n      nextSteps: [\n        '機能的トレーニングの強化',\n        '心理的サポートの検討',\n        '6-8週間後の再評価',\n        '競技特異的訓練の強化'\n      ],\n      returnPhase: 'phase_3_advanced_training'\n    };\n  } else {\n    return {\n      level: 'danger',\n      title: '復帰は時期尚早',\n      message: '多くの重要な基準が未達成です。基礎的な能力向上に集中してください。',\n      nextSteps: [\n        '基礎的な筋力・機能訓練の継続',\n        '段階的なプログラム進行',\n        '8-12週間後の再評価',\n        'リハビリテーション計画の見直し'\n      ],\n      returnPhase: 'phase_2_basic_training'\n    };\n  }\n};\n\n// カテゴリ別の重要度\nexport const categoryImportance = {\n  medical_clearance: {\n    importance: 'critical',\n    description: '医学的許可は絶対条件です',\n    mustPass: true\n  },\n  physical_function: {\n    importance: 'high',\n    description: '身体機能の回復は復帰の基礎です',\n    mustPass: true\n  },\n  functional_tests: {\n    importance: 'high',\n    description: '機能的能力は競技パフォーマンスに直結します',\n    mustPass: false\n  },\n  movement_quality: {\n    importance: 'high',\n    description: '動作の質は再損傷予防に重要です',\n    mustPass: false\n  },\n  psychological_readiness: {\n    importance: 'medium',\n    description: '心理的準備は長期的成功に影響します',\n    mustPass: false\n  },\n  sport_specific: {\n    importance: 'medium',\n    description: '競技特異的能力は段階的に改善可能です',\n    mustPass: false\n  },\n  injury_prevention: {\n    importance: 'medium',\n    description: '予防知識は継続的な健康に重要です',\n    mustPass: false\n  }\n};\n\nexport default returnToSportCriteria;","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  StyleSheet,\n  ScrollView,\n  Alert,\n  Dimensions,\n} from 'react-native';\nimport {\n  Text,\n  Card,\n  Button,\n  List,\n  Chip,\n  ProgressBar,\n  IconButton,\n  Portal,\n  Modal,\n  Divider,\n  Badge,\n} from 'react-native-paper';\nimport { returnToSportCriteria, categoryImportance } from '../data/returnToSportCriteria';\n\nconst { width } = Dimensions.get('window');\n\nconst ReturnToSportScreen = ({ navigation }) => {\n  const [evaluationResults, setEvaluationResults] = useState([]);\n  const [showDetailModal, setShowDetailModal] = useState(false);\n  const [selectedCriteria, setSelectedCriteria] = useState(null);\n  const [overallResult, setOverallResult] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n\n  useEffect(() => {\n    // 初期化：すべての基準を未評価に設定\n    const allCriteria = returnToSportCriteria.categories.flatMap(cat => cat.criteria);\n    const initialResults = allCriteria.map(criteria => ({\n      id: criteria.id,\n      passed: false,\n      evaluated: false,\n      value: null,\n      notes: ''\n    }));\n    setEvaluationResults(initialResults);\n  }, []);\n\n  useEffect(() => {\n    // 評価結果が更新されたら総合判定を計算\n    if (evaluationResults.length > 0) {\n      const result = returnToSportCriteria.getOverallEvaluation(evaluationResults);\n      setOverallResult(result);\n    }\n  }, [evaluationResults]);\n\n  const handleCriteriaEvaluation = (criteriaId, passed, value = null, notes = '') => {\n    setEvaluationResults(prev => \n      prev.map(result => \n        result.id === criteriaId \n          ? { ...result, passed, evaluated: true, value, notes }\n          : result\n      )\n    );\n  };\n\n  const showCriteriaDetail = (criteria) => {\n    setSelectedCriteria(criteria);\n    setShowDetailModal(true);\n  };\n\n  const getCategoryProgress = (categoryId) => {\n    const category = returnToSportCriteria.categories.find(cat => cat.id === categoryId);\n    if (!category) return { passed: 0, total: 0, percentage: 0 };\n\n    const total = category.criteria.length;\n    const passed = category.criteria.filter(criterion => {\n      const result = evaluationResults.find(r => r.id === criterion.id);\n      return result && result.passed;\n    }).length;\n\n    return {\n      passed,\n      total,\n      percentage: total > 0 ? (passed / total) * 100 : 0\n    };\n  };\n\n  const getStatusColor = (result) => {\n    if (!result.evaluated) return '#9E9E9E';\n    return result.passed ? '#4CAF50' : '#F44336';\n  };\n\n  const getStatusIcon = (result) => {\n    if (!result.evaluated) return 'help-circle-outline';\n    return result.passed ? 'check-circle' : 'close-circle';\n  };\n\n  const getImportanceColor = (categoryId) => {\n    const importance = categoryImportance[categoryId]?.importance;\n    switch (importance) {\n      case 'critical': return '#F44336';\n      case 'high': return '#FF9800';\n      case 'medium': return '#2196F3';\n      default: return '#9E9E9E';\n    }\n  };\n\n  const getImportanceLabel = (categoryId) => {\n    const importance = categoryImportance[categoryId]?.importance;\n    switch (importance) {\n      case 'critical': return '必須';\n      case 'high': return '重要';\n      case 'medium': return '推奨';\n      default: return '標準';\n    }\n  };\n\n  const renderCategoryCard = (category) => {\n    const progress = getCategoryProgress(category.id);\n    const importance = categoryImportance[category.id];\n\n    return (\n      <Card key={category.id} style={styles.categoryCard}>\n        <Card.Content>\n          <View style={styles.categoryHeader}>\n            <View style={styles.categoryInfo}>\n              <Text style={styles.categoryTitle}>{category.title}</Text>\n              <Text style={styles.categoryDescription}>{category.description}</Text>\n            </View>\n            <View style={styles.categoryBadges}>\n              <Chip \n                mode=\"outlined\" \n                compact\n                style={[styles.importanceChip, { borderColor: getImportanceColor(category.id) }]}\n                textStyle={{ color: getImportanceColor(category.id), fontSize: 10 }}\n              >\n                {getImportanceLabel(category.id)}\n              </Chip>\n              <Badge size={24} style={styles.progressBadge}>\n                {progress.passed}/{progress.total}\n              </Badge>\n            </View>\n          </View>\n\n          <View style={styles.progressSection}>\n            <Text style={styles.progressLabel}>\n              進捗: {progress.passed}/{progress.total} ({Math.round(progress.percentage)}%)\n            </Text>\n            <ProgressBar \n              progress={progress.percentage / 100} \n              color={getImportanceColor(category.id)}\n              style={styles.progressBar}\n            />\n          </View>\n\n          {importance?.description && (\n            <Text style={styles.importanceDescription}>\n              {importance.description}\n            </Text>\n          )}\n\n          <View style={styles.criteriaList}>\n            {category.criteria.map(criterion => {\n              const result = evaluationResults.find(r => r.id === criterion.id);\n              return (\n                <List.Item\n                  key={criterion.id}\n                  title={criterion.title}\n                  description={criterion.passingCriteria}\n                  left={() => (\n                    <View style={styles.criteriaIcon}>\n                      <Text style={styles.criteriaEmoji}>{criterion.icon}</Text>\n                    </View>\n                  )}\n                  right={() => (\n                    <View style={styles.criteriaActions}>\n                      <IconButton\n                        icon={getStatusIcon(result)}\n                        iconColor={getStatusColor(result)}\n                        size={20}\n                        onPress={() => showCriteriaDetail(criterion)}\n                      />\n                      <View style={styles.evaluationButtons}>\n                        <IconButton\n                          icon=\"check\"\n                          iconColor={result?.passed && result?.evaluated ? '#4CAF50' : '#ccc'}\n                          size={16}\n                          onPress={() => handleCriteriaEvaluation(criterion.id, true)}\n                          style={styles.miniButton}\n                        />\n                        <IconButton\n                          icon=\"close\"\n                          iconColor={!result?.passed && result?.evaluated ? '#F44336' : '#ccc'}\n                          size={16}\n                          onPress={() => handleCriteriaEvaluation(criterion.id, false)}\n                          style={styles.miniButton}\n                        />\n                      </View>\n                    </View>\n                  )}\n                  onPress={() => showCriteriaDetail(criterion)}\n                  style={styles.criteriaItem}\n                />\n              );\n            })}\n          </View>\n        </Card.Content>\n      </Card>\n    );\n  };\n\n  const renderOverallResult = () => {\n    if (!overallResult) return null;\n\n    const getResultColor = () => {\n      if (overallResult.canReturnToSport) return '#4CAF50';\n      if (overallResult.weightedScore >= 75) return '#FF9800';\n      if (overallResult.weightedScore >= 60) return '#2196F3';\n      return '#F44336';\n    };\n\n    return (\n      <Card style={[styles.resultCard, { borderLeftColor: getResultColor() }]}>\n        <Card.Content>\n          <View style={styles.resultHeader}>\n            <Text style={styles.resultTitle}>総合評価結果</Text>\n            <View style={styles.resultScores}>\n              <Chip \n                mode=\"outlined\" \n                style={[styles.scoreChip, { borderColor: getResultColor() }]}\n                textStyle={{ color: getResultColor() }}\n              >\n                {Math.round(overallResult.weightedScore)}点\n              </Chip>\n            </View>\n          </View>\n          \n          <View style={styles.progressSection}>\n            <Text style={styles.progressLabel}>\n              重み付けスコア: {Math.round(overallResult.weightedScore)}/100点\n            </Text>\n            <ProgressBar \n              progress={overallResult.weightedScore / 100} \n              color={getResultColor()}\n              style={styles.progressBar}\n            />\n          </View>\n\n          <View style={styles.progressSection}>\n            <Text style={styles.progressLabel}>\n              達成率: {overallResult.passedCriteria}/{overallResult.totalCriteria}項目 ({Math.round(overallResult.passRate)}%)\n            </Text>\n            <ProgressBar \n              progress={overallResult.passRate / 100} \n              color={getResultColor()}\n              style={styles.progressBar}\n            />\n          </View>\n\n          <View style={styles.recommendationSection}>\n            <Text style={[styles.recommendationTitle, { color: getResultColor() }]}>\n              {overallResult.recommendation.title}\n            </Text>\n            <Text style={styles.recommendationMessage}>\n              {overallResult.recommendation.message}\n            </Text>\n            \n            <Text style={styles.nextStepsTitle}>推奨される次のステップ:</Text>\n            {overallResult.recommendation.nextSteps.map((step, index) => (\n              <Text key={index} style={styles.nextStepItem}>\n                • {step}\n              </Text>\n            ))}\n          </View>\n\n          {overallResult.canReturnToSport && (\n            <Button\n              mode=\"contained\"\n              onPress={() => Alert.alert('注意', '医療従事者の最終確認を得てから段階的な競技復帰を開始してください。')}\n              style={styles.returnButton}\n              buttonColor=\"#4CAF50\"\n            >\n              競技復帰準備完了\n            </Button>\n          )}\n        </Card.Content>\n      </Card>\n    );\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      {/* ヘッダー情報 */}\n      <Card style={styles.headerCard}>\n        <Card.Content>\n          <Text style={styles.screenTitle}>{returnToSportCriteria.title}</Text>\n          <Text style={styles.screenDescription}>{returnToSportCriteria.description}</Text>\n          <Chip mode=\"outlined\" style={styles.periodChip}>\n            評価時期: {returnToSportCriteria.evaluationPeriod}\n          </Chip>\n        </Card.Content>\n      </Card>\n\n      {/* 総合結果 */}\n      {renderOverallResult()}\n\n      {/* カテゴリ別評価 */}\n      <Text style={styles.sectionTitle}>カテゴリ別評価</Text>\n      {returnToSportCriteria.categories.map(renderCategoryCard)}\n\n      {/* 詳細モーダル */}\n      <Portal>\n        <Modal\n          visible={showDetailModal}\n          onDismiss={() => setShowDetailModal(false)}\n          contentContainerStyle={styles.modalContainer}\n        >\n          {selectedCriteria && (\n            <ScrollView style={styles.modalScroll}>\n              <View style={styles.modalHeader}>\n                <Text style={styles.modalTitle}>{selectedCriteria.title}</Text>\n                <IconButton\n                  icon=\"close\"\n                  onPress={() => setShowDetailModal(false)}\n                />\n              </View>\n              <Divider />\n              <View style={styles.modalContent}>\n                <Text style={styles.modalDescription}>\n                  {selectedCriteria.description}\n                </Text>\n                \n                <Text style={styles.detailSectionTitle}>測定方法</Text>\n                <Text style={styles.detailText}>\n                  {selectedCriteria.measurementMethod}\n                </Text>\n                \n                <Text style={styles.detailSectionTitle}>合格基準</Text>\n                <Text style={[styles.detailText, styles.passingCriteriaText]}>\n                  {selectedCriteria.passingCriteria}\n                </Text>\n                \n                <Text style={styles.detailSectionTitle}>重要度</Text>\n                <Text style={styles.detailText}>\n                  重み: {selectedCriteria.weight}/10\n                </Text>\n\n                <View style={styles.modalEvaluation}>\n                  <Text style={styles.modalEvaluationTitle}>評価結果</Text>\n                  <View style={styles.modalEvaluationButtons}>\n                    <Button\n                      mode=\"contained\"\n                      onPress={() => {\n                        handleCriteriaEvaluation(selectedCriteria.id, true);\n                        setShowDetailModal(false);\n                      }}\n                      style={styles.modalEvalButton}\n                      buttonColor=\"#4CAF50\"\n                    >\n                      合格\n                    </Button>\n                    <Button\n                      mode=\"contained\"\n                      onPress={() => {\n                        handleCriteriaEvaluation(selectedCriteria.id, false);\n                        setShowDetailModal(false);\n                      }}\n                      style={styles.modalEvalButton}\n                      buttonColor=\"#F44336\"\n                    >\n                      未達成\n                    </Button>\n                  </View>\n                </View>\n              </View>\n            </ScrollView>\n          )}\n        </Modal>\n      </Portal>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  headerCard: {\n    margin: 16,\n    elevation: 2,\n  },\n  screenTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  screenDescription: {\n    fontSize: 14,\n    color: '#666',\n    lineHeight: 20,\n    marginBottom: 12,\n  },\n  periodChip: {\n    alignSelf: 'flex-start',\n  },\n  resultCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n    borderLeftWidth: 4,\n  },\n  resultHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  resultTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  resultScores: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  scoreChip: {\n    borderWidth: 1,\n  },\n  progressSection: {\n    marginBottom: 12,\n  },\n  progressLabel: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 4,\n  },\n  progressBar: {\n    height: 8,\n    borderRadius: 4,\n  },\n  recommendationSection: {\n    marginTop: 8,\n  },\n  recommendationTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  recommendationMessage: {\n    fontSize: 14,\n    color: '#333',\n    lineHeight: 20,\n    marginBottom: 12,\n  },\n  nextStepsTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  nextStepItem: {\n    fontSize: 14,\n    color: '#666',\n    lineHeight: 20,\n    marginLeft: 8,\n  },\n  returnButton: {\n    marginTop: 16,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginHorizontal: 16,\n    marginBottom: 12,\n  },\n  categoryCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n  },\n  categoryHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: 12,\n  },\n  categoryInfo: {\n    flex: 1,\n    marginRight: 8,\n  },\n  categoryTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 4,\n  },\n  categoryDescription: {\n    fontSize: 12,\n    color: '#666',\n    lineHeight: 16,\n  },\n  categoryBadges: {\n    alignItems: 'flex-end',\n  },\n  importanceChip: {\n    marginBottom: 4,\n    borderWidth: 1,\n  },\n  progressBadge: {\n    backgroundColor: '#2196F3',\n  },\n  importanceDescription: {\n    fontSize: 12,\n    color: '#666',\n    fontStyle: 'italic',\n    marginBottom: 12,\n  },\n  criteriaList: {\n    marginTop: 8,\n  },\n  criteriaItem: {\n    paddingVertical: 4,\n    paddingHorizontal: 0,\n  },\n  criteriaIcon: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 8,\n  },\n  criteriaEmoji: {\n    fontSize: 20,\n  },\n  criteriaActions: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  evaluationButtons: {\n    flexDirection: 'row',\n  },\n  miniButton: {\n    margin: 0,\n    width: 32,\n    height: 32,\n  },\n  modalContainer: {\n    backgroundColor: 'white',\n    margin: 20,\n    borderRadius: 8,\n    maxHeight: '90%',\n  },\n  modalScroll: {\n    maxHeight: '100%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    flex: 1,\n  },\n  modalContent: {\n    padding: 16,\n  },\n  modalDescription: {\n    fontSize: 14,\n    color: '#333',\n    lineHeight: 20,\n    marginBottom: 16,\n  },\n  detailSectionTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#333',\n    marginTop: 12,\n    marginBottom: 8,\n  },\n  detailText: {\n    fontSize: 14,\n    color: '#666',\n    lineHeight: 20,\n  },\n  passingCriteriaText: {\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  modalEvaluation: {\n    marginTop: 20,\n    paddingTop: 16,\n    borderTopWidth: 1,\n    borderTopColor: '#eee',\n  },\n  modalEvaluationTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 12,\n    textAlign: 'center',\n  },\n  modalEvaluationButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n  modalEvalButton: {\n    minWidth: 100,\n  },\n});\n\nexport default ReturnToSportScreen;","/**\n * ランニング開始基準評価項目\n * 術後3ヶ月時点での評価項目\n */\n\nexport const runningStartCriteria = {\n  title: 'ランニング開始基準評価',\n  description: '術後3ヶ月時点での評価項目。すべての基準をクリアしてからランニングを開始してください。',\n  evaluationPeriod: '術後12週以降',\n  \n  criteria: [\n    {\n      id: 'period',\n      category: '期間',\n      title: '術後12週以上経過していること',\n      description: '手術から最低12週間が経過している必要があります',\n      type: 'period_check',\n      required: true,\n      measurementMethod: '手術日からの経過日数',\n      passingCriteria: '84日以上（12週間）',\n      icon: '📅',\n    },\n    {\n      id: 'pain_swelling',\n      category: '症状',\n      title: '日常活動で痛みや腫れがないこと',\n      description: '歩行、階段昇降、日常動作において痛みや腫れが認められない',\n      type: 'symptom_check',\n      required: true,\n      measurementMethod: 'VASスケール評価',\n      passingCriteria: 'VAS 0-1/10（日常活動時）',\n      icon: '🚫',\n    },\n    {\n      id: 'knee_extension',\n      category: 'ROM',\n      title: '完全な膝伸展ROM',\n      description: '膝関節の完全伸展（0°）が達成されている',\n      type: 'rom_measurement',\n      required: true,\n      measurementMethod: 'ゴニオメーター測定',\n      passingCriteria: '0°（完全伸展）',\n      icon: '📐',\n    },\n    {\n      id: 'knee_flexion',\n      category: 'ROM',\n      title: '膝屈曲ROM（健側との差）',\n      description: '膝屈曲可動域が健側との差が許容範囲内である',\n      type: 'rom_measurement',\n      required: true,\n      measurementMethod: 'ゴニオメーター測定（両側比較）',\n      passingCriteria: '健側との差が5°から10°以内',\n      icon: '📏',\n    },\n    {\n      id: 'quadriceps_strength',\n      category: '筋力',\n      title: '大腿四頭筋筋力（健側の80%以上）',\n      description: '大腿四頭筋の筋力が健側と比較して十分回復している',\n      type: 'strength_test',\n      required: true,\n      measurementMethod: '筋力測定器または5RMレッグプレス',\n      passingCriteria: '健側の80%以上',\n      icon: '💪',\n    },\n    {\n      id: 'single_leg_squat',\n      category: '機能評価',\n      title: '片脚スクワット（45°-60°、外反なし）',\n      description: '良好なコントロールで片脚スクワットを実施できる',\n      type: 'functional_test',\n      required: true,\n      measurementMethod: '動作観察・分析',\n      passingCriteria: '45°-60°の範囲で外反なく10回実施可能',\n      icon: '🏃',\n    }\n  ],\n  \n  // 評価結果の判定\n  getEvaluationResult: (results) => {\n    const totalCriteria = runningStartCriteria.criteria.length;\n    const passedCriteria = results.filter(result => result.passed).length;\n    const passRate = (passedCriteria / totalCriteria) * 100;\n    \n    return {\n      totalCriteria,\n      passedCriteria,\n      passRate,\n      canStartRunning: passedCriteria === totalCriteria,\n      recommendation: getRecommendation(passedCriteria, totalCriteria)\n    };\n  }\n};\n\nconst getRecommendation = (passed, total) => {\n  if (passed === total) {\n    return {\n      level: 'success',\n      title: 'ランニング開始可能',\n      message: 'すべての基準をクリアしています。医療従事者の許可を得てランニングを開始できます。',\n      nextSteps: [\n        'トレッドミルでのウォーキングから開始',\n        '段階的にランニング強度を上げる',\n        '症状の変化を注意深く観察する'\n      ]\n    };\n  } else if (passed >= total * 0.8) {\n    return {\n      level: 'warning',\n      title: 'もう少しで開始可能',\n      message: 'ほとんどの基準をクリアしています。未達成の項目を重点的に改善してください。',\n      nextSteps: [\n        '未達成項目の集中的なトレーニング',\n        '2週間後の再評価',\n        '医療従事者との相談'\n      ]\n    };\n  } else {\n    return {\n      level: 'danger',\n      title: 'ランニング開始は時期尚早',\n      message: 'まだ多くの基準が未達成です。基礎的なトレーニングを継続してください。',\n      nextSteps: [\n        '基礎的な筋力・可動域訓練の継続',\n        '4週間後の再評価',\n        'リハビリテーション計画の見直し'\n      ]\n    };\n  }\n};\n\n// 各基準の詳細情報\nexport const criteriaDetails = {\n  period: {\n    rationale: '組織の治癒と強度回復には最低12週間が必要とされています。',\n    tips: '焦らず段階的な回復を心がけてください。',\n  },\n  pain_swelling: {\n    rationale: '炎症や痛みがある状態でのランニングは再損傷のリスクを高めます。',\n    tips: 'アイシング、適切な休息、抗炎症対策を継続してください。',\n  },\n  knee_extension: {\n    rationale: '完全伸展の欠如は歩行やランニングの効率性を著しく低下させます。',\n    tips: 'ヒールプロップス、膝裏伸展ストレッチを継続してください。',\n  },\n  knee_flexion: {\n    rationale: 'ランニングには最低120°の屈曲可動域が必要とされています。',\n    tips: 'ヒールスライド、自転車エクササイズを継続してください。',\n  },\n  quadriceps_strength: {\n    rationale: '大腿四頭筋の筋力不足は膝の不安定性と再損傷リスクを高めます。',\n    tips: 'レッグエクステンション、スクワット、レッグプレスを継続してください。',\n  },\n  single_leg_squat: {\n    rationale: '片脚スクワットは機能的な筋力と動的安定性を評価する重要な指標です。',\n    tips: '鏡を見ながらフォームを確認し、徐々に深く行ってください。',\n  }\n};\n\nexport default runningStartCriteria;","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  StyleSheet,\n  ScrollView,\n  Alert,\n  Dimensions,\n} from 'react-native';\nimport {\n  Text,\n  Card,\n  Button,\n  List,\n  Chip,\n  ProgressBar,\n  IconButton,\n  Portal,\n  Modal,\n  Divider,\n} from 'react-native-paper';\nimport { runningStartCriteria, criteriaDetails } from '../data/runningCriteria';\n\nconst { width } = Dimensions.get('window');\n\nconst RunningCriteriaScreen = ({ navigation }) => {\n  const [evaluationResults, setEvaluationResults] = useState([]);\n  const [showDetailModal, setShowDetailModal] = useState(false);\n  const [selectedCriteria, setSelectedCriteria] = useState(null);\n  const [overallResult, setOverallResult] = useState(null);\n\n  useEffect(() => {\n    // 初期化：すべての基準を未評価に設定\n    const initialResults = runningStartCriteria.criteria.map(criteria => ({\n      id: criteria.id,\n      passed: false,\n      evaluated: false,\n      value: null,\n      notes: ''\n    }));\n    setEvaluationResults(initialResults);\n  }, []);\n\n  useEffect(() => {\n    // 評価結果が更新されたら総合判定を計算\n    if (evaluationResults.length > 0) {\n      const result = runningStartCriteria.getEvaluationResult(evaluationResults);\n      setOverallResult(result);\n    }\n  }, [evaluationResults]);\n\n  const handleCriteriaEvaluation = (criteriaId, passed, value = null, notes = '') => {\n    setEvaluationResults(prev => \n      prev.map(result => \n        result.id === criteriaId \n          ? { ...result, passed, evaluated: true, value, notes }\n          : result\n      )\n    );\n  };\n\n  const showCriteriaDetail = (criteria) => {\n    setSelectedCriteria(criteria);\n    setShowDetailModal(true);\n  };\n\n  const getStatusColor = (result) => {\n    if (!result.evaluated) return '#9E9E9E';\n    return result.passed ? '#4CAF50' : '#F44336';\n  };\n\n  const getStatusIcon = (result) => {\n    if (!result.evaluated) return 'help-circle-outline';\n    return result.passed ? 'check-circle' : 'close-circle';\n  };\n\n  const getRecommendationColor = (level) => {\n    switch (level) {\n      case 'success': return '#4CAF50';\n      case 'warning': return '#FF9800';\n      case 'danger': return '#F44336';\n      default: return '#9E9E9E';\n    }\n  };\n\n  const renderCriteriaCard = (criteria) => {\n    const result = evaluationResults.find(r => r.id === criteria.id);\n    if (!result) return null;\n\n    return (\n      <Card key={criteria.id} style={styles.criteriaCard}>\n        <Card.Content>\n          <View style={styles.criteriaHeader}>\n            <View style={styles.criteriaInfo}>\n              <Text style={styles.criteriaIcon}>{criteria.icon}</Text>\n              <View style={styles.criteriaText}>\n                <Text style={styles.criteriaCategory}>{criteria.category}</Text>\n                <Text style={styles.criteriaTitle}>{criteria.title}</Text>\n              </View>\n            </View>\n            <IconButton\n              icon={getStatusIcon(result)}\n              iconColor={getStatusColor(result)}\n              size={24}\n              onPress={() => showCriteriaDetail(criteria)}\n            />\n          </View>\n          \n          <Text style={styles.criteriaDescription}>{criteria.description}</Text>\n          \n          <View style={styles.measurementInfo}>\n            <Text style={styles.measurementLabel}>測定方法:</Text>\n            <Text style={styles.measurementText}>{criteria.measurementMethod}</Text>\n          </View>\n          \n          <View style={styles.passingCriteria}>\n            <Text style={styles.passingLabel}>合格基準:</Text>\n            <Text style={styles.passingText}>{criteria.passingCriteria}</Text>\n          </View>\n\n          <View style={styles.evaluationButtons}>\n            <Button\n              mode={result.passed && result.evaluated ? \"contained\" : \"outlined\"}\n              onPress={() => handleCriteriaEvaluation(criteria.id, true)}\n              style={[styles.evalButton, { marginRight: 8 }]}\n              buttonColor={result.passed && result.evaluated ? '#4CAF50' : undefined}\n              compact\n            >\n              合格\n            </Button>\n            <Button\n              mode={!result.passed && result.evaluated ? \"contained\" : \"outlined\"}\n              onPress={() => handleCriteriaEvaluation(criteria.id, false)}\n              style={styles.evalButton}\n              buttonColor={!result.passed && result.evaluated ? '#F44336' : undefined}\n              compact\n            >\n              未達成\n            </Button>\n          </View>\n        </Card.Content>\n      </Card>\n    );\n  };\n\n  const renderOverallResult = () => {\n    if (!overallResult) return null;\n\n    return (\n      <Card style={[styles.resultCard, { borderLeftColor: getRecommendationColor(overallResult.recommendation.level) }]}>\n        <Card.Content>\n          <View style={styles.resultHeader}>\n            <Text style={styles.resultTitle}>総合評価結果</Text>\n            <Chip \n              mode=\"outlined\" \n              style={[styles.resultChip, { borderColor: getRecommendationColor(overallResult.recommendation.level) }]}\n              textStyle={{ color: getRecommendationColor(overallResult.recommendation.level) }}\n            >\n              {overallResult.passedCriteria}/{overallResult.totalCriteria}項目\n            </Chip>\n          </View>\n          \n          <View style={styles.progressSection}>\n            <Text style={styles.progressLabel}>\n              達成率: {Math.round(overallResult.passRate)}%\n            </Text>\n            <ProgressBar \n              progress={overallResult.passRate / 100} \n              color={getRecommendationColor(overallResult.recommendation.level)}\n              style={styles.progressBar}\n            />\n          </View>\n\n          <View style={styles.recommendationSection}>\n            <Text style={[styles.recommendationTitle, { color: getRecommendationColor(overallResult.recommendation.level) }]}>\n              {overallResult.recommendation.title}\n            </Text>\n            <Text style={styles.recommendationMessage}>\n              {overallResult.recommendation.message}\n            </Text>\n            \n            <Text style={styles.nextStepsTitle}>推奨される次のステップ:</Text>\n            {overallResult.recommendation.nextSteps.map((step, index) => (\n              <Text key={index} style={styles.nextStepItem}>\n                • {step}\n              </Text>\n            ))}\n          </View>\n\n          {overallResult.canStartRunning && (\n            <Button\n              mode=\"contained\"\n              onPress={() => Alert.alert('注意', '医療従事者の最終確認を得てからランニングを開始してください。')}\n              style={styles.startRunningButton}\n              buttonColor=\"#4CAF50\"\n            >\n              ランニング開始準備完了\n            </Button>\n          )}\n        </Card.Content>\n      </Card>\n    );\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      {/* ヘッダー情報 */}\n      <Card style={styles.headerCard}>\n        <Card.Content>\n          <Text style={styles.screenTitle}>{runningStartCriteria.title}</Text>\n          <Text style={styles.screenDescription}>{runningStartCriteria.description}</Text>\n          <Chip mode=\"outlined\" style={styles.periodChip}>\n            評価時期: {runningStartCriteria.evaluationPeriod}\n          </Chip>\n        </Card.Content>\n      </Card>\n\n      {/* 総合結果 */}\n      {renderOverallResult()}\n\n      {/* 評価項目リスト */}\n      <Text style={styles.sectionTitle}>評価項目</Text>\n      {runningStartCriteria.criteria.map(renderCriteriaCard)}\n\n      {/* 詳細モーダル */}\n      <Portal>\n        <Modal\n          visible={showDetailModal}\n          onDismiss={() => setShowDetailModal(false)}\n          contentContainerStyle={styles.modalContainer}\n        >\n          {selectedCriteria && (\n            <View>\n              <View style={styles.modalHeader}>\n                <Text style={styles.modalTitle}>{selectedCriteria.title}</Text>\n                <IconButton\n                  icon=\"close\"\n                  onPress={() => setShowDetailModal(false)}\n                />\n              </View>\n              <Divider />\n              <View style={styles.modalContent}>\n                <Text style={styles.modalDescription}>\n                  {selectedCriteria.description}\n                </Text>\n                \n                <Text style={styles.detailSectionTitle}>根拠・理由</Text>\n                <Text style={styles.detailText}>\n                  {criteriaDetails[selectedCriteria.id]?.rationale}\n                </Text>\n                \n                <Text style={styles.detailSectionTitle}>改善のためのヒント</Text>\n                <Text style={styles.detailText}>\n                  {criteriaDetails[selectedCriteria.id]?.tips}\n                </Text>\n                \n                <Text style={styles.detailSectionTitle}>測定方法</Text>\n                <Text style={styles.detailText}>\n                  {selectedCriteria.measurementMethod}\n                </Text>\n                \n                <Text style={styles.detailSectionTitle}>合格基準</Text>\n                <Text style={[styles.detailText, styles.passingCriteriaText]}>\n                  {selectedCriteria.passingCriteria}\n                </Text>\n              </View>\n            </View>\n          )}\n        </Modal>\n      </Portal>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  headerCard: {\n    margin: 16,\n    elevation: 2,\n  },\n  screenTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  screenDescription: {\n    fontSize: 14,\n    color: '#666',\n    lineHeight: 20,\n    marginBottom: 12,\n  },\n  periodChip: {\n    alignSelf: 'flex-start',\n  },\n  resultCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n    borderLeftWidth: 4,\n  },\n  resultHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  resultTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  resultChip: {\n    borderWidth: 1,\n  },\n  progressSection: {\n    marginBottom: 16,\n  },\n  progressLabel: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 4,\n  },\n  progressBar: {\n    height: 8,\n    borderRadius: 4,\n  },\n  recommendationSection: {\n    marginTop: 8,\n  },\n  recommendationTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  recommendationMessage: {\n    fontSize: 14,\n    color: '#333',\n    lineHeight: 20,\n    marginBottom: 12,\n  },\n  nextStepsTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  nextStepItem: {\n    fontSize: 14,\n    color: '#666',\n    lineHeight: 20,\n    marginLeft: 8,\n  },\n  startRunningButton: {\n    marginTop: 16,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginHorizontal: 16,\n    marginBottom: 12,\n  },\n  criteriaCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n  },\n  criteriaHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  criteriaInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  criteriaIcon: {\n    fontSize: 24,\n    marginRight: 12,\n  },\n  criteriaText: {\n    flex: 1,\n  },\n  criteriaCategory: {\n    fontSize: 12,\n    color: '#666',\n    textTransform: 'uppercase',\n  },\n  criteriaTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  criteriaDescription: {\n    fontSize: 14,\n    color: '#666',\n    lineHeight: 18,\n    marginBottom: 12,\n  },\n  measurementInfo: {\n    marginBottom: 8,\n  },\n  measurementLabel: {\n    fontSize: 12,\n    color: '#666',\n    fontWeight: 'bold',\n  },\n  measurementText: {\n    fontSize: 12,\n    color: '#333',\n  },\n  passingCriteria: {\n    marginBottom: 12,\n  },\n  passingLabel: {\n    fontSize: 12,\n    color: '#666',\n    fontWeight: 'bold',\n  },\n  passingText: {\n    fontSize: 12,\n    color: '#333',\n    fontWeight: 'bold',\n  },\n  evaluationButtons: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  evalButton: {\n    minWidth: 70,\n  },\n  modalContainer: {\n    backgroundColor: 'white',\n    margin: 20,\n    borderRadius: 8,\n    maxHeight: '80%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    flex: 1,\n  },\n  modalContent: {\n    padding: 16,\n  },\n  modalDescription: {\n    fontSize: 14,\n    color: '#333',\n    lineHeight: 20,\n    marginBottom: 16,\n  },\n  detailSectionTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#333',\n    marginTop: 12,\n    marginBottom: 8,\n  },\n  detailText: {\n    fontSize: 14,\n    color: '#666',\n    lineHeight: 20,\n  },\n  passingCriteriaText: {\n    fontWeight: 'bold',\n    color: '#333',\n  },\n});\n\nexport default RunningCriteriaScreen;","import React, { useState } from 'react';\nimport {\n  View,\n  StyleSheet,\n  ScrollView,\n  Dimensions,\n} from 'react-native';\nimport {\n  Text,\n  Card,\n  Button,\n  List,\n  Chip,\n  Divider,\n  IconButton,\n  Portal,\n  Modal,\n} from 'react-native-paper';\nimport { runningStartCriteria } from '../data/runningCriteria';\nimport { returnToSportCriteria } from '../data/returnToSportCriteria';\n\nconst { width } = Dimensions.get('window');\n\nconst EvaluationCheckpointsScreen = ({ navigation }) => {\n  const [selectedCheckpoint, setSelectedCheckpoint] = useState(null);\n  const [showDetailModal, setShowDetailModal] = useState(false);\n\n  const evaluationCheckpoints = [\n    {\n      id: 'month_3',\n      title: '術後3ヶ月評価',\n      subtitle: 'ランニング開始基準',\n      description: 'ランニングを安全に開始するための必須評価項目',\n      timeline: '術後12週以降',\n      icon: '🏃‍♂️',\n      color: '#FF9800',\n      data: runningStartCriteria,\n      totalCriteria: runningStartCriteria.criteria.length,\n      nextStep: 'ランニング・プライオメトリクス開始',\n      screen: 'RunningCriteria'\n    },\n    {\n      id: 'month_6_plus',\n      title: '術後6ヶ月以降評価',\n      subtitle: '競技復帰チェックリスト',\n      description: '競技への安全な復帰のための包括的評価項目',\n      timeline: '術後6ヶ月以降',\n      icon: '⚽',\n      color: '#4CAF50',\n      data: returnToSportCriteria,\n      totalCriteria: returnToSportCriteria.categories.reduce((sum, cat) => sum + cat.criteria.length, 0),\n      nextStep: '段階的競技復帰開始',\n      screen: 'ReturnToSport'\n    }\n  ];\n\n  const handleCheckpointPress = (checkpoint) => {\n    if (checkpoint.screen === 'RunningCriteria') {\n      navigation.navigate('RunningCriteria');\n    } else if (checkpoint.screen === 'ReturnToSport') {\n      navigation.navigate('ReturnToSport');\n    }\n  };\n\n  const showCheckpointDetail = (checkpoint) => {\n    setSelectedCheckpoint(checkpoint);\n    setShowDetailModal(true);\n  };\n\n  const renderCheckpointCard = (checkpoint) => {\n    return (\n      <Card key={checkpoint.id} style={[styles.checkpointCard, { borderLeftColor: checkpoint.color }]}>\n        <Card.Content>\n          <View style={styles.checkpointHeader}>\n            <View style={styles.checkpointInfo}>\n              <Text style={styles.checkpointIcon}>{checkpoint.icon}</Text>\n              <View style={styles.checkpointText}>\n                <Text style={styles.checkpointTitle}>{checkpoint.title}</Text>\n                <Text style={styles.checkpointSubtitle}>{checkpoint.subtitle}</Text>\n              </View>\n            </View>\n            <IconButton\n              icon=\"information-outline\"\n              iconColor={checkpoint.color}\n              size={24}\n              onPress={() => showCheckpointDetail(checkpoint)}\n            />\n          </View>\n\n          <Text style={styles.checkpointDescription}>{checkpoint.description}</Text>\n\n          <View style={styles.checkpointDetails}>\n            <View style={styles.detailRow}>\n              <Text style={styles.detailLabel}>評価時期:</Text>\n              <Chip mode=\"outlined\" style={[styles.timelineChip, { borderColor: checkpoint.color }]}>\n                {checkpoint.timeline}\n              </Chip>\n            </View>\n\n            <View style={styles.detailRow}>\n              <Text style={styles.detailLabel}>評価項目数:</Text>\n              <Text style={styles.detailValue}>{checkpoint.totalCriteria}項目</Text>\n            </View>\n\n            <View style={styles.detailRow}>\n              <Text style={styles.detailLabel}>次のステップ:</Text>\n              <Text style={styles.detailValue}>{checkpoint.nextStep}</Text>\n            </View>\n          </View>\n\n          <Button\n            mode=\"contained\"\n            onPress={() => handleCheckpointPress(checkpoint)}\n            style={[styles.evaluationButton, { backgroundColor: checkpoint.color }]}\n            icon=\"clipboard-check\"\n          >\n            評価を開始\n          </Button>\n        </Card.Content>\n      </Card>\n    );\n  };\n\n  const renderCheckpointOverview = (checkpoint) => {\n    if (checkpoint.id === 'month_3') {\n      return (\n        <View style={styles.overviewSection}>\n          <Text style={styles.overviewTitle}>主要評価項目:</Text>\n          {checkpoint.data.criteria.map((criterion, index) => (\n            <View key={criterion.id} style={styles.overviewItem}>\n              <Text style={styles.overviewIcon}>{criterion.icon}</Text>\n              <View style={styles.overviewText}>\n                <Text style={styles.overviewItemTitle}>{criterion.title}</Text>\n                <Text style={styles.overviewItemCriteria}>{criterion.passingCriteria}</Text>\n              </View>\n            </View>\n          ))}\n        </View>\n      );\n    } else {\n      return (\n        <View style={styles.overviewSection}>\n          <Text style={styles.overviewTitle}>評価カテゴリ:</Text>\n          {checkpoint.data.categories.map((category, index) => (\n            <View key={category.id} style={styles.overviewCategory}>\n              <Text style={styles.overviewCategoryTitle}>{category.title}</Text>\n              <Text style={styles.overviewCategoryDesc}>{category.description}</Text>\n              <Text style={styles.overviewCategoryCount}>\n                {category.criteria.length}項目の評価\n              </Text>\n            </View>\n          ))}\n        </View>\n      );\n    }\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      {/* ヘッダー */}\n      <Card style={styles.headerCard}>\n        <Card.Content>\n          <Text style={styles.screenTitle}>評価チェックポイント</Text>\n          <Text style={styles.screenDescription}>\n            ACLリハビリテーションの重要な評価時期における必須チェック項目です。\n            各段階で適切な評価を行い、安全な回復と競技復帰を目指しましょう。\n          </Text>\n        </Card.Content>\n      </Card>\n\n      {/* タイムライン概要 */}\n      <Card style={styles.timelineCard}>\n        <Card.Content>\n          <Text style={styles.timelineTitle}>評価タイムライン</Text>\n          <View style={styles.timeline}>\n            <View style={styles.timelineItem}>\n              <View style={[styles.timelineMarker, { backgroundColor: '#FF9800' }]} />\n              <View style={styles.timelineContent}>\n                <Text style={styles.timelineItemTitle}>術後3ヶ月</Text>\n                <Text style={styles.timelineItemDesc}>ランニング開始基準評価</Text>\n              </View>\n            </View>\n            <View style={styles.timelineLine} />\n            <View style={styles.timelineItem}>\n              <View style={[styles.timelineMarker, { backgroundColor: '#4CAF50' }]} />\n              <View style={styles.timelineContent}>\n                <Text style={styles.timelineItemTitle}>術後6ヶ月以降</Text>\n                <Text style={styles.timelineItemDesc}>競技復帰チェックリスト</Text>\n              </View>\n            </View>\n          </View>\n        </Card.Content>\n      </Card>\n\n      {/* 評価チェックポイント */}\n      <Text style={styles.sectionTitle}>評価チェックポイント</Text>\n      {evaluationCheckpoints.map(renderCheckpointCard)}\n\n      {/* 詳細モーダル */}\n      <Portal>\n        <Modal\n          visible={showDetailModal}\n          onDismiss={() => setShowDetailModal(false)}\n          contentContainerStyle={styles.modalContainer}\n        >\n          {selectedCheckpoint && (\n            <ScrollView style={styles.modalScroll}>\n              <View style={styles.modalHeader}>\n                <Text style={styles.modalTitle}>{selectedCheckpoint.title}</Text>\n                <IconButton\n                  icon=\"close\"\n                  onPress={() => setShowDetailModal(false)}\n                />\n              </View>\n              <Divider />\n              \n              <View style={styles.modalContent}>\n                <Text style={styles.modalDescription}>\n                  {selectedCheckpoint.description}\n                </Text>\n\n                <View style={styles.modalDetailSection}>\n                  <Text style={styles.modalDetailTitle}>評価の目的</Text>\n                  <Text style={styles.modalDetailText}>\n                    {selectedCheckpoint.id === 'month_3' \n                      ? 'ランニングを安全に開始するための身体機能と症状の評価を行います。すべての基準をクリアすることで、より高強度の訓練に進むことができます。'\n                      : '競技への完全復帰に向けた包括的な評価を行います。身体機能、動作の質、心理的準備度など多角的な視点から復帰可能性を判定します。'\n                    }\n                  </Text>\n                </View>\n\n                <View style={styles.modalDetailSection}>\n                  <Text style={styles.modalDetailTitle}>評価のタイミング</Text>\n                  <Text style={styles.modalDetailText}>\n                    {selectedCheckpoint.timeline}に実施してください。\n                    {selectedCheckpoint.id === 'month_3' \n                      ? '術後12週間が経過し、基礎的なリハビリテーションが完了した時点で評価を行います。'\n                      : '術後6ヶ月以降で、高強度トレーニングを十分に実施した後に評価を行います。'\n                    }\n                  </Text>\n                </View>\n\n                {renderCheckpointOverview(selectedCheckpoint)}\n\n                <View style={styles.modalDetailSection}>\n                  <Text style={styles.modalDetailTitle}>注意事項</Text>\n                  <Text style={styles.modalDetailText}>\n                    • すべての評価は医療従事者の指導の下で実施してください{'\\n'}\n                    • 痛みや不快感がある場合は評価を中止してください{'\\n'}\n                    • 基準に達しない場合は、さらなるトレーニングを継続してください{'\\n'}\n                    • 個人差があるため、医師との相談を欠かさないでください\n                  </Text>\n                </View>\n\n                <Button\n                  mode=\"contained\"\n                  onPress={() => {\n                    setShowDetailModal(false);\n                    handleCheckpointPress(selectedCheckpoint);\n                  }}\n                  style={[styles.modalButton, { backgroundColor: selectedCheckpoint.color }]}\n                >\n                  評価を開始する\n                </Button>\n              </View>\n            </ScrollView>\n          )}\n        </Modal>\n      </Portal>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  headerCard: {\n    margin: 16,\n    elevation: 2,\n  },\n  screenTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    color: '#333',\n  },\n  screenDescription: {\n    fontSize: 14,\n    color: '#666',\n    lineHeight: 20,\n  },\n  timelineCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n  },\n  timelineTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    color: '#333',\n  },\n  timeline: {\n    paddingHorizontal: 8,\n  },\n  timelineItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  timelineMarker: {\n    width: 12,\n    height: 12,\n    borderRadius: 6,\n    marginRight: 16,\n  },\n  timelineContent: {\n    flex: 1,\n  },\n  timelineItemTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  timelineItemDesc: {\n    fontSize: 14,\n    color: '#666',\n  },\n  timelineLine: {\n    width: 2,\n    height: 20,\n    backgroundColor: '#ddd',\n    marginLeft: 5,\n    marginBottom: 8,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginHorizontal: 16,\n    marginBottom: 12,\n    color: '#333',\n  },\n  checkpointCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n    borderLeftWidth: 4,\n  },\n  checkpointHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  checkpointInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  checkpointIcon: {\n    fontSize: 32,\n    marginRight: 12,\n  },\n  checkpointText: {\n    flex: 1,\n  },\n  checkpointTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  checkpointSubtitle: {\n    fontSize: 14,\n    color: '#666',\n  },\n  checkpointDescription: {\n    fontSize: 14,\n    color: '#666',\n    lineHeight: 18,\n    marginBottom: 16,\n  },\n  checkpointDetails: {\n    marginBottom: 16,\n  },\n  detailRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  detailLabel: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#333',\n    marginRight: 8,\n    minWidth: 80,\n  },\n  detailValue: {\n    fontSize: 14,\n    color: '#666',\n    flex: 1,\n  },\n  timelineChip: {\n    borderWidth: 1,\n  },\n  evaluationButton: {\n    borderRadius: 8,\n  },\n  modalContainer: {\n    backgroundColor: 'white',\n    margin: 20,\n    borderRadius: 8,\n    maxHeight: '90%',\n  },\n  modalScroll: {\n    maxHeight: '100%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    flex: 1,\n    color: '#333',\n  },\n  modalContent: {\n    padding: 16,\n  },\n  modalDescription: {\n    fontSize: 16,\n    color: '#333',\n    lineHeight: 22,\n    marginBottom: 20,\n  },\n  modalDetailSection: {\n    marginBottom: 20,\n  },\n  modalDetailTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 8,\n  },\n  modalDetailText: {\n    fontSize: 14,\n    color: '#666',\n    lineHeight: 20,\n  },\n  overviewSection: {\n    marginBottom: 20,\n  },\n  overviewTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 12,\n  },\n  overviewItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 12,\n    paddingLeft: 8,\n  },\n  overviewIcon: {\n    fontSize: 20,\n    marginRight: 12,\n    width: 24,\n  },\n  overviewText: {\n    flex: 1,\n  },\n  overviewItemTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  overviewItemCriteria: {\n    fontSize: 12,\n    color: '#666',\n  },\n  overviewCategory: {\n    marginBottom: 16,\n    paddingLeft: 8,\n    borderLeftWidth: 3,\n    borderLeftColor: '#ddd',\n    paddingVertical: 8,\n  },\n  overviewCategoryTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 4,\n  },\n  overviewCategoryDesc: {\n    fontSize: 12,\n    color: '#666',\n    marginBottom: 4,\n  },\n  overviewCategoryCount: {\n    fontSize: 12,\n    color: '#999',\n    fontStyle: 'italic',\n  },\n  modalButton: {\n    marginTop: 16,\n    borderRadius: 8,\n  },\n});\n\nexport default EvaluationCheckpointsScreen;","import React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Alert } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport PropTypes from 'prop-types';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false, error: null, errorInfo: null };\n  }\n\n  static getDerivedStateFromError(error) {\n    // エラーが発生したときに state を更新し、フォールバック UI を表示\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // エラーログを記録\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    });\n\n    // 開発環境でのみ詳細なエラー情報を表示\n    if (__DEV__) {\n      console.error('ErrorBoundary caught an error:', error, errorInfo);\n    }\n\n    // 本番環境では適切なエラー追跡サービスに送信\n    // 例: Sentry, Crashlytics など\n    // ErrorTracker.logError(error, errorInfo);\n  }\n\n  handleRetry = () => {\n    this.setState({ hasError: false, error: null, errorInfo: null });\n  };\n\n  handleReportError = () => {\n    const errorMessage = this.state.error?.message || 'Unknown error';\n    const errorStack = this.state.error?.stack || '';\n    \n    Alert.alert(\n      'エラーレポート',\n      `以下のエラー情報をサポートに報告できます：\\n\\n${errorMessage}`,\n      [\n        { text: 'キャンセル', style: 'cancel' },\n        { \n          text: 'レポート送信', \n          onPress: () => {\n            // ここで実際のエラーレポート送信処理を実装\n            Alert.alert('送信完了', 'エラーレポートを送信しました。');\n          }\n        }\n      ]\n    );\n  };\n\n  render() {\n    if (this.state.hasError) {\n      // カスタムフォールバック UI\n      return (\n        <View style={styles.container}>\n          <View style={styles.errorContainer}>\n            <Text style={styles.title}>問題が発生しました</Text>\n            <Text style={styles.message}>\n              アプリで予期しないエラーが発生しました。\n              下記のボタンをお試しください。\n            </Text>\n            \n            {__DEV__ && this.state.error && (\n              <View style={styles.debugContainer}>\n                <Text style={styles.debugTitle}>開発者情報:</Text>\n                <Text style={styles.debugText}>{this.state.error.toString()}</Text>\n                {this.state.errorInfo && (\n                  <Text style={styles.debugText}>{this.state.errorInfo.componentStack}</Text>\n                )}\n              </View>\n            )}\n            \n            <View style={styles.buttonContainer}>\n              <Button \n                mode=\"contained\" \n                onPress={this.handleRetry}\n                style={styles.button}\n              >\n                もう一度試す\n              </Button>\n              \n              <Button \n                mode=\"outlined\" \n                onPress={this.handleReportError}\n                style={styles.button}\n              >\n                エラーを報告\n              </Button>\n              \n              {this.props.onReset && (\n                <Button \n                  mode=\"text\" \n                  onPress={this.props.onReset}\n                  style={styles.button}\n                >\n                  ホームに戻る\n                </Button>\n              )}\n            </View>\n          </View>\n        </View>\n      );\n    }\n\n    // エラーがない場合は通常の子コンポーネントを表示\n    return this.props.children;\n  }\n}\n\nErrorBoundary.propTypes = {\n  children: PropTypes.node.isRequired,\n  onReset: PropTypes.func, // ホーム画面に戻るなどのリセット処理\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n    padding: 20,\n  },\n  errorContainer: {\n    backgroundColor: '#fff',\n    padding: 24,\n    borderRadius: 12,\n    width: '100%',\n    maxWidth: 400,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#d32f2f',\n    marginBottom: 16,\n    textAlign: 'center',\n  },\n  message: {\n    fontSize: 16,\n    color: '#333',\n    textAlign: 'center',\n    marginBottom: 24,\n    lineHeight: 24,\n  },\n  buttonContainer: {\n    width: '100%',\n    gap: 12,\n  },\n  button: {\n    marginVertical: 4,\n  },\n  debugContainer: {\n    backgroundColor: '#f5f5f5',\n    padding: 12,\n    borderRadius: 8,\n    marginBottom: 20,\n    width: '100%',\n  },\n  debugTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#666',\n    marginBottom: 8,\n  },\n  debugText: {\n    fontSize: 12,\n    color: '#666',\n    fontFamily: 'monospace',\n  },\n});\n\nexport default ErrorBoundary;","import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { store } from './src/store';\nimport { theme } from './src/theme';\n\n// Screens\nimport HomeScreen from './src/screens/HomeScreen';\nimport ExerciseScreen from './src/screens/ExerciseScreen';\nimport ExerciseMenuScreen from './src/screens/ExerciseMenuScreen';\nimport ExerciseSessionScreen from './src/screens/ExerciseSessionScreen';\nimport ProgressScreen from './src/screens/ProgressScreen';\nimport ReturnToSportScreen from './src/screens/ReturnToSportScreen';\nimport RunningCriteriaScreen from './src/screens/RunningCriteriaScreen';\nimport EvaluationCheckpointsScreen from './src/screens/EvaluationCheckpointsScreen';\n\n// Components\nimport ErrorBoundary from './src/components/ErrorBoundary';\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  return (\n    <ErrorBoundary>\n      <ReduxProvider store={store}>\n        <PaperProvider theme={theme}>\n          <NavigationContainer>\n            <Stack.Navigator\n            initialRouteName=\"Home\"\n            screenOptions={{\n              headerStyle: {\n                backgroundColor: theme.colors.primary,\n              },\n              headerTintColor: '#fff',\n              headerTitleStyle: {\n                fontWeight: 'bold',\n              },\n            }}\n          >\n            <Stack.Screen \n              name=\"Home\" \n              component={HomeScreen}\n              options={{ title: 'ACL リハビリ' }}\n            />\n            <Stack.Screen \n              name=\"Exercise\" \n              component={ExerciseScreen}\n              options={{ title: '自主トレーニング' }}\n            />\n            <Stack.Screen \n              name=\"ExerciseMenu\" \n              component={ExerciseMenuScreen}\n              options={{ title: '今日のトレーニング' }}\n            />\n            <Stack.Screen \n              name=\"ExerciseSession\" \n              component={ExerciseSessionScreen}\n              options={{ title: 'トレーニング実行' }}\n            />\n            <Stack.Screen \n              name=\"Progress\" \n              component={ProgressScreen}\n              options={{ title: '進捗確認' }}\n            />\n            <Stack.Screen \n              name=\"ReturnToSport\" \n              component={ReturnToSportScreen}\n              options={{ title: '競技復帰評価' }}\n            />\n            <Stack.Screen \n              name=\"RunningCriteria\" \n              component={RunningCriteriaScreen}\n              options={{ title: 'ランニング基準' }}\n            />\n            <Stack.Screen \n              name=\"EvaluationCheckpoints\" \n              component={EvaluationCheckpointsScreen}\n              options={{ title: '評価チェックポイント' }}\n            />\n            </Stack.Navigator>\n          </NavigationContainer>\n        </PaperProvider>\n      </ReduxProvider>\n    </ErrorBoundary>\n  );\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [988], () => (__webpack_require__(5819)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["API_BASE_URL","_Constants$expoConfig","Constants","expoConfig","_Constants$expoConfig2","extra","apiUrl","apiClient","axios","create","baseURL","timeout","headers","interceptors","request","use","config","error","Promise","reject","response","data","_error$response","status","authAPI","login","_login","_asyncToGenerator","patientNumber","password","post","_x","_x2","apply","arguments","getProfile","_getProfile","token","get","Authorization","_x3","logout","_logout","_x4","exerciseAPI","getAllPhases","_getAllPhases","getExercisesByPhase","_getExercisesByPhase","phase","_x5","getExerciseDetails","_getExerciseDetails","exerciseId","_x6","getCategories","_getCategories","params","_x7","_x8","getExercisesByCategory","_getExercisesByCategory","categoryId","_x9","_x0","getPatientExercisePlan","_getPatientExercisePlan","patientId","_x1","_x10","_x11","recordSession","_recordSession","sessionData","_x12","_x13","uploadVideo","_uploadVideo","formData","_x14","_x15","progressAPI","getProgress","_getProgress","_x16","submitACLRSI","_submitACLRSI","rsiData","_x17","_x18","medicalCollaborationAPI","getMedicalStaff","_getMedicalStaff","_x19","_x20","sendReport","_sendReport","reportData","_x21","_x22","getMessages","_getMessages","limit","_x23","_x24","_x25","sendMessage","_sendMessage","messageData","_x26","_x27","getAppointments","_getAppointments","_x28","_x29","initialState","user","isAuthenticated","isLoading","loginUser","createAsyncThunk","_ref3","_ref","_ref2","rejectWithValue","_error$response$data","message","fetchUserProfile","_ref5","_ref4","_error$response2","_error$response2$data","logoutUser","_ref7","_ref6","authSlice","createSlice","name","reducers","clearError","state","resetAuth","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","_authSlice$actions","actions","fetchCategories","fetchExercisesByPhase","fetchPatientExercisePlan","_ref9","_ref8","_error$response3","_error$response3$data","recordExerciseSession","_ref10","_ref0","_ref1","_error$response4","_error$response4$data","exerciseSlice","categories","exercises","patientPlan","currentSession","sessionHistory","currentExerciseIndex","exerciseProgress","currentPhase","setCurrentExerciseIndex","updateExerciseProgress","_action$payload","progress","_objectSpread","resetExerciseProgress","setCurrentPhase","startLocalSession","id","Date","now","startTime","toISOString","painLevel","borgScale","location","notes","endLocalSession","endTime","completed","addExerciseToSession","push","setCurrentExercise","currentExercise","completeExercise","_action$payload2","completedAt","updateSessionInfo","pauseSession","isPaused","pausedAt","resumeSession","pauseDuration","totalPauseDuration","_exerciseSlice$action","fetchProgressData","timeRange","getProgressData","fetchSessionHistory","getSessionHistory","fetchProgressStats","period","getProgressStats","weeklyGoal","total","targetSessions","monthlyGoal","monthlyStats","sessionsCompleted","totalExercises","totalDuration","averagePainLevel","averageBorgScale","improvementRate","recentSessions","painLevelTrend","borgScaleTrend","exerciseCountTrend","phaseProgressData","selectedTimeRange","selectedMetric","lastUpdated","progressSlice","addSessionToHistory","date","split","unshift","length","slice","sessions","today","weekStart","setDate","getDate","getDay","weekSessions","filter","session","monthStart","getFullYear","getMonth","monthSessions","reduce","sum","s","duration","updateStatsFromSessions","setWeeklyGoal","setMonthlyGoal","setTimeRange","setSelectedMetric","resetProgress","setDummyData","value","stats","_progressSlice$action","staff","messages","appointments","reports","fetchMedicalStaff","fetchMessages","fetchAppointments","_ref13","_ref11","_ref12","_error$response5","_error$response5$data","medicalCollaborationSlice","resetMedicalCollaboration","_medicalCollaboration","store","configureStore","reducer","auth","exercise","medicalCollaboration","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","theme","DefaultTheme","colors","primary","primaryContainer","secondary","secondaryContainer","tertiary","surface","surfaceVariant","background","onPrimary","onSecondary","onSurface","onBackground","fonts","labelLarge","fontFamily","fontSize","fontWeight","HomeScreen","Dimensions","width","_user","navigation","currentPhaseInfo","phaseMap","title","description","color","getPhaseInfo","menuItems","icon","onPress","navigate","_jsxs","ScrollView","style","styles","container","children","_jsx","Card","headerCard","Content","View","headerContent","userInfo","Text","welcomeText","userName","phaseCard","phaseHeader","phaseTitle","Chip","mode","phaseChip","borderColor","textStyle","phaseDescription","progressContainer","progressLabel","ProgressBar","progressBar","progressText","Math","round","surgeryDate","toLocaleDateString","menuContainer","map","item","index","menuCard","menuContent","menuTextContainer","menuTitle","menuDescription","IconButton","size","iconColor","menuIcon","backgroundColor","Button","menuButton","labelStyle","menuButtonLabel","tipCard","tipTitle","Divider","tipDivider","tipText","StyleSheet","flex","margin","marginBottom","elevation","flexDirection","justifyContent","alignItems","marginTop","borderWidth","height","borderRadius","textAlign","padding","paddingTop","lineHeight","propTypes","PropTypes","isRequired","subtitle","infoCard","infoTitle","useSelector","List","left","loadingContainer","loadingText","errorContainer","errorText","errorMessage","sessionCard","sessionTitle","sessionDescription","startButton","categoryCard","categoryHeader","paddingHorizontal","paddingVertical","categoryHeaderContent","categoryTitle","exerciseItem","exerciseIcon","marginRight","exerciseInfo","difficultyChip","completedIcon","emptyCard","emptyTitle","emptyDescription","dispatch","useDispatch","_useSelector","_useSelector2","_useState","useState","_useState2","_slicedToArray","useEffect","userPhase","fetchPublicExerciseData","_useState3","_useState4","localPatientPlan","setLocalPatientPlan","phaseData","console","log","exerciseList","exercise_name","instructions","category_name","category","assigned_sets","sets","assigned_reps","reps","difficulty_level","difficulty","requires_ai_analysis","requiresAI","is_completed","dummyPlan","getDummyExercisePlan","frequency","hold_time","note","handleExercisePress","detailedExercise","instructionText","preparation","execution","tips","cautions","progression","effects","text","join","Alert","alert","getDifficultyLabel","equipment","getDifficultyColor","level","ActivityIndicator","phaseInfo","currentPlan","groupedExercises","grouped","forEach","categoryName","groupExercisesByCategory","planToUse","disabled","Object","keys","entries","Badge","right","compact","progressCard","progressTitle","exerciseCard","exerciseHeader","exerciseName","exerciseDescription","exerciseCategory","restSurface","restTitle","restTime","setCard","setHeader","setTitle","repTitle","setProgress","setProgressBar","timerContainer","timerLabel","timerValue","controlButtons","nextButton","controlCard","controlRow","controlButton","marginHorizontal","modalContainer","modalTitle","modalText","modalDivider","ratingLabel","ratingButtons","flexWrap","ratingButton","minWidth","modalButtons","modalButton","currentSet","setCurrentSet","_useState5","_useState6","currentRep","setCurrentRep","_useState7","_useState8","isResting","setIsResting","_useState9","_useState0","restTimeLeft","setRestTimeLeft","_useState1","_useState10","exerciseTimeElapsed","setExerciseTimeElapsed","_useState11","_useState12","showCompletionModal","setShowCompletionModal","_useState13","_useState14","sessionNotes","_useState15","_useState16","setPainLevel","_useState17","_useState18","setBorgScale","intervalRef","useRef","restIntervalRef","phaseExercises","rest_time_seconds","assigned_duration_seconds","clearInterval","current","setInterval","prev","handleSetComplete","handleExerciseComplete","exerciseData","sets_completed","reps_completed","duration_seconds","pain_level","borg_scale","formatTime","seconds","secs","floor","toString","padStart","getProgressPercentage","exerciseType","includes","Surface","Portal","Modal","visible","onDismiss","contentContainerStyle","scale","goBack","goalCard","sectionTitle","goalContent","goalText","goalProgress","goalPercentage","alignSelf","statsCard","statsGrid","statItem","statValue","statLabel","statsDivider","averageStats","averageStat","averageLabel","averageValue","averageNumber","averageUnit","marginLeft","sessionsCard","sessionItem","sessionHeader","sessionDate","painChip","sessionDetails","sessionDetail","sessionDivider","legendCard","legendSection","legendTitle","legendItems","gap","legendItem","legendColor","legendText","getPainLevelColor","month","day","returnToSportCriteria","evaluationPeriod","criteria","type","required","measurementMethod","passingCriteria","weight","getOverallEvaluation","results","allCriteria","flatMap","cat","totalWeight","criterion","achievedWeight","passedCount","totalCount","result","find","r","passed","weightedScore","passRate","totalCriteria","passedCriteria","canReturnToSport","recommendation","getReturnRecommendation","nextSteps","returnPhase","categoryImportance","medical_clearance","importance","mustPass","physical_function","functional_tests","movement_quality","psychological_readiness","sport_specific","injury_prevention","screenTitle","screenDescription","periodChip","resultCard","borderLeftWidth","resultHeader","resultTitle","resultScores","scoreChip","progressSection","recommendationSection","recommendationTitle","recommendationMessage","nextStepsTitle","nextStepItem","returnButton","categoryInfo","categoryDescription","categoryBadges","importanceChip","progressBadge","importanceDescription","fontStyle","criteriaList","criteriaItem","criteriaIcon","criteriaEmoji","criteriaActions","evaluationButtons","miniButton","maxHeight","modalScroll","modalHeader","modalContent","modalDescription","detailSectionTitle","detailText","passingCriteriaText","modalEvaluation","borderTopWidth","borderTopColor","modalEvaluationTitle","modalEvaluationButtons","modalEvalButton","evaluationResults","setEvaluationResults","showDetailModal","setShowDetailModal","selectedCriteria","setSelectedCriteria","overallResult","setOverallResult","initialResults","evaluated","handleCriteriaEvaluation","criteriaId","undefined","showCriteriaDetail","getStatusColor","getStatusIcon","getImportanceColor","_categoryImportance$c","getImportanceLabel","_categoryImportance$c2","getResultColor","borderLeftColor","step","buttonColor","renderOverallResult","percentage","getCategoryProgress","runningStartCriteria","getEvaluationResult","canStartRunning","getRecommendation","criteriaDetails","rationale","pain_swelling","knee_extension","knee_flexion","quadriceps_strength","single_leg_squat","resultChip","startRunningButton","criteriaCard","criteriaHeader","criteriaInfo","criteriaText","criteriaCategory","textTransform","criteriaTitle","criteriaDescription","measurementInfo","measurementLabel","measurementText","passingLabel","passingText","evalButton","_criteriaDetails$sele","_criteriaDetails$sele2","getRecommendationColor","timelineCard","timelineTitle","timeline","timelineItem","timelineMarker","timelineContent","timelineItemTitle","timelineItemDesc","timelineLine","checkpointCard","checkpointHeader","checkpointInfo","checkpointIcon","checkpointText","checkpointTitle","checkpointSubtitle","checkpointDescription","checkpointDetails","detailRow","detailLabel","detailValue","timelineChip","evaluationButton","modalDetailSection","modalDetailTitle","modalDetailText","overviewSection","overviewTitle","overviewItem","paddingLeft","overviewIcon","overviewText","overviewItemTitle","overviewItemCriteria","overviewCategory","overviewCategoryTitle","overviewCategoryDesc","overviewCategoryCount","checkpoint","selectedCheckpoint","setSelectedCheckpoint","evaluationCheckpoints","nextStep","screen","handleCheckpointPress","showCheckpointDetail","ErrorBoundary","_React$Component","props","_this","_classCallCheck","handleRetry","setState","hasError","errorInfo","handleReportError","_this$state$error","_this$state$error2","stack","_inherits","_createClass","key","this","buttonContainer","button","onReset","React","maxWidth","shadowColor","shadowOffset","shadowOpacity","shadowRadius","marginVertical","debugContainer","debugTitle","debugText","Stack","createStackNavigator","App","ReduxProvider","PaperProvider","NavigationContainer","Navigator","initialRouteName","screenOptions","headerStyle","headerTintColor","headerTitleStyle","Screen","component","options","ExerciseScreen","ExerciseMenuScreen","ExerciseSessionScreen","ProgressScreen","ReturnToSportScreen","RunningCriteriaScreen","EvaluationCheckpointsScreen","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","j","every","splice","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}