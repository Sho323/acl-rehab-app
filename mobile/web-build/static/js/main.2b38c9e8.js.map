{"version":3,"file":"static/js/main.2b38c9e8.js","mappings":"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","sources":["src/services/api.js","src/store/slices/authSlice.js","src/store/slices/exerciseSlice.js","src/store/slices/progressSlice.js","src/store/slices/medicalCollaborationSlice.js","src/store/index.js","src/theme.js","src/screens/LoginScreen.js","src/screens/HomeScreen.js","src/screens/ExerciseScreen.js","src/screens/ExerciseMenuScreen.js","src/screens/ExerciseSessionScreen.js","src/components/AIAnalysisDisplay.js","src/screens/AIAnalysisScreen.js","src/screens/MedicalCollaborationScreen.js","src/screens/ProgressScreen.js","src/screens/ProfileScreen.js","src/data/returnToSportCriteria.js","src/screens/ReturnToSportScreen.js","src/data/runningCriteria.js","src/screens/RunningCriteriaScreen.js","src/screens/EvaluationCheckpointsScreen.js","src/components/ErrorBoundary.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import axios from 'axios';\nimport Constants from 'expo-constants';\n\n// API基底URL（環境変数対応）\nconst API_BASE_URL = Constants.expoConfig?.extra?.apiUrl || \n  (process.env.NODE_ENV === 'production' \n    ? 'https://acl-rehab-2oz8e3lyq-shotas-projects-1f553362.vercel.app' \n    : 'http://localhost:3000');\n\n// APIクライアントの設定\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// リクエストインターセプター（認証トークンの自動付与）\napiClient.interceptors.request.use(\n  (config) => {\n    // トークンが必要な場合は各APIメソッドで個別に設定\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// レスポンスインターセプター（エラーハンドリング）\napiClient.interceptors.response.use(\n  (response) => response.data,\n  (error) => {\n    if (error.response?.status === 401) {\n      // 認証エラーの場合はログアウト処理\n      // Note: 本番環境では適切なログ管理システムを実装\n      if (__DEV__) {\n        console.log('Authentication error - redirecting to login');\n      }\n    }\n    return Promise.reject(error);\n  }\n);\n\n// 認証API\nexport const authAPI = {\n  login: async (patientNumber, password) => {\n    return await apiClient.post('/auth/login', {\n      patientNumber,\n      password,\n    });\n  },\n\n  getProfile: async (token) => {\n    return await apiClient.get('/auth/profile', {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n\n  logout: async (token) => {\n    return await apiClient.post('/auth/logout', {}, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n};\n\n// 運動API\nexport const exerciseAPI = {\n  // 運動カテゴリー一覧取得\n  getCategories: async (phase, token) => {\n    const params = phase ? `?phase=${phase}` : '';\n    return await apiClient.get(`/api/exercises/categories${params}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n\n  // フェーズ別運動一覧取得\n  getExercisesByPhase: async (phase, token) => {\n    return await apiClient.get(`/api/exercises/phase/${phase}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n\n  // カテゴリー別運動一覧取得\n  getExercisesByCategory: async (categoryId, token) => {\n    return await apiClient.get(`/api/exercises/category/${categoryId}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n\n  // 患者の運動プラン取得\n  getPatientExercisePlan: async (patientId, phase, token) => {\n    return await apiClient.get(`/api/exercises/patient/${patientId}/plan?phase=${phase}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n\n  // 運動詳細取得\n  getExerciseDetails: async (exerciseId, token) => {\n    return await apiClient.get(`/api/exercises/${exerciseId}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n\n  // 運動セッション記録\n  recordSession: async (sessionData, token) => {\n    return await apiClient.post('/api/exercises/session', sessionData, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n\n  uploadVideo: async (formData, token) => {\n    return await apiClient.post('/api/patient/videos/upload', formData, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n  },\n};\n\n// 進捗API\nexport const progressAPI = {\n  getProgress: async (token) => {\n    return await apiClient.get('/api/patient/progress', {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n\n  submitACLRSI: async (rsiData, token) => {\n    return await apiClient.post('/api/patient/tests/acl-rsi', rsiData, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n};\n\n// 医療連携API\nexport const medicalCollaborationAPI = {\n  getMedicalStaff: async (patientId, token) => {\n    return await apiClient.get(`/api/medical-collaboration/staff?patientId=${patientId}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n\n  sendReport: async (reportData, token) => {\n    return await apiClient.post('/api/medical-collaboration/reports', reportData, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n\n  getMessages: async (patientId, limit, token) => {\n    return await apiClient.get(`/api/medical-collaboration/messages?patientId=${patientId}&limit=${limit}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n\n  sendMessage: async (messageData, token) => {\n    return await apiClient.post('/api/medical-collaboration/messages', messageData, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n\n  getAppointments: async (patientId, token) => {\n    return await apiClient.get(`/api/medical-collaboration/appointments?patientId=${patientId}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  },\n};","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport * as SecureStore from 'expo-secure-store';\nimport { authAPI } from '../../services/api';\n\n// 非同期アクション\nexport const loginUser = createAsyncThunk(\n  'auth/loginUser',\n  async ({ patientNumber, password }, { rejectWithValue }) => {\n    try {\n      const response = await authAPI.login(patientNumber, password);\n      \n      // トークンを安全に保存\n      await SecureStore.setItemAsync('userToken', response.token);\n      \n      return {\n        user: response.user,\n        token: response.token,\n      };\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.error || 'ログインに失敗しました');\n    }\n  }\n);\n\nexport const logoutUser = createAsyncThunk(\n  'auth/logoutUser',\n  async (_, { rejectWithValue }) => {\n    try {\n      await SecureStore.deleteItemAsync('userToken');\n      return null;\n    } catch (error) {\n      return rejectWithValue('ログアウトに失敗しました');\n    }\n  }\n);\n\nexport const checkAuthToken = createAsyncThunk(\n  'auth/checkAuthToken',\n  async (_, { rejectWithValue }) => {\n    try {\n      const token = await SecureStore.getItemAsync('userToken');\n      if (!token) {\n        throw new Error('No token found');\n      }\n      \n      const response = await authAPI.getProfile(token);\n      return {\n        user: response.user,\n        token: token,\n      };\n    } catch (error) {\n      await SecureStore.deleteItemAsync('userToken');\n      return rejectWithValue('認証に失敗しました');\n    }\n  }\n);\n\nconst initialState = {\n  user: null,\n  token: null,\n  isLoading: false,\n  isAuthenticated: false,\n  error: null,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    clearError: (state) => {\n      state.error = null;\n    },\n    updateUserProfile: (state, action) => {\n      if (state.user) {\n        state.user = { ...state.user, ...action.payload };\n      }\n    },\n    // デモ用のログイン（認証バイパス）\n    demoLogin: (state, action) => {\n      state.isAuthenticated = true;\n      state.user = {\n        id: 'demo-user-1',\n        name: '田中太郎',\n        patientNumber: 'DEMO001',\n        currentPhase: action.payload.phase || 'pre_surgery',\n        surgeryDate: '2024-01-15',\n        email: 'demo@example.com',\n      };\n      state.token = null; // デモモードではトークンなし\n      state.error = null;\n      state.isLoading = false;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // ログイン\n      .addCase(loginUser.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isAuthenticated = true;\n        state.user = action.payload.user;\n        state.token = action.payload.token;\n        state.error = null;\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isAuthenticated = false;\n        state.user = null;\n        state.token = null;\n        state.error = action.payload;\n      })\n      // ログアウト\n      .addCase(logoutUser.fulfilled, (state) => {\n        state.isAuthenticated = false;\n        state.user = null;\n        state.token = null;\n        state.error = null;\n      })\n      // トークン確認\n      .addCase(checkAuthToken.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(checkAuthToken.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isAuthenticated = true;\n        state.user = action.payload.user;\n        state.token = action.payload.token;\n      })\n      .addCase(checkAuthToken.rejected, (state) => {\n        state.isLoading = false;\n        state.isAuthenticated = false;\n        state.user = null;\n        state.token = null;\n      });\n  },\n});\n\nexport const { clearError, updateUserProfile, demoLogin } = authSlice.actions;\nexport default authSlice.reducer;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { exerciseAPI } from '../../services/api';\n\n// 非同期アクション: 運動カテゴリー取得\nexport const fetchCategories = createAsyncThunk(\n  'exercise/fetchCategories',\n  async ({ phase, token }, { rejectWithValue }) => {\n    try {\n      const response = await exerciseAPI.getCategories(phase, token);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.error || 'カテゴリー取得に失敗しました');\n    }\n  }\n);\n\n// 非同期アクション: フェーズ別運動取得\nexport const fetchExercisesByPhase = createAsyncThunk(\n  'exercise/fetchExercisesByPhase',\n  async ({ phase, token }, { rejectWithValue }) => {\n    try {\n      const response = await exerciseAPI.getExercisesByPhase(phase, token);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.error || '運動メニューの取得に失敗しました');\n    }\n  }\n);\n\n// 非同期アクション: 患者の運動プラン取得\nexport const fetchPatientExercisePlan = createAsyncThunk(\n  'exercise/fetchPatientExercisePlan',\n  async ({ patientId, phase, token }, { rejectWithValue }) => {\n    try {\n      const response = await exerciseAPI.getPatientExercisePlan(patientId, phase, token);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.error || '運動プランの取得に失敗しました');\n    }\n  }\n);\n\n// 非同期アクション: 運動セッション記録\nexport const recordExerciseSession = createAsyncThunk(\n  'exercise/recordSession',\n  async ({ sessionData, token }, { rejectWithValue }) => {\n    try {\n      const response = await exerciseAPI.recordSession(sessionData, token);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.error || 'セッション記録に失敗しました');\n    }\n  }\n);\n\nconst initialState = {\n  categories: [],\n  exercises: [],\n  patientPlan: [],\n  currentSession: null,\n  sessionHistory: [],\n  isLoading: false,\n  error: null,\n  currentExerciseIndex: 0,\n  exerciseProgress: {},\n  currentPhase: 'pre_surgery',\n};\n\nconst exerciseSlice = createSlice({\n  name: 'exercise',\n  initialState,\n  reducers: {\n    clearError: (state) => {\n      state.error = null;\n    },\n    setCurrentExerciseIndex: (state, action) => {\n      state.currentExerciseIndex = action.payload;\n    },\n    updateExerciseProgress: (state, action) => {\n      const { exerciseId, progress } = action.payload;\n      if (!state.exerciseProgress[exerciseId]) {\n        state.exerciseProgress[exerciseId] = {};\n      }\n      state.exerciseProgress[exerciseId] = {\n        ...state.exerciseProgress[exerciseId],\n        ...progress,\n      };\n    },\n    resetExerciseProgress: (state) => {\n      state.exerciseProgress = {};\n      state.currentExerciseIndex = 0;\n    },\n    setCurrentPhase: (state, action) => {\n      state.currentPhase = action.payload;\n    },\n    startLocalSession: (state, action) => {\n      state.currentSession = {\n        id: Date.now(),\n        patientId: action.payload.patientId,\n        phase: action.payload.phase,\n        startTime: new Date().toISOString(),\n        exercises: [],\n        painLevel: null,\n        borgScale: null,\n        location: null,\n        notes: '',\n      };\n    },\n    endLocalSession: (state) => {\n      if (state.currentSession) {\n        state.currentSession.endTime = new Date().toISOString();\n        state.currentSession.completed = true;\n      }\n    },\n    addExerciseToSession: (state, action) => {\n      if (state.currentSession) {\n        state.currentSession.exercises.push(action.payload);\n      }\n    },\n    // セッション実行関連のアクション\n    setCurrentExercise: (state, action) => {\n      state.currentExercise = action.payload;\n    },\n    completeExercise: (state, action) => {\n      const { exerciseId, sessionData } = action.payload;\n      if (state.currentSession) {\n        state.currentSession.exercises.push({\n          exerciseId,\n          ...sessionData,\n          completedAt: new Date().toISOString(),\n        });\n      }\n      // 運動を完了としてマーク\n      if (state.exerciseProgress[exerciseId]) {\n        state.exerciseProgress[exerciseId].completed = true;\n      }\n    },\n    updateSessionInfo: (state, action) => {\n      if (state.currentSession) {\n        state.currentSession = {\n          ...state.currentSession,\n          ...action.payload,\n        };\n      }\n    },\n    pauseSession: (state) => {\n      if (state.currentSession) {\n        state.currentSession.isPaused = true;\n        state.currentSession.pausedAt = new Date().toISOString();\n      }\n    },\n    resumeSession: (state) => {\n      if (state.currentSession) {\n        state.currentSession.isPaused = false;\n        if (state.currentSession.pausedAt) {\n          const pauseDuration = new Date() - new Date(state.currentSession.pausedAt);\n          state.currentSession.totalPauseDuration = \n            (state.currentSession.totalPauseDuration || 0) + pauseDuration;\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // カテゴリー取得\n      .addCase(fetchCategories.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(fetchCategories.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.categories = action.payload;\n        state.error = null;\n      })\n      .addCase(fetchCategories.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      })\n      // 運動メニュー取得\n      .addCase(fetchExercisesByPhase.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(fetchExercisesByPhase.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.exercises = action.payload;\n        state.error = null;\n      })\n      .addCase(fetchExercisesByPhase.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      })\n      // 患者運動プラン取得\n      .addCase(fetchPatientExercisePlan.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(fetchPatientExercisePlan.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.patientPlan = action.payload;\n        state.error = null;\n      })\n      .addCase(fetchPatientExercisePlan.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      })\n      // セッション記録\n      .addCase(recordExerciseSession.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(recordExerciseSession.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.sessionHistory.push(state.currentSession);\n        state.currentSession = null;\n        state.exerciseProgress = {};\n        state.currentExerciseIndex = 0;\n        state.error = null;\n      })\n      .addCase(recordExerciseSession.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      });\n  },\n});\n\nexport const {\n  clearError,\n  setCurrentExerciseIndex,\n  updateExerciseProgress,\n  resetExerciseProgress,\n  setCurrentPhase,\n  startLocalSession,\n  endLocalSession,\n  addExerciseToSession,\n  setCurrentExercise,\n  completeExercise,\n  updateSessionInfo,\n  pauseSession,\n  resumeSession,\n} = exerciseSlice.actions;\n\nexport default exerciseSlice.reducer;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { progressAPI } from '../../services/api';\n\n// 非同期アクション: 進捗データ取得\nexport const fetchProgressData = createAsyncThunk(\n  'progress/fetchProgressData',\n  async ({ patientId, timeRange, token }, { rejectWithValue }) => {\n    try {\n      const response = await progressAPI.getProgressData(patientId, timeRange, token);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.error || '進捗データの取得に失敗しました');\n    }\n  }\n);\n\n// 非同期アクション: セッション履歴取得\nexport const fetchSessionHistory = createAsyncThunk(\n  'progress/fetchSessionHistory',\n  async ({ patientId, limit, token }, { rejectWithValue }) => {\n    try {\n      const response = await progressAPI.getSessionHistory(patientId, limit, token);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.error || 'セッション履歴の取得に失敗しました');\n    }\n  }\n);\n\n// 非同期アクション: 進捗統計取得\nexport const fetchProgressStats = createAsyncThunk(\n  'progress/fetchProgressStats',\n  async ({ patientId, period, token }, { rejectWithValue }) => {\n    try {\n      const response = await progressAPI.getProgressStats(patientId, period, token);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.error || '統計データの取得に失敗しました');\n    }\n  }\n);\n\nconst initialState = {\n  // 週間・月間目標\n  weeklyGoal: {\n    completed: 0,\n    total: 6,\n    targetSessions: 6,\n  },\n  monthlyGoal: {\n    completed: 0,\n    total: 24,\n    targetSessions: 24,\n  },\n  \n  // 統計データ\n  monthlyStats: {\n    sessionsCompleted: 0,\n    totalExercises: 0,\n    totalDuration: 0,\n    averagePainLevel: 0,\n    averageBorgScale: 0,\n    improvementRate: 0,\n  },\n  \n  // セッション履歴\n  recentSessions: [],\n  sessionHistory: [],\n  \n  // チャートデータ\n  painLevelTrend: [],\n  borgScaleTrend: [],\n  exerciseCountTrend: [],\n  phaseProgressData: [],\n  \n  // フィルター・設定\n  selectedTimeRange: 'week', // week, month, 3months, 6months\n  selectedMetric: 'painLevel', // painLevel, borgScale, exerciseCount\n  \n  // UI状態\n  isLoading: false,\n  error: null,\n  lastUpdated: null,\n};\n\nconst progressSlice = createSlice({\n  name: 'progress',\n  initialState,\n  reducers: {\n    // ローカルセッションデータの追加\n    addSessionToHistory: (state, action) => {\n      const sessionData = {\n        id: Date.now(),\n        date: new Date().toISOString().split('T')[0],\n        ...action.payload,\n      };\n      \n      state.recentSessions.unshift(sessionData);\n      state.sessionHistory.unshift(sessionData);\n      \n      // 最新20件に制限\n      if (state.recentSessions.length > 20) {\n        state.recentSessions = state.recentSessions.slice(0, 20);\n      }\n      \n      // 統計を更新\n      updateStatsFromSessions(state);\n    },\n    \n    // 目標設定\n    setWeeklyGoal: (state, action) => {\n      state.weeklyGoal.targetSessions = action.payload;\n      state.weeklyGoal.total = action.payload;\n    },\n    \n    setMonthlyGoal: (state, action) => {\n      state.monthlyGoal.targetSessions = action.payload;\n      state.monthlyGoal.total = action.payload;\n    },\n    \n    // フィルター設定\n    setTimeRange: (state, action) => {\n      state.selectedTimeRange = action.payload;\n    },\n    \n    setSelectedMetric: (state, action) => {\n      state.selectedMetric = action.payload;\n    },\n    \n    // エラークリア\n    clearError: (state) => {\n      state.error = null;\n    },\n    \n    // リセット\n    resetProgress: (state) => {\n      return {\n        ...initialState,\n        selectedTimeRange: state.selectedTimeRange,\n        selectedMetric: state.selectedMetric,\n      };\n    },\n    \n    // ダミーデータ設定（デモ用）\n    setDummyData: (state) => {\n      state.weeklyGoal = { completed: 4, total: 6, targetSessions: 6 };\n      state.monthlyStats = {\n        sessionsCompleted: 18,\n        totalExercises: 156,\n        totalDuration: 450, // 分\n        averagePainLevel: 2.3,\n        averageBorgScale: 12.5,\n        improvementRate: 15.2,\n      };\n      state.recentSessions = [\n        {\n          id: 1,\n          date: '2024-12-25',\n          exercises: 8,\n          duration: 25,\n          painLevel: 2,\n          borgScale: 11,\n          phase: 'phase_3_2',\n        },\n        {\n          id: 2,\n          date: '2024-12-23',\n          exercises: 6,\n          duration: 20,\n          painLevel: 3,\n          borgScale: 13,\n          phase: 'phase_3_2',\n        },\n        {\n          id: 3,\n          date: '2024-12-21',\n          exercises: 7,\n          duration: 22,\n          painLevel: 2,\n          borgScale: 12,\n          phase: 'phase_3_1',\n        },\n        {\n          id: 4,\n          date: '2024-12-19',\n          exercises: 9,\n          duration: 28,\n          painLevel: 4,\n          borgScale: 14,\n          phase: 'phase_3_1',\n        },\n        {\n          id: 5,\n          date: '2024-12-17',\n          exercises: 5,\n          duration: 18,\n          painLevel: 3,\n          borgScale: 12,\n          phase: 'phase_3_1',\n        },\n      ];\n      \n      // チャートデータ\n      state.painLevelTrend = [\n        { date: '12/17', value: 3 },\n        { date: '12/19', value: 4 },\n        { date: '12/21', value: 2 },\n        { date: '12/23', value: 3 },\n        { date: '12/25', value: 2 },\n      ];\n      \n      state.borgScaleTrend = [\n        { date: '12/17', value: 12 },\n        { date: '12/19', value: 14 },\n        { date: '12/21', value: 12 },\n        { date: '12/23', value: 13 },\n        { date: '12/25', value: 11 },\n      ];\n      \n      state.exerciseCountTrend = [\n        { date: '12/17', value: 5 },\n        { date: '12/19', value: 9 },\n        { date: '12/21', value: 7 },\n        { date: '12/23', value: 6 },\n        { date: '12/25', value: 8 },\n      ];\n      \n      state.lastUpdated = new Date().toISOString();\n    },\n  },\n  \n  extraReducers: (builder) => {\n    builder\n      // 進捗データ取得\n      .addCase(fetchProgressData.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(fetchProgressData.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.monthlyStats = action.payload.stats;\n        state.weeklyGoal = action.payload.weeklyGoal;\n        state.monthlyGoal = action.payload.monthlyGoal;\n        state.lastUpdated = new Date().toISOString();\n      })\n      .addCase(fetchProgressData.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      })\n      \n      // セッション履歴取得\n      .addCase(fetchSessionHistory.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(fetchSessionHistory.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.recentSessions = action.payload.sessions;\n        state.sessionHistory = action.payload.sessions;\n        state.lastUpdated = new Date().toISOString();\n      })\n      .addCase(fetchSessionHistory.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      })\n      \n      // 統計データ取得\n      .addCase(fetchProgressStats.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(fetchProgressStats.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.painLevelTrend = action.payload.painLevelTrend;\n        state.borgScaleTrend = action.payload.borgScaleTrend;\n        state.exerciseCountTrend = action.payload.exerciseCountTrend;\n        state.phaseProgressData = action.payload.phaseProgressData;\n        state.lastUpdated = new Date().toISOString();\n      })\n      .addCase(fetchProgressStats.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      });\n  },\n});\n\n// ヘルパー関数：セッションデータから統計を更新\nfunction updateStatsFromSessions(state) {\n  const sessions = state.recentSessions;\n  if (sessions.length === 0) return;\n  \n  // 今週のセッション数を計算\n  const today = new Date();\n  const weekStart = new Date(today.setDate(today.getDate() - today.getDay()));\n  const weekSessions = sessions.filter(session => {\n    const sessionDate = new Date(session.date);\n    return sessionDate >= weekStart;\n  });\n  \n  state.weeklyGoal.completed = weekSessions.length;\n  \n  // 今月のセッション数を計算\n  const monthStart = new Date(today.getFullYear(), today.getMonth(), 1);\n  const monthSessions = sessions.filter(session => {\n    const sessionDate = new Date(session.date);\n    return sessionDate >= monthStart;\n  });\n  \n  state.monthlyStats.sessionsCompleted = monthSessions.length;\n  \n  // 平均値計算\n  if (monthSessions.length > 0) {\n    state.monthlyStats.averagePainLevel = \n      monthSessions.reduce((sum, s) => sum + (s.painLevel || 0), 0) / monthSessions.length;\n    state.monthlyStats.averageBorgScale = \n      monthSessions.reduce((sum, s) => sum + (s.borgScale || 0), 0) / monthSessions.length;\n    state.monthlyStats.totalExercises = \n      monthSessions.reduce((sum, s) => sum + (s.exercises || 0), 0);\n    state.monthlyStats.totalDuration = \n      monthSessions.reduce((sum, s) => sum + (s.duration || 0), 0);\n  }\n}\n\nexport const {\n  addSessionToHistory,\n  setWeeklyGoal,\n  setMonthlyGoal,\n  setTimeRange,\n  setSelectedMetric,\n  clearError,\n  resetProgress,\n  setDummyData,\n} = progressSlice.actions;\n\nexport default progressSlice.reducer;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { medicalCollaborationAPI } from '../../services/api';\n\n// 非同期アクション: 医療従事者リストの取得\nexport const fetchMedicalStaff = createAsyncThunk(\n  'medicalCollaboration/fetchMedicalStaff',\n  async ({ patientId, token }, { rejectWithValue }) => {\n    try {\n      const response = await medicalCollaborationAPI.getMedicalStaff(patientId, token);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.error || '医療従事者情報の取得に失敗しました');\n    }\n  }\n);\n\n// 非同期アクション: レポート送信\nexport const sendReport = createAsyncThunk(\n  'medicalCollaboration/sendReport',\n  async ({ reportData, token }, { rejectWithValue }) => {\n    try {\n      const response = await medicalCollaborationAPI.sendReport(reportData, token);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.error || 'レポート送信に失敗しました');\n    }\n  }\n);\n\n// 非同期アクション: メッセージ履歴の取得\nexport const fetchMessages = createAsyncThunk(\n  'medicalCollaboration/fetchMessages',\n  async ({ patientId, limit, token }, { rejectWithValue }) => {\n    try {\n      const response = await medicalCollaborationAPI.getMessages(patientId, limit, token);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.error || 'メッセージ履歴の取得に失敗しました');\n    }\n  }\n);\n\n// 非同期アクション: メッセージ送信\nexport const sendMessage = createAsyncThunk(\n  'medicalCollaboration/sendMessage',\n  async ({ messageData, token }, { rejectWithValue }) => {\n    try {\n      const response = await medicalCollaborationAPI.sendMessage(messageData, token);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.error || 'メッセージ送信に失敗しました');\n    }\n  }\n);\n\n// 非同期アクション: 予約の取得\nexport const fetchAppointments = createAsyncThunk(\n  'medicalCollaboration/fetchAppointments',\n  async ({ patientId, token }, { rejectWithValue }) => {\n    try {\n      const response = await medicalCollaborationAPI.getAppointments(patientId, token);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.error || '予約情報の取得に失敗しました');\n    }\n  }\n);\n\nconst initialState = {\n  // 医療従事者情報\n  medicalStaff: {\n    primaryDoctor: null,\n    physiotherapist: null,\n    nurses: [],\n    specialists: [],\n  },\n  \n  // メッセージ・コミュニケーション\n  messages: [],\n  unreadCount: 0,\n  activeConversation: null,\n  \n  // レポート・共有データ\n  sharedReports: [],\n  pendingReports: [],\n  reportTemplates: [],\n  \n  // 予約・スケジュール\n  appointments: [],\n  nextAppointment: null,\n  \n  // 通知・アラート\n  notifications: [],\n  alerts: [],\n  \n  // 設定\n  sharingPreferences: {\n    autoShareProgress: true,\n    autoShareACLRSI: true,\n    autoShareAIAnalysis: false,\n    weeklyReportEnabled: true,\n    emergencyContactEnabled: true,\n  },\n  \n  notificationSettings: {\n    newMessage: true,\n    appointmentReminder: true,\n    reportRequested: true,\n    urgentAlert: true,\n    weeklyDigest: false,\n  },\n  \n  // UI状態\n  isLoading: false,\n  error: null,\n  lastUpdated: null,\n  activeTab: 'team', // team, reports, settings\n};\n\nconst medicalCollaborationSlice = createSlice({\n  name: 'medicalCollaboration',\n  initialState,\n  reducers: {\n    // メッセージ関連\n    addMessage: (state, action) => {\n      const message = {\n        id: Date.now().toString(),\n        timestamp: new Date().toISOString(),\n        isRead: true,\n        isSent: true,\n        ...action.payload,\n      };\n      \n      state.messages.unshift(message);\n      \n      // 最新100件に制限\n      if (state.messages.length > 100) {\n        state.messages = state.messages.slice(0, 100);\n      }\n    },\n    \n    markMessageAsRead: (state, action) => {\n      const messageId = action.payload;\n      const message = state.messages.find(m => m.id === messageId);\n      if (message && !message.isRead) {\n        message.isRead = true;\n        state.unreadCount = Math.max(0, state.unreadCount - 1);\n      }\n    },\n    \n    markAllMessagesAsRead: (state) => {\n      state.messages.forEach(message => {\n        message.isRead = true;\n      });\n      state.unreadCount = 0;\n    },\n    \n    setActiveConversation: (state, action) => {\n      state.activeConversation = action.payload;\n    },\n    \n    // レポート関連\n    addPendingReport: (state, action) => {\n      const report = {\n        id: Date.now().toString(),\n        createdAt: new Date().toISOString(),\n        status: 'pending',\n        ...action.payload,\n      };\n      \n      state.pendingReports.unshift(report);\n    },\n    \n    updateReportStatus: (state, action) => {\n      const { reportId, status } = action.payload;\n      \n      // pending reportsから検索\n      const pendingIndex = state.pendingReports.findIndex(r => r.id === reportId);\n      if (pendingIndex !== -1) {\n        if (status === 'sent') {\n          // pending から shared に移動\n          const report = state.pendingReports[pendingIndex];\n          report.status = 'sent';\n          report.sentAt = new Date().toISOString();\n          state.sharedReports.unshift(report);\n          state.pendingReports.splice(pendingIndex, 1);\n        } else {\n          state.pendingReports[pendingIndex].status = status;\n        }\n      }\n    },\n    \n    // 通知関連\n    addNotification: (state, action) => {\n      const notification = {\n        id: Date.now().toString(),\n        timestamp: new Date().toISOString(),\n        isRead: false,\n        ...action.payload,\n      };\n      \n      state.notifications.unshift(notification);\n      \n      // 通知タイプに応じてunreadCountを更新\n      if (notification.type === 'message') {\n        state.unreadCount += 1;\n      }\n      \n      // 最新50件に制限\n      if (state.notifications.length > 50) {\n        state.notifications = state.notifications.slice(0, 50);\n      }\n    },\n    \n    markNotificationAsRead: (state, action) => {\n      const notificationId = action.payload;\n      const notification = state.notifications.find(n => n.id === notificationId);\n      if (notification && !notification.isRead) {\n        notification.isRead = true;\n      }\n    },\n    \n    // アラート関連\n    addAlert: (state, action) => {\n      const alert = {\n        id: Date.now().toString(),\n        timestamp: new Date().toISOString(),\n        isActive: true,\n        ...action.payload,\n      };\n      \n      state.alerts.unshift(alert);\n      \n      // 最新10件に制限\n      if (state.alerts.length > 10) {\n        state.alerts = state.alerts.slice(0, 10);\n      }\n    },\n    \n    dismissAlert: (state, action) => {\n      const alertId = action.payload;\n      const alert = state.alerts.find(a => a.id === alertId);\n      if (alert) {\n        alert.isActive = false;\n        alert.dismissedAt = new Date().toISOString();\n      }\n    },\n    \n    // 設定関連\n    updateSharingPreferences: (state, action) => {\n      state.sharingPreferences = {\n        ...state.sharingPreferences,\n        ...action.payload,\n      };\n    },\n    \n    updateNotificationSettings: (state, action) => {\n      state.notificationSettings = {\n        ...state.notificationSettings,\n        ...action.payload,\n      };\n    },\n    \n    // UI状態\n    setActiveTab: (state, action) => {\n      state.activeTab = action.payload;\n    },\n    \n    clearError: (state) => {\n      state.error = null;\n    },\n    \n    // ダミーデータ設定（デモ用）\n    setDummyData: (state) => {\n      const now = new Date();\n      \n      // 医療従事者情報\n      state.medicalStaff = {\n        primaryDoctor: {\n          id: 'doc_001',\n          name: '田中 一郎',\n          title: '整形外科医',\n          specialization: 'スポーツ整形外科',\n          hospital: '東京スポーツ医療センター',\n          email: 'tanaka@sports-med.jp',\n          phone: '03-1234-5678',\n          avatar: null,\n          isOnline: true,\n          lastSeen: new Date().toISOString(),\n        },\n        physiotherapist: {\n          id: 'pt_001',\n          name: '佐藤 花子',\n          title: '理学療法士',\n          specialization: 'スポーツリハビリテーション',\n          hospital: '東京スポーツ医療センター',\n          email: 'sato@sports-med.jp',\n          phone: '03-1234-5679',\n          avatar: null,\n          isOnline: false,\n          lastSeen: new Date(now.getTime() - 30 * 60 * 1000).toISOString(),\n        },\n        nurses: [\n          {\n            id: 'nurse_001',\n            name: '山田 次郎',\n            title: '看護師',\n            specialization: 'リハビリテーション看護',\n            hospital: '東京スポーツ医療センター',\n            email: 'yamada@sports-med.jp',\n            avatar: null,\n            isOnline: true,\n          }\n        ],\n        specialists: [\n          {\n            id: 'spec_001',\n            name: '鈴木 三郎',\n            title: 'スポーツ心理学者',\n            specialization: '復帰支援カウンセリング',\n            hospital: '東京スポーツ医療センター',\n            email: 'suzuki@sports-med.jp',\n            avatar: null,\n            isOnline: false,\n          }\n        ],\n      };\n      \n      // メッセージ履歴\n      state.messages = [\n        {\n          id: '1',\n          senderId: 'pt_001',\n          senderName: '佐藤 花子',\n          senderTitle: '理学療法士',\n          content: 'お疲れ様です。今日のトレーニングはいかがでしたか？痛みの状況について教えてください。',\n          timestamp: new Date(now.getTime() - 2 * 60 * 60 * 1000).toISOString(),\n          type: 'text',\n          isRead: false,\n          isSent: false,\n        },\n        {\n          id: '2',\n          senderId: 'patient',\n          senderName: '患者',\n          content: 'お疲れ様です。今日は調子が良く、痛みも2/10程度でした。ミニスクワットも10回×3セット完了できました。',\n          timestamp: new Date(now.getTime() - 90 * 60 * 1000).toISOString(),\n          type: 'text',\n          isRead: true,\n          isSent: true,\n        },\n        {\n          id: '3',\n          senderId: 'doc_001',\n          senderName: '田中 一郎',\n          senderTitle: '整形外科医',\n          content: '経過良好ですね。来週の診察で次のフェーズについて相談しましょう。ACL-RSIの結果も拝見しました。',\n          timestamp: new Date(now.getTime() - 24 * 60 * 60 * 1000).toISOString(),\n          type: 'text',\n          isRead: true,\n          isSent: false,\n        },\n      ];\n      \n      state.unreadCount = 1;\n      \n      // 共有レポート\n      state.sharedReports = [\n        {\n          id: 'report_001',\n          title: '週間進捗レポート',\n          type: 'weekly_progress',\n          createdAt: new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000).toISOString(),\n          sentAt: new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000 + 60000).toISOString(),\n          status: 'sent',\n          recipients: ['doc_001', 'pt_001'],\n          data: {\n            sessionsCompleted: 5,\n            totalExercises: 42,\n            averagePainLevel: 2.1,\n            averageBorgScale: 11.8,\n            noteableProgress: 'ROM改善、筋力向上確認'\n          }\n        },\n        {\n          id: 'report_002',\n          title: 'ACL-RSI評価結果',\n          type: 'acl_rsi',\n          createdAt: new Date(now.getTime() - 3 * 24 * 60 * 60 * 1000).toISOString(),\n          sentAt: new Date(now.getTime() - 3 * 24 * 60 * 60 * 1000 + 120000).toISOString(),\n          status: 'sent',\n          recipients: ['doc_001', 'spec_001'],\n          data: {\n            totalScore: 72,\n            emotionScore: 68,\n            confidenceScore: 75,\n            interpretation: '準備度が中程度',\n            recommendations: ['競技特異的トレーニング', '復帰計画の策定']\n          }\n        }\n      ];\n      \n      // 予約情報\n      state.appointments = [\n        {\n          id: 'apt_001',\n          title: '経過観察・診察',\n          doctor: state.medicalStaff.primaryDoctor,\n          datetime: new Date(now.getTime() + 3 * 24 * 60 * 60 * 1000).toISOString(),\n          duration: 30,\n          location: '東京スポーツ医療センター 3F 診察室A',\n          type: 'consultation',\n          status: 'confirmed',\n          notes: '次フェーズへの移行について相談',\n        },\n        {\n          id: 'apt_002',\n          title: 'リハビリテーション',\n          doctor: state.medicalStaff.physiotherapist,\n          datetime: new Date(now.getTime() + 5 * 24 * 60 * 60 * 1000).toISOString(),\n          duration: 60,\n          location: '東京スポーツ医療センター 2F リハビリ室',\n          type: 'physiotherapy',\n          status: 'confirmed',\n          notes: '機能評価とプログラム調整',\n        }\n      ];\n      \n      state.nextAppointment = state.appointments[0];\n      \n      // 通知\n      state.notifications = [\n        {\n          id: 'notif_001',\n          type: 'message',\n          title: '理学療法士からメッセージ',\n          content: '今日のトレーニングについて質問があります',\n          timestamp: new Date(now.getTime() - 2 * 60 * 60 * 1000).toISOString(),\n          isRead: false,\n          sender: state.medicalStaff.physiotherapist,\n        },\n        {\n          id: 'notif_002',\n          type: 'appointment_reminder',\n          title: '診察予約のリマインダー',\n          content: '3日後の診察予約があります',\n          timestamp: new Date(now.getTime() - 6 * 60 * 60 * 1000).toISOString(),\n          isRead: true,\n          appointment: state.appointments[0],\n        },\n        {\n          id: 'notif_003',\n          type: 'report_shared',\n          title: 'レポートが共有されました',\n          content: 'ACL-RSI評価結果が医療従事者と共有されました',\n          timestamp: new Date(now.getTime() - 3 * 24 * 60 * 60 * 1000).toISOString(),\n          isRead: true,\n          report: state.sharedReports[1],\n        }\n      ];\n      \n      state.lastUpdated = new Date().toISOString();\n    },\n  },\n  \n  extraReducers: (builder) => {\n    builder\n      // 医療従事者取得\n      .addCase(fetchMedicalStaff.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(fetchMedicalStaff.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.medicalStaff = action.payload.medicalStaff;\n        state.lastUpdated = new Date().toISOString();\n      })\n      .addCase(fetchMedicalStaff.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      })\n      \n      // レポート送信\n      .addCase(sendReport.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(sendReport.fulfilled, (state, action) => {\n        state.isLoading = false;\n        // pending reportのステータスを更新\n        const reportId = action.payload.reportId;\n        const pendingIndex = state.pendingReports.findIndex(r => r.id === reportId);\n        if (pendingIndex !== -1) {\n          const report = state.pendingReports[pendingIndex];\n          report.status = 'sent';\n          report.sentAt = new Date().toISOString();\n          state.sharedReports.unshift(report);\n          state.pendingReports.splice(pendingIndex, 1);\n        }\n      })\n      .addCase(sendReport.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      })\n      \n      // メッセージ履歴取得\n      .addCase(fetchMessages.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(fetchMessages.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.messages = action.payload.messages;\n        state.unreadCount = action.payload.unreadCount;\n        state.lastUpdated = new Date().toISOString();\n      })\n      .addCase(fetchMessages.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      })\n      \n      // メッセージ送信\n      .addCase(sendMessage.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(sendMessage.fulfilled, (state, action) => {\n        state.isLoading = false;\n        // 送信したメッセージを履歴に追加\n        const message = {\n          ...action.payload.message,\n          isSent: true,\n          isRead: true,\n        };\n        state.messages.unshift(message);\n      })\n      .addCase(sendMessage.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      })\n      \n      // 予約取得\n      .addCase(fetchAppointments.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(fetchAppointments.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.appointments = action.payload.appointments;\n        state.nextAppointment = action.payload.nextAppointment;\n        state.lastUpdated = new Date().toISOString();\n      })\n      .addCase(fetchAppointments.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      });\n  },\n});\n\nexport const {\n  addMessage,\n  markMessageAsRead,\n  markAllMessagesAsRead,\n  setActiveConversation,\n  addPendingReport,\n  updateReportStatus,\n  addNotification,\n  markNotificationAsRead,\n  addAlert,\n  dismissAlert,\n  updateSharingPreferences,\n  updateNotificationSettings,\n  setActiveTab,\n  clearError,\n  setDummyData,\n} = medicalCollaborationSlice.actions;\n\nexport default medicalCollaborationSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\nimport authSlice from './slices/authSlice';\nimport exerciseSlice from './slices/exerciseSlice';\nimport progressSlice from './slices/progressSlice';\nimport medicalCollaborationSlice from './slices/medicalCollaborationSlice';\n\nexport const store = configureStore({\n  reducer: {\n    auth: authSlice,\n    exercise: exerciseSlice,\n    progress: progressSlice,\n    medicalCollaboration: medicalCollaborationSlice,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: ['persist/PERSIST'],\n      },\n    }),\n});","import { MD3LightTheme as DefaultTheme } from 'react-native-paper';\n\nexport const theme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: '#2E7D32', // 医療用グリーン\n    primaryContainer: '#C8E6C9',\n    secondary: '#1976D2', // 信頼感のあるブルー\n    secondaryContainer: '#BBDEFB',\n    tertiary: '#F57C00', // アクセントオレンジ\n    surface: '#FFFFFF',\n    surfaceVariant: '#F5F5F5',\n    background: '#FAFAFA',\n    error: '#D32F2F',\n    onPrimary: '#FFFFFF',\n    onSecondary: '#FFFFFF',\n    onSurface: '#212121',\n    onBackground: '#212121',\n  },\n  fonts: {\n    ...DefaultTheme.fonts,\n    labelLarge: {\n      fontFamily: 'System',\n      fontSize: 16,\n      fontWeight: '600',\n    },\n  },\n};","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  StyleSheet,\n  KeyboardAvoidingView,\n  Platform,\n  Alert,\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport {\n  Text,\n  TextInput,\n  Button,\n  Card,\n  Title,\n  Paragraph,\n  ActivityIndicator,\n} from 'react-native-paper';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUser, checkAuthToken, clearError, demoLogin } from '../store/slices/authSlice';\n\nconst LoginScreen = ({ navigation }) => {\n  const [patientNumber, setPatientNumber] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n\n  const dispatch = useDispatch();\n  const { isLoading, isAuthenticated, error } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    // アプリ起動時に保存されたトークンをチェック\n    dispatch(checkAuthToken());\n  }, [dispatch]);\n\n  useEffect(() => {\n    // 認証成功時にホーム画面へ遷移\n    if (isAuthenticated) {\n      navigation.replace('Home');\n    }\n  }, [isAuthenticated, navigation]);\n\n  useEffect(() => {\n    // エラー表示\n    if (error) {\n      Alert.alert('ログインエラー', error, [\n        { text: 'OK', onPress: () => dispatch(clearError()) }\n      ]);\n    }\n  }, [error, dispatch]);\n\n  const handleLogin = () => {\n    if (!patientNumber.trim() || !password.trim()) {\n      Alert.alert('入力エラー', '患者番号とパスワードを入力してください。');\n      return;\n    }\n\n    dispatch(loginUser({ patientNumber: patientNumber.trim(), password }));\n  };\n\n  const handleDemoLogin = (phase) => {\n    dispatch(demoLogin({ phase }));\n  };\n\n  if (isLoading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" />\n        <Text style={styles.loadingText}>認証中...</Text>\n      </View>\n    );\n  }\n\n  return (\n    <KeyboardAvoidingView\n      style={styles.container}\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n    >\n      <View style={styles.content}>\n        <Card style={styles.card}>\n          <Card.Content>\n            <Title style={styles.title}>ACL リハビリアプリ</Title>\n            <Paragraph style={styles.subtitle}>\n              前十字靭帯損傷患者用\n            </Paragraph>\n\n            <TextInput\n              label=\"患者番号\"\n              value={patientNumber}\n              onChangeText={setPatientNumber}\n              mode=\"outlined\"\n              style={styles.input}\n              autoCapitalize=\"none\"\n              autoCorrect={false}\n              textContentType=\"username\"\n              disabled={isLoading}\n            />\n\n            <TextInput\n              label=\"パスワード\"\n              value={password}\n              onChangeText={setPassword}\n              mode=\"outlined\"\n              style={styles.input}\n              secureTextEntry={!showPassword}\n              right={\n                <TextInput.Icon\n                  icon={showPassword ? 'eye-off' : 'eye'}\n                  onPress={() => setShowPassword(!showPassword)}\n                />\n              }\n              textContentType=\"password\"\n              disabled={isLoading}\n            />\n\n            <Button\n              mode=\"contained\"\n              onPress={handleLogin}\n              style={styles.loginButton}\n              disabled={isLoading}\n              loading={isLoading}\n            >\n              ログイン\n            </Button>\n\n            <Text style={styles.helpText}>\n              ログインでお困りの場合は、担当の医療従事者にお尋ねください。\n            </Text>\n          </Card.Content>\n        </Card>\n\n        {/* デモ用ボタン */}\n        <Card style={[styles.card, styles.demoCard]}>\n          <Card.Content>\n            <Title style={styles.demoTitle}>デモ版（開発用）</Title>\n            <Paragraph style={styles.demoSubtitle}>\n              各リハビリ段階をテストできます\n            </Paragraph>\n            \n            <View style={styles.demoButtonContainer}>\n              <Button\n                mode=\"outlined\"\n                onPress={() => handleDemoLogin('pre_surgery')}\n                style={styles.demoButton}\n                compact\n              >\n                術前期\n              </Button>\n              <Button\n                mode=\"outlined\"\n                onPress={() => handleDemoLogin('post_surgery_early')}\n                style={styles.demoButton}\n                compact\n              >\n                術直後期\n              </Button>\n              <Button\n                mode=\"outlined\"\n                onPress={() => handleDemoLogin('phase_3_1')}\n                style={styles.demoButton}\n                compact\n              >\n                基礎回復期\n              </Button>\n            </View>\n            \n            <View style={styles.demoButtonContainer}>\n              <Button\n                mode=\"outlined\"\n                onPress={() => handleDemoLogin('phase_3_2')}\n                style={styles.demoButton}\n                compact\n              >\n                筋力強化期\n              </Button>\n              <Button\n                mode=\"outlined\"\n                onPress={() => handleDemoLogin('phase_3_3')}\n                style={styles.demoButton}\n                compact\n              >\n                機能訓練期\n              </Button>\n              <Button\n                mode=\"outlined\"\n                onPress={() => handleDemoLogin('phase_3_4')}\n                style={styles.demoButton}\n                compact\n              >\n                競技復帰期\n              </Button>\n            </View>\n          </Card.Content>\n        </Card>\n      </View>\n    </KeyboardAvoidingView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n  },\n  loadingText: {\n    marginTop: 16,\n    fontSize: 16,\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20,\n  },\n  card: {\n    elevation: 4,\n    borderRadius: 12,\n  },\n  title: {\n    textAlign: 'center',\n    marginBottom: 8,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  subtitle: {\n    textAlign: 'center',\n    marginBottom: 32,\n    color: '#666',\n  },\n  input: {\n    marginBottom: 16,\n  },\n  loginButton: {\n    marginTop: 16,\n    marginBottom: 24,\n    paddingVertical: 8,\n  },\n  helpText: {\n    textAlign: 'center',\n    fontSize: 12,\n    color: '#666',\n    lineHeight: 18,\n  },\n  demoCard: {\n    marginTop: 16,\n    backgroundColor: '#FFF3E0',\n  },\n  demoTitle: {\n    textAlign: 'center',\n    marginBottom: 8,\n    fontSize: 18,\n    color: '#E65100',\n  },\n  demoSubtitle: {\n    textAlign: 'center',\n    marginBottom: 16,\n    color: '#BF360C',\n    fontSize: 12,\n  },\n  demoButtonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 8,\n  },\n  demoButton: {\n    flex: 1,\n    marginHorizontal: 2,\n    borderColor: '#FF9800',\n  },\n});\n\nLoginScreen.propTypes = {\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired,\n    replace: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default LoginScreen;","import React, { useEffect } from 'react';\nimport {\n  View,\n  StyleSheet,\n  ScrollView,\n  Dimensions,\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport {\n  Text,\n  Card,\n  Button,\n  ProgressBar,\n  Chip,\n  Divider,\n  IconButton,\n} from 'react-native-paper';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logoutUser } from '../store/slices/authSlice';\n\nconst { width } = Dimensions.get('window');\n\nconst HomeScreen = ({ navigation }) => {\n  const dispatch = useDispatch();\n  const { user } = useSelector((state) => state.auth);\n\n  // フェーズに応じた表示内容\n  const getPhaseInfo = (phase) => {\n    const phaseMap = {\n      'pre_surgery': {\n        title: '術前期',\n        description: '手術前の準備期間',\n        color: '#FF9800',\n        progress: 0.1,\n      },\n      'post_surgery_early': {\n        title: '術直後期',\n        description: '手術直後〜2週間',\n        color: '#F44336',\n        progress: 0.2,\n      },\n      'phase_3_1': {\n        title: '基礎回復期',\n        description: '2〜6週間',\n        color: '#2196F3',\n        progress: 0.4,\n      },\n      'phase_3_2': {\n        title: '筋力強化期',\n        description: '6〜12週間',\n        color: '#4CAF50',\n        progress: 0.6,\n      },\n      'phase_3_3': {\n        title: '機能訓練期',\n        description: '3〜6ヶ月',\n        color: '#9C27B0',\n        progress: 0.8,\n      },\n      'phase_3_4': {\n        title: '競技復帰期',\n        description: '6〜12ヶ月',\n        color: '#E91E63',\n        progress: 0.95,\n      },\n      'completed': {\n        title: '完了',\n        description: '競技復帰達成',\n        color: '#4CAF50',\n        progress: 1.0,\n      },\n    };\n    return phaseMap[phase] || phaseMap['pre_surgery'];\n  };\n\n  const currentPhaseInfo = getPhaseInfo(user?.currentPhase);\n\n  const handleLogout = () => {\n    dispatch(logoutUser());\n    navigation.replace('Login');\n  };\n\n  const menuItems = [\n    {\n      title: '自主トレーニング',\n      icon: 'dumbbell',\n      description: '今日の運動メニュー',\n      onPress: () => navigation.navigate('Exercise'),\n      color: '#2E7D32',\n    },\n    {\n      title: '進捗確認',\n      icon: 'chart-line',\n      description: '回復状況の確認',\n      onPress: () => navigation.navigate('Progress'),\n      color: '#1976D2',\n    },\n    {\n      title: 'プロフィール',\n      icon: 'account',\n      description: '個人情報・設定',\n      onPress: () => navigation.navigate('Profile'),\n      color: '#7B1FA2',\n    },\n  ];\n\n  return (\n    <ScrollView style={styles.container}>\n      {/* ヘッダー */}\n      <Card style={styles.headerCard}>\n        <Card.Content>\n          <View style={styles.headerContent}>\n            <View style={styles.userInfo}>\n              <Text style={styles.welcomeText}>こんにちは</Text>\n              <Text style={styles.userName}>{user?.name}さん</Text>\n            </View>\n            <IconButton\n              icon=\"logout\"\n              size={24}\n              onPress={handleLogout}\n              style={styles.logoutButton}\n            />\n          </View>\n        </Card.Content>\n      </Card>\n\n      {/* 現在のフェーズ */}\n      <Card style={styles.phaseCard}>\n        <Card.Content>\n          <View style={styles.phaseHeader}>\n            <Text style={styles.phaseTitle}>現在のリハビリ段階</Text>\n            <Chip\n              mode=\"outlined\"\n              style={[styles.phaseChip, { borderColor: currentPhaseInfo.color }]}\n              textStyle={{ color: currentPhaseInfo.color }}\n            >\n              {currentPhaseInfo.title}\n            </Chip>\n          </View>\n          \n          <Text style={styles.phaseDescription}>\n            {currentPhaseInfo.description}\n          </Text>\n          \n          <View style={styles.progressContainer}>\n            <Text style={styles.progressLabel}>全体の進捗</Text>\n            <ProgressBar\n              progress={currentPhaseInfo.progress}\n              color={currentPhaseInfo.color}\n              style={styles.progressBar}\n            />\n            <Text style={styles.progressText}>\n              {Math.round(currentPhaseInfo.progress * 100)}%\n            </Text>\n          </View>\n\n          {user?.surgeryDate && (\n            <Text style={styles.surgeryDate}>\n              手術日: {new Date(user.surgeryDate).toLocaleDateString('ja-JP')}\n            </Text>\n          )}\n        </Card.Content>\n      </Card>\n\n      {/* メインメニュー */}\n      <View style={styles.menuContainer}>\n        {menuItems.map((item, index) => (\n          <Card key={index} style={styles.menuCard}>\n            <Card.Content>\n              <View style={styles.menuContent}>\n                <View style={styles.menuTextContainer}>\n                  <Text style={styles.menuTitle}>{item.title}</Text>\n                  <Text style={styles.menuDescription}>{item.description}</Text>\n                </View>\n                <IconButton\n                  icon={item.icon}\n                  size={32}\n                  iconColor={item.color}\n                  style={[styles.menuIcon, { backgroundColor: `${item.color}15` }]}\n                />\n              </View>\n              <Button\n                mode=\"contained\"\n                onPress={item.onPress}\n                style={[styles.menuButton, { backgroundColor: item.color }]}\n                labelStyle={styles.menuButtonLabel}\n              >\n                開始\n              </Button>\n            </Card.Content>\n          </Card>\n        ))}\n      </View>\n\n      {/* 今日のヒント */}\n      <Card style={styles.tipCard}>\n        <Card.Content>\n          <Text style={styles.tipTitle}>今日のヒント</Text>\n          <Divider style={styles.tipDivider} />\n          <Text style={styles.tipText}>\n            運動前のアイシングは5-10分程度に留め、運動後は15-20分間のアイシングを行いましょう。\n            痛みが強い場合は無理をせず、担当医師にご相談ください。\n          </Text>\n        </Card.Content>\n      </Card>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  headerCard: {\n    margin: 16,\n    marginBottom: 8,\n    elevation: 2,\n  },\n  headerContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  userInfo: {\n    flex: 1,\n  },\n  welcomeText: {\n    fontSize: 14,\n    color: '#666',\n  },\n  userName: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  logoutButton: {\n    margin: 0,\n  },\n  phaseCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n  },\n  phaseHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  phaseTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  phaseChip: {\n    borderWidth: 1,\n  },\n  phaseDescription: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 16,\n  },\n  progressContainer: {\n    marginBottom: 12,\n  },\n  progressLabel: {\n    fontSize: 12,\n    color: '#666',\n    marginBottom: 4,\n  },\n  progressBar: {\n    height: 8,\n    borderRadius: 4,\n    marginBottom: 4,\n  },\n  progressText: {\n    fontSize: 12,\n    textAlign: 'right',\n    color: '#666',\n  },\n  surgeryDate: {\n    fontSize: 12,\n    color: '#666',\n    textAlign: 'center',\n  },\n  menuContainer: {\n    padding: 16,\n    paddingTop: 8,\n  },\n  menuCard: {\n    marginBottom: 12,\n    elevation: 2,\n  },\n  menuContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  menuTextContainer: {\n    flex: 1,\n  },\n  menuTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 4,\n  },\n  menuDescription: {\n    fontSize: 12,\n    color: '#666',\n  },\n  menuIcon: {\n    margin: 0,\n    borderRadius: 8,\n  },\n  menuButton: {\n    borderRadius: 8,\n  },\n  menuButtonLabel: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  tipCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n  },\n  tipTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  tipDivider: {\n    marginBottom: 12,\n  },\n  tipText: {\n    fontSize: 14,\n    lineHeight: 20,\n    color: '#333',\n  },\n});\n\nHomeScreen.propTypes = {\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default HomeScreen;","import React from 'react';\nimport {\n  View,\n  StyleSheet,\n  ScrollView,\n} from 'react-native';\nimport {\n  Text,\n  Card,\n  Button,\n  List,\n  IconButton,\n} from 'react-native-paper';\nimport { useSelector } from 'react-redux';\n\nconst ExerciseScreen = ({ navigation }) => {\n  const { user } = useSelector((state) => state.auth);\n\n  const handleNavigateToMenu = () => {\n    navigation.navigate('ExerciseMenu');\n  };\n\n  const handleNavigateToHistory = () => {\n    navigation.navigate('ExerciseHistory');\n  };\n\n  const menuItems = [\n    {\n      title: '今日のトレーニング',\n      description: '段階別運動メニュー',\n      icon: 'dumbbell',\n      onPress: handleNavigateToMenu,\n      color: '#2E7D32',\n    },\n    {\n      title: 'トレーニング履歴',\n      description: '過去の運動記録',\n      icon: 'history',\n      onPress: handleNavigateToHistory,\n      color: '#1976D2',\n    },\n  ];\n\n  return (\n    <ScrollView style={styles.container}>\n      <Card style={styles.headerCard}>\n        <Card.Content>\n          <Text style={styles.title}>自主トレーニング</Text>\n          <Text style={styles.subtitle}>\n            ACLリハビリテーション プログラム\n          </Text>\n        </Card.Content>\n      </Card>\n\n      <View style={styles.menuContainer}>\n        {menuItems.map((item, index) => (\n          <Card key={index} style={styles.menuCard}>\n            <Card.Content>\n              <View style={styles.menuContent}>\n                <View style={styles.menuTextContainer}>\n                  <Text style={styles.menuTitle}>{item.title}</Text>\n                  <Text style={styles.menuDescription}>{item.description}</Text>\n                </View>\n                <IconButton\n                  icon={item.icon}\n                  size={32}\n                  iconColor={item.color}\n                  style={[styles.menuIcon, { backgroundColor: `${item.color}15` }]}\n                />\n              </View>\n              <Button\n                mode=\"contained\"\n                onPress={item.onPress}\n                style={[styles.menuButton, { backgroundColor: item.color }]}\n                labelStyle={styles.menuButtonLabel}\n              >\n                開始\n              </Button>\n            </Card.Content>\n          </Card>\n        ))}\n      </View>\n\n      <Card style={styles.infoCard}>\n        <Card.Content>\n          <Text style={styles.infoTitle}>運動時の注意事項</Text>\n          <List.Section>\n            <List.Item\n              title=\"痛みの確認\"\n              description=\"運動中に痛みを感じた場合は即座に中止してください\"\n              left={() => <List.Icon icon=\"alert-circle\" color=\"#F44336\" />}\n            />\n            <List.Item\n              title=\"適切な環境\"\n              description=\"十分なスペースと安全な環境で実施してください\"\n              left={() => <List.Icon icon=\"home\" color=\"#4CAF50\" />}\n            />\n            <List.Item\n              title=\"水分補給\"\n              description=\"運動前後の水分補給を忘れずに行ってください\"\n              left={() => <List.Icon icon=\"water\" color=\"#2196F3\" />}\n            />\n          </List.Section>\n        </Card.Content>\n      </Card>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  headerCard: {\n    margin: 16,\n    elevation: 2,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 4,\n  },\n  subtitle: {\n    fontSize: 14,\n    color: '#666',\n  },\n  menuContainer: {\n    padding: 16,\n    paddingTop: 8,\n  },\n  menuCard: {\n    marginBottom: 12,\n    elevation: 2,\n  },\n  menuContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  menuTextContainer: {\n    flex: 1,\n  },\n  menuTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 4,\n  },\n  menuDescription: {\n    fontSize: 14,\n    color: '#666',\n  },\n  menuIcon: {\n    margin: 0,\n    borderRadius: 8,\n  },\n  menuButton: {\n    borderRadius: 8,\n  },\n  menuButtonLabel: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  infoCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n  },\n  infoTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n});\n\nexport default ExerciseScreen;","import React, { useEffect, useState } from 'react';\nimport {\n  View,\n  StyleSheet,\n  ScrollView,\n  Dimensions,\n  Alert,\n} from 'react-native';\nimport {\n  Text,\n  Card,\n  Button,\n  List,\n  Chip,\n  ActivityIndicator,\n  Divider,\n  Badge,\n  IconButton,\n} from 'react-native-paper';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchPatientExercisePlan,\n  setCurrentPhase,\n  startLocalSession,\n  clearError,\n} from '../store/slices/exerciseSlice';\n\nconst { width } = Dimensions.get('window');\n\nconst ExerciseMenuScreen = ({ navigation }) => {\n  const dispatch = useDispatch();\n  const { user, token } = useSelector((state) => state.auth);\n  const { \n    patientPlan, \n    isLoading, \n    error, \n    currentPhase,\n    currentSession \n  } = useSelector((state) => state.exercise);\n\n  const [expandedCategories, setExpandedCategories] = useState({});\n\n  useEffect(() => {\n    if (user) {\n      // ユーザーの現在のフェーズを設定\n      const userPhase = user.currentPhase || 'pre_surgery';\n      dispatch(setCurrentPhase(userPhase));\n      \n      // デモ用のダミーデータを設定（実際のAPIが利用できない場合）\n      if (!token) {\n        // ダミーデータで患者プランを設定\n        const dummyPlan = getDummyExercisePlan(userPhase);\n        // Redux storeに直接設定する代わりに、ローカル状態で管理\n        setLocalPatientPlan(dummyPlan);\n      } else {\n        // 患者の運動プランを取得\n        dispatch(fetchPatientExercisePlan({\n          patientId: user.id,\n          phase: userPhase,\n          token: token\n        }));\n      }\n    }\n  }, [dispatch, user, token]);\n\n  const [localPatientPlan, setLocalPatientPlan] = useState([]);\n\n  // ダミーデータ生成関数\n  const getDummyExercisePlan = (phase) => {\n    const phaseExercises = {\n      'pre_surgery': [\n        // ROM改善\n        {\n          id: '1',\n          exercise_name: 'ヒールプロップス',\n          description: '膝裏に空間を作り、重力で自然に伸びるようにする。最優先事項',\n          category_name: 'ROM改善',\n          assigned_sets: 1,\n          assigned_reps: 1,\n          duration: '10-20分',\n          frequency: '1日数回',\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        {\n          id: '2',\n          exercise_name: 'ヒールスライド',\n          description: 'タオルで補助し、痛みのない範囲でゆっくり曲げる',\n          category_name: 'ROM改善',\n          assigned_sets: 5,\n          assigned_reps: 20,\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        {\n          id: '3',\n          exercise_name: 'パテラモビライゼーション',\n          description: '膝のお皿を上下左右に優しく動かす',\n          category_name: 'ROM改善',\n          assigned_sets: 1,\n          assigned_reps: 1,\n          duration: '5分程度',\n          frequency: '1日数回',\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        \n        // 筋力（患側）\n        {\n          id: '4',\n          exercise_name: 'クワッドセッティング',\n          description: '膝裏のタオルを押しつぶす意識。ハムストリングスも同時に収縮させる（同時収縮）',\n          category_name: '筋力（患側）',\n          assigned_sets: 3,\n          assigned_reps: 12,\n          hold_time: '5秒保持',\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        {\n          id: '5',\n          exercise_name: 'SLR（ストレートレッグレイズ）',\n          description: '膝が曲がり落ちないように（ラグ無し）。股関節ではなく大腿四頭筋で上げる意識',\n          category_name: '筋力（患側）',\n          assigned_sets: 3,\n          assigned_reps: 12,\n          difficulty_level: 'beginner',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        {\n          id: '6',\n          exercise_name: 'グルートブリッジ',\n          description: '股関節をしっかり伸展させる。お尻の筋肉を意識する',\n          category_name: '筋力（患側）',\n          assigned_sets: 3,\n          assigned_reps: 15,\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        \n        // 筋力（患部外）\n        {\n          id: '7',\n          exercise_name: '健側の片脚トレーニング',\n          description: '片脚スクワット、片脚カーフレイズ、片脚RDLなど。クロス・エデュケーション効果を狙う',\n          category_name: '筋力（患部外）',\n          assigned_sets: 3,\n          assigned_reps: 15,\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        {\n          id: '8',\n          exercise_name: '体幹トレーニング',\n          description: 'プランク、サイドプランク。体幹の安定は全ての動作の基礎',\n          category_name: '筋力（患部外）',\n          assigned_sets: 3,\n          assigned_reps: 1,\n          duration: '30-60秒',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        {\n          id: '9',\n          exercise_name: '上半身トレーニング',\n          description: 'プレス系、プル系など、膝に負担のかからない種目をバランス良く行う',\n          category_name: '筋力（患部外）',\n          assigned_sets: 3,\n          assigned_reps: 12,\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        \n        // 有酸素運動\n        {\n          id: '10',\n          exercise_name: 'エアロバイク',\n          description: 'サドルの高さを調整し、伸展・屈曲両方の可動域改善にも活用する',\n          category_name: '有酸素運動',\n          assigned_sets: 1,\n          assigned_reps: 1,\n          duration: '20-30分',\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n      ],\n      'post_surgery_early': [\n        // アイシング・挙上\n        {\n          id: '101',\n          exercise_name: 'アイシング・挙上',\n          description: '痛みと腫れの管理が最優先。挙上時は膝裏に枕を入れない',\n          category_name: 'アイシング・挙上',\n          assigned_sets: 1,\n          assigned_reps: 1,\n          duration: '20分',\n          frequency: '頻回',\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        \n        // ROM\n        {\n          id: '102',\n          exercise_name: 'ヒールプロップス',\n          description: '完全伸展（0°）の達成と維持が最重要目標',\n          category_name: 'ROM',\n          assigned_sets: 1,\n          assigned_reps: 1,\n          duration: '20-30分',\n          frequency: '1日数回',\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        {\n          id: '103',\n          exercise_name: 'ヒールスライド',\n          description: '痛みのない範囲で優しく行う。目標は90°屈曲',\n          category_name: 'ROM',\n          assigned_sets: 3,\n          assigned_reps: 15,\n          note: '10-20回の範囲で調整',\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        {\n          id: '104',\n          exercise_name: 'アンクルポンプ',\n          description: 'DVT予防のために積極的に行う',\n          category_name: 'ROM',\n          assigned_sets: 1,\n          assigned_reps: 15,\n          frequency: '毎時',\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        \n        // 筋力（患側）\n        {\n          id: '105',\n          exercise_name: 'クワッドセッティング',\n          description: '強い収縮を意識する。NMESが有効な場合もある',\n          category_name: '筋力（患側）',\n          assigned_sets: 3,\n          assigned_reps: 12,\n          hold_time: '5秒保持',\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        {\n          id: '106',\n          exercise_name: 'SLR（伸展ラグ無し）',\n          description: '膝が完全に伸びたまま上げられる場合のみ実施',\n          category_name: '筋力（患側）',\n          assigned_sets: 3,\n          assigned_reps: 10,\n          difficulty_level: 'beginner',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        \n        // 筋力（健側）\n        {\n          id: '107',\n          exercise_name: '片脚ブリッジ',\n          description: '健側のお尻とハムストリングスを強化',\n          category_name: '筋力（健側）',\n          assigned_sets: 3,\n          assigned_reps: 12,\n          note: '10-15回の範囲で調整',\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        {\n          id: '108',\n          exercise_name: '片脚カーフレイズ',\n          description: '健側のふくらはぎを強化',\n          category_name: '筋力（健側）',\n          assigned_sets: 3,\n          assigned_reps: 17,\n          note: '15-20回の範囲で調整',\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n      ],\n      'post_surgery_1_4weeks': [\n        // ROM\n        {\n          id: '201',\n          exercise_name: 'エアロバイク',\n          description: '最初は揺らす動きから。完全な回転ができるようになったら徐々に時間を延ばす',\n          category_name: 'ROM',\n          assigned_sets: 1,\n          assigned_reps: 1,\n          duration: '10-20分',\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        \n        // 歩行\n        {\n          id: '202',\n          exercise_name: '歩行訓練',\n          description: '鏡を見ながら、左右対称で滑らかな歩行を意識する。質を重視',\n          category_name: '歩行',\n          assigned_sets: 1,\n          assigned_reps: 1,\n          note: '質を重視',\n          difficulty_level: 'beginner',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        \n        // 筋力（患側）\n        {\n          id: '203',\n          exercise_name: '両脚ミニスクワット',\n          description: '膝屈曲45°まで。膝がつま先より前に出過ぎないように注意',\n          category_name: '筋力（患側）',\n          assigned_sets: 3,\n          assigned_reps: 17,\n          note: '15-20回の範囲で調整',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        {\n          id: '204',\n          exercise_name: 'レッグプレス（両脚）',\n          description: '軽い負荷から開始し、左右均等に力を入れる',\n          category_name: '筋力（患側）',\n          assigned_sets: 3,\n          assigned_reps: 17,\n          note: '15-20回の範囲で調整',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        {\n          id: '205',\n          exercise_name: 'OKC膝伸展（4週目以降）',\n          description: '抵抗なしで、90°から45°の範囲のみ。痛みに注意',\n          category_name: '筋力（患側）',\n          assigned_sets: 2,\n          assigned_reps: 12,\n          note: '10-15回×2-3セット',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        \n        // 筋力（健側）\n        {\n          id: '206',\n          exercise_name: '片脚レッグプレス',\n          description: '健側の筋力を積極的に向上させる',\n          category_name: '筋力（健側）',\n          assigned_sets: 3,\n          assigned_reps: 11,\n          note: '10-12回の範囲で調整',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        {\n          id: '207',\n          exercise_name: '片脚RDL',\n          description: 'フォームを重視し、ハムストリングスと殿筋を鍛える',\n          category_name: '筋力（健側）',\n          assigned_sets: 3,\n          assigned_reps: 11,\n          note: '10-12回の範囲で調整',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        \n        // 体幹\n        {\n          id: '208',\n          exercise_name: 'プランク（動的バリエーション）',\n          description: '腕や脚を交互に上げるなど、安定性を保ちながら動きを加える',\n          category_name: '体幹',\n          assigned_sets: 3,\n          assigned_reps: 1,\n          duration: '30-60秒',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n      ],\n      'post_surgery_1_2months': [\n        // 筋力（CKC）\n        {\n          id: '301',\n          exercise_name: 'スクワット',\n          description: '屈曲角度を90°に近づける。フォームを最優先',\n          category_name: '筋力（CKC）',\n          assigned_sets: 3,\n          assigned_reps: 13,\n          note: '12-15回の範囲で調整',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        {\n          id: '302',\n          exercise_name: 'ステップアップ（前方・側方）',\n          description: '低い台から始める。体幹がぶれないように',\n          category_name: '筋力（CKC）',\n          assigned_sets: 3,\n          assigned_reps: 12,\n          note: '10-15回の範囲で調整',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        {\n          id: '303',\n          exercise_name: '片脚レッグプレス',\n          description: '患側の脚でコントロールしながら押す',\n          category_name: '筋力（CKC）',\n          assigned_sets: 3,\n          assigned_reps: 12,\n          note: '10-15回の範囲で調整',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        \n        // バランス\n        {\n          id: '304',\n          exercise_name: '片脚立ち（不安定面上）',\n          description: 'BOSUやフォームパッド上で。視線を動かしたり、ボールを扱ったりして難易度を上げる',\n          category_name: 'バランス',\n          assigned_sets: 3,\n          assigned_reps: 1,\n          duration: '30-60秒保持',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        \n        // 体幹\n        {\n          id: '305',\n          exercise_name: 'バードドッグ',\n          description: '体幹を一直線に保ち、ゆっくりと手足を伸ばす',\n          category_name: '体幹',\n          assigned_sets: 3,\n          assigned_reps: 10,\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n      ],\n      'post_surgery_2_3months': [\n        // 筋力\n        {\n          id: '401',\n          exercise_name: 'ランジ（前方・側方）',\n          description: '踏み出した膝が内側に入らないように。体幹は直立を保つ',\n          category_name: '筋力',\n          assigned_sets: 3,\n          assigned_reps: 11,\n          note: '10-12回の範囲で調整',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        {\n          id: '402',\n          exercise_name: '片脚スクワット（支持あり）',\n          description: '鏡でフォームを確認しながら、徐々に深く。膝とつま先の向きを揃える',\n          category_name: '筋力',\n          assigned_sets: 3,\n          assigned_reps: 10,\n          note: '8-12回の範囲で調整',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        {\n          id: '403',\n          exercise_name: 'フィジオボール・ハムストリングカール',\n          description: 'お尻を高く保ち、ハムストリングスでボールを引き寄せる',\n          category_name: '筋力',\n          assigned_sets: 3,\n          assigned_reps: 12,\n          note: '10-15回の範囲で調整',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        \n        // 有酸素運動\n        {\n          id: '404',\n          exercise_name: 'バイク/エリプティカル',\n          description: '強度を上げて心拍数を高める。ランニングへの準備',\n          category_name: '有酸素運動',\n          assigned_sets: 1,\n          assigned_reps: 1,\n          duration: '20-30分',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n        \n        // 体幹\n        {\n          id: '405',\n          exercise_name: 'フィジオボール・プランク',\n          description: '不安定なボールの上で体幹を固める',\n          category_name: '体幹',\n          assigned_sets: 3,\n          assigned_reps: 1,\n          duration: '30-60秒',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n      ],\n      'post_surgery_3_4months': [\n        // 有酸素\n        {\n          id: '501',\n          exercise_name: 'ジョグ/ウォークプログラム',\n          description: '基準を満たした場合のみ開始。痛みや腫れが出たら中止',\n          category_name: '有酸素',\n          assigned_sets: 1,\n          assigned_reps: 1,\n          duration: '20分から開始',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: false,\n          is_completed: false,\n          note: 'ランニング開始基準をクリアしてから実施',\n        },\n        \n        // プライオメトリクス\n        {\n          id: '502',\n          exercise_name: '両脚ラインホップ',\n          description: '軽く、静かに着地する。膝のアライメントに集中',\n          category_name: 'プライオメトリクス',\n          assigned_sets: 3,\n          assigned_reps: 1,\n          duration: '30秒',\n          difficulty_level: 'advanced',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        {\n          id: '503',\n          exercise_name: '両脚ボックスジャンプ（低）',\n          description: '低い台（15-30cm）へ跳び乗り、静かに降りる。着地をコントロール',\n          category_name: 'プライオメトリクス',\n          assigned_sets: 3,\n          assigned_reps: 9,\n          note: '8-10回の範囲で調整',\n          difficulty_level: 'advanced',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        \n        // 筋力\n        {\n          id: '504',\n          exercise_name: 'ゴブレットスクワット',\n          description: '重量を増やし、パワー（挙上速度）を意識する',\n          category_name: '筋力',\n          assigned_sets: 3,\n          assigned_reps: 10,\n          note: '8-12回の範囲で調整',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        {\n          id: '505',\n          exercise_name: 'ウォーキングランジ',\n          description: '安定したフォームで一歩ずつ進む',\n          category_name: '筋力',\n          assigned_sets: 3,\n          assigned_reps: 10,\n          note: '10歩',\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        \n        // 体幹\n        {\n          id: '506',\n          exercise_name: 'メディシンボールツイスト',\n          description: '座位で体幹を回旋させる。スポーツ動作への準備',\n          category_name: '体幹',\n          assigned_sets: 3,\n          assigned_reps: 15,\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: false,\n          is_completed: false,\n        },\n      ],\n      'post_surgery_4_6months': [\n        // プライオメトリクス\n        {\n          id: '601',\n          exercise_name: '片脚着地ドリル',\n          description: '低い台から片脚で着地し、3秒静止。膝と股関節で衝撃を吸収',\n          category_name: 'プライオメトリクス',\n          assigned_sets: 3,\n          assigned_reps: 9,\n          note: '8-10回の範囲で調整',\n          difficulty_level: 'advanced',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        {\n          id: '602',\n          exercise_name: 'スケーターホップ',\n          description: '左右に跳び、片脚でバランスを保つ。着地の安定性を重視',\n          category_name: 'プライオメトリクス',\n          assigned_sets: 3,\n          assigned_reps: 11,\n          note: '10-12回の範囲で調整',\n          difficulty_level: 'advanced',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        {\n          id: '603',\n          exercise_name: '片脚ホップ（距離）',\n          description: '距離よりもフォームと着地の質を優先する',\n          category_name: 'プライオメトリクス',\n          assigned_sets: 3,\n          assigned_reps: 6,\n          note: '5-8回の範囲で調整',\n          difficulty_level: 'advanced',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        \n        // アジリティ\n        {\n          id: '604',\n          exercise_name: 'ラダードリル',\n          description: '素早い足の動きを練習。最初はゆっくり正確に',\n          category_name: 'アジリティ',\n          assigned_sets: 2,\n          assigned_reps: 1,\n          note: '各ドリル × 2-3セット',\n          difficulty_level: 'advanced',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        {\n          id: '605',\n          exercise_name: 'Tドリル／ボックスドリル',\n          description: '計画された前後左右への移動。減速と加速のコントロール',\n          category_name: 'アジリティ',\n          assigned_sets: 3,\n          assigned_reps: 4,\n          note: '3-5往復',\n          difficulty_level: 'advanced',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        \n        // 筋力\n        {\n          id: '606',\n          exercise_name: 'バーベルスクワット／デッドリフト',\n          description: '最大筋力向上のため高重量・低回数で。フォームは絶対に崩さない',\n          category_name: '筋力',\n          assigned_sets: 3,\n          assigned_reps: 5,\n          note: '3-8回 × 3-4セット',\n          difficulty_level: 'advanced',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n      ],\n      'phase_3_1': [\n        {\n          id: '4',\n          exercise_name: '片脚立位',\n          description: '患側での片脚立位練習',\n          category_name: '歩行訓練',\n          assigned_sets: 3,\n          assigned_reps: 5,\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n      ],\n      'phase_3_2': [\n        {\n          id: '5',\n          exercise_name: 'ミニスクワット',\n          description: '膝屈曲30度までの浅いスクワット',\n          category_name: '筋力強化',\n          assigned_sets: 3,\n          assigned_reps: 10,\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n        {\n          id: '6',\n          exercise_name: 'バランスボード',\n          description: 'バランスボードを使った安定性訓練',\n          category_name: 'バランス訓練',\n          assigned_sets: 3,\n          assigned_reps: 1,\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n      ],\n      'phase_3_3': [\n        {\n          id: '7',\n          exercise_name: 'ジャンプ着地',\n          description: '両足でのジャンプ着地練習',\n          category_name: 'スポーツ動作訓練',\n          assigned_sets: 3,\n          assigned_reps: 10,\n          difficulty_level: 'advanced',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n      ],\n      'phase_3_4': [\n        {\n          id: '8',\n          exercise_name: 'カッティング動作',\n          description: '方向転換動作の練習',\n          category_name: '競技特異的訓練',\n          assigned_sets: 3,\n          assigned_reps: 5,\n          difficulty_level: 'advanced',\n          requires_ai_analysis: true,\n          is_completed: false,\n        },\n      ],\n    };\n    \n    return phaseExercises[phase] || [];\n  };\n\n  const getPhaseInfo = (phase) => {\n    const phaseMap = {\n      'pre_surgery': {\n        title: '術前期',\n        description: '手術前の準備期間',\n        color: '#FF9800',\n      },\n      'post_surgery_early': {\n        title: '術直後期',\n        description: '手術直後〜1週間',\n        color: '#F44336',\n      },\n      'post_surgery_1_4weeks': {\n        title: '術後1-4週間',\n        description: '術後1〜4週間',\n        color: '#E91E63',\n      },\n      'post_surgery_1_2months': {\n        title: '術後1-2ヶ月',\n        description: '術後1〜2ヶ月',\n        color: '#9C27B0',\n      },\n      'post_surgery_2_3months': {\n        title: '術後2-3ヶ月',\n        description: '術後2〜3ヶ月',\n        color: '#673AB7',\n      },\n      'post_surgery_3_4months': {\n        title: '術後3-4ヶ月',\n        description: '術後3〜4ヶ月',\n        color: '#3F51B5',\n      },\n      'post_surgery_4_6months': {\n        title: '術後4-6ヶ月',\n        description: '術後4〜6ヶ月',\n        color: '#2196F3',\n      },\n      'phase_3_1': {\n        title: '基礎回復期',\n        description: '2〜6週間',\n        color: '#2196F3',\n      },\n      'phase_3_2': {\n        title: '筋力強化期',\n        description: '6〜12週間',\n        color: '#4CAF50',\n      },\n      'phase_3_3': {\n        title: '機能訓練期',\n        description: '3〜6ヶ月',\n        color: '#9C27B0',\n      },\n      'phase_3_4': {\n        title: '競技復帰期',\n        description: '6〜12ヶ月',\n        color: '#E91E63',\n      },\n    };\n    return phaseMap[phase] || phaseMap['pre_surgery'];\n  };\n\n  const groupExercisesByCategory = (exercises) => {\n    const grouped = {};\n    exercises.forEach(exercise => {\n      const categoryName = exercise.category_name || 'その他';\n      if (!grouped[categoryName]) {\n        grouped[categoryName] = [];\n      }\n      grouped[categoryName].push(exercise);\n    });\n    return grouped;\n  };\n\n  const handleStartSession = () => {\n    const planToUse = token ? patientPlan : localPatientPlan;\n    \n    if (currentSession) {\n      Alert.alert(\n        '進行中のセッション',\n        'すでに進行中のセッションがあります。継続しますか？',\n        [\n          { text: 'キャンセル', style: 'cancel' },\n          { text: '継続', onPress: () => navigation.navigate('ExerciseSession') },\n        ]\n      );\n      return;\n    }\n\n    if (planToUse.length === 0) {\n      Alert.alert('お知らせ', '現在利用可能な運動メニューがありません。');\n      return;\n    }\n\n    // セッション開始\n    dispatch(startLocalSession({\n      patientId: user.id,\n      phase: currentPhase,\n    }));\n\n    Alert.alert(\n      'セッション開始',\n      `${planToUse.length}個の運動メニューでトレーニングを開始します。`,\n      [\n        { text: 'キャンセル', style: 'cancel' },\n        { text: '開始', onPress: () => navigation.navigate('ExerciseSession') }\n      ]\n    );\n  };\n\n  const handleExercisePress = (exercise) => {\n    Alert.alert(\n      exercise.exercise_name,\n      `詳細: ${exercise.description}\\n\\nセット数: ${exercise.assigned_sets}\\n回数: ${exercise.assigned_reps}\\n難易度: ${getDifficultyLabel(exercise.difficulty_level)}\\n\\n（詳細画面は今後実装予定です）`,\n      [\n        { text: 'OK' }\n      ]\n    );\n  };\n\n  const toggleCategory = (categoryName) => {\n    setExpandedCategories(prev => ({\n      ...prev,\n      [categoryName]: !prev[categoryName]\n    }));\n  };\n\n  const getDifficultyColor = (level) => {\n    const colorMap = {\n      'beginner': '#4CAF50',\n      'intermediate': '#FF9800',\n      'advanced': '#F44336',\n    };\n    return colorMap[level] || '#757575';\n  };\n\n  const getDifficultyLabel = (level) => {\n    const labelMap = {\n      'beginner': '初級',\n      'intermediate': '中級',\n      'advanced': '上級',\n    };\n    return labelMap[level] || level;\n  };\n\n  if (isLoading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" />\n        <Text style={styles.loadingText}>運動メニューを読み込み中...</Text>\n      </View>\n    );\n  }\n\n  if (error) {\n    return (\n      <View style={styles.errorContainer}>\n        <Text style={styles.errorText}>エラーが発生しました</Text>\n        <Text style={styles.errorMessage}>{error}</Text>\n        <Button mode=\"contained\" onPress={() => dispatch(clearError())}>\n          再試行\n        </Button>\n      </View>\n    );\n  }\n\n  const phaseInfo = getPhaseInfo(currentPhase);\n  // APIからのデータまたはダミーデータを使用\n  const currentPlan = token ? patientPlan : localPatientPlan;\n  const groupedExercises = groupExercisesByCategory(currentPlan);\n\n  return (\n    <ScrollView style={styles.container}>\n      {/* フェーズ情報 */}\n      <Card style={styles.phaseCard}>\n        <Card.Content>\n          <View style={styles.phaseHeader}>\n            <Text style={styles.phaseTitle}>現在のリハビリ段階</Text>\n            <Chip\n              mode=\"outlined\"\n              style={[styles.phaseChip, { borderColor: phaseInfo.color }]}\n              textStyle={{ color: phaseInfo.color }}\n            >\n              {phaseInfo.title}\n            </Chip>\n          </View>\n          <Text style={styles.phaseDescription}>{phaseInfo.description}</Text>\n        </Card.Content>\n      </Card>\n\n      {/* セッション開始ボタン */}\n      <Card style={styles.sessionCard}>\n        <Card.Content>\n          <Text style={styles.sessionTitle}>今日のトレーニング</Text>\n          <Text style={styles.sessionDescription}>\n            {currentPlan.length}個の運動メニューが利用可能です\n          </Text>\n          <Button\n            mode=\"contained\"\n            onPress={handleStartSession}\n            style={styles.startButton}\n            disabled={currentPlan.length === 0}\n          >\n            {currentSession ? 'セッションを継続' : 'セッションを開始'}\n          </Button>\n        </Card.Content>\n      </Card>\n\n      {/* 運動メニュー一覧 */}\n      {Object.keys(groupedExercises).length > 0 ? (\n        Object.entries(groupedExercises).map(([categoryName, exercises]) => (\n          <Card key={categoryName} style={styles.categoryCard}>\n            <List.Section>\n              <List.Subheader style={styles.categoryHeader}>\n                <View style={styles.categoryHeaderContent}>\n                  <Text style={styles.categoryTitle}>{categoryName}</Text>\n                  <Badge size={24}>{exercises.length}</Badge>\n                </View>\n              </List.Subheader>\n              <Divider />\n              {exercises.map((exercise, index) => (\n                <List.Item\n                  key={exercise.id}\n                  title={exercise.exercise_name}\n                  description={`${exercise.assigned_sets}セット × ${exercise.assigned_reps}回`}\n                  left={() => (\n                    <View style={styles.exerciseIcon}>\n                      <IconButton\n                        icon={exercise.requires_ai_analysis ? \"camera\" : \"dumbbell\"}\n                        size={24}\n                        iconColor={phaseInfo.color}\n                      />\n                    </View>\n                  )}\n                  right={() => (\n                    <View style={styles.exerciseInfo}>\n                      <Chip\n                        mode=\"outlined\"\n                        compact\n                        style={[\n                          styles.difficultyChip,\n                          { borderColor: getDifficultyColor(exercise.difficulty_level) }\n                        ]}\n                        textStyle={{ \n                          color: getDifficultyColor(exercise.difficulty_level),\n                          fontSize: 10\n                        }}\n                      >\n                        {getDifficultyLabel(exercise.difficulty_level)}\n                      </Chip>\n                      {exercise.is_completed && (\n                        <IconButton\n                          icon=\"check-circle\"\n                          size={20}\n                          iconColor=\"#4CAF50\"\n                          style={styles.completedIcon}\n                        />\n                      )}\n                    </View>\n                  )}\n                  onPress={() => handleExercisePress(exercise)}\n                  style={styles.exerciseItem}\n                />\n              ))}\n            </List.Section>\n          </Card>\n        ))\n      ) : (\n        <Card style={styles.emptyCard}>\n          <Card.Content>\n            <Text style={styles.emptyTitle}>運動メニューがありません</Text>\n            <Text style={styles.emptyDescription}>\n              現在利用可能な運動メニューがありません。\n              医療従事者にご相談ください。\n            </Text>\n          </Card.Content>\n        </Card>\n      )}\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n  },\n  loadingText: {\n    marginTop: 16,\n    fontSize: 16,\n    color: '#666',\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n    padding: 20,\n  },\n  errorText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#F44336',\n    marginBottom: 8,\n  },\n  errorMessage: {\n    fontSize: 14,\n    color: '#666',\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n  phaseCard: {\n    margin: 16,\n    elevation: 2,\n  },\n  phaseHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  phaseTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  phaseChip: {\n    borderWidth: 1,\n  },\n  phaseDescription: {\n    fontSize: 14,\n    color: '#666',\n  },\n  sessionCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n  },\n  sessionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  sessionDescription: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 16,\n  },\n  startButton: {\n    borderRadius: 8,\n  },\n  categoryCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n  },\n  categoryHeader: {\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n  },\n  categoryHeaderContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n  },\n  categoryTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  exerciseItem: {\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n  },\n  exerciseIcon: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 8,\n  },\n  exerciseInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  difficultyChip: {\n    borderWidth: 1,\n    marginRight: 4,\n  },\n  completedIcon: {\n    margin: 0,\n  },\n  emptyCard: {\n    margin: 16,\n    elevation: 2,\n  },\n  emptyTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 8,\n  },\n  emptyDescription: {\n    fontSize: 14,\n    color: '#666',\n    textAlign: 'center',\n    lineHeight: 20,\n  },\n});\n\nexport default ExerciseMenuScreen;","import React, { useState, useEffect, useRef } from 'react';\nimport {\n  View,\n  StyleSheet,\n  ScrollView,\n  Alert,\n  Dimensions,\n} from 'react-native';\nimport {\n  Text,\n  Card,\n  Button,\n  IconButton,\n  ProgressBar,\n  Chip,\n  Divider,\n  Surface,\n  Portal,\n  Modal,\n} from 'react-native-paper';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  endLocalSession,\n  completeExercise,\n  updateSessionInfo,\n  pauseSession,\n  resumeSession,\n  setCurrentExercise,\n} from '../store/slices/exerciseSlice';\n\nconst { width } = Dimensions.get('window');\n\nconst ExerciseSessionScreen = ({ navigation }) => {\n  const dispatch = useDispatch();\n  const { user, token } = useSelector((state) => state.auth);\n  const { \n    currentSession, \n    patientPlan, \n    currentPhase,\n    exerciseProgress \n  } = useSelector((state) => state.exercise);\n\n  const [currentExerciseIndex, setCurrentExerciseIndex] = useState(0);\n  const [currentSet, setCurrentSet] = useState(1);\n  const [currentRep, setCurrentRep] = useState(0);\n  const [isResting, setIsResting] = useState(false);\n  const [restTimeLeft, setRestTimeLeft] = useState(0);\n  const [exerciseTimeElapsed, setExerciseTimeElapsed] = useState(0);\n  const [showCompletionModal, setShowCompletionModal] = useState(false);\n  const [sessionNotes, setSessionNotes] = useState('');\n  const [painLevel, setPainLevel] = useState(0);\n  const [borgScale, setBorgScale] = useState(6);\n\n  const intervalRef = useRef(null);\n  const restIntervalRef = useRef(null);\n\n  // 使用するプランを取得（APIまたはダミーデータ）\n  const exercises = token ? patientPlan : getDummyExercisePlan(currentPhase);\n  const currentExercise = exercises[currentExerciseIndex];\n\n  // ダミーデータ（ExerciseMenuScreenと同じ）\n  const getDummyExercisePlan = (phase) => {\n    const phaseExercises = {\n      'pre_surgery': [\n        {\n          id: '1',\n          exercise_name: '大腿四頭筋セッティング',\n          description: '膝を伸ばした状態で太ももの前の筋肉を収縮',\n          category_name: '筋力維持',\n          assigned_sets: 3,\n          assigned_reps: 15,\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          rest_time_seconds: 30,\n          assigned_duration_seconds: 5,\n        },\n        {\n          id: '2',\n          exercise_name: '立ち上がり練習',\n          description: '椅子からの立ち上がり動作の練習',\n          category_name: '基本動作訓練',\n          assigned_sets: 3,\n          assigned_reps: 10,\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          rest_time_seconds: 60,\n          assigned_duration_seconds: 0,\n        },\n      ],\n      'phase_3_2': [\n        {\n          id: '5',\n          exercise_name: 'ミニスクワット',\n          description: '膝屈曲30度までの浅いスクワット',\n          category_name: '筋力強化',\n          assigned_sets: 3,\n          assigned_reps: 10,\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          rest_time_seconds: 60,\n          assigned_duration_seconds: 3,\n        },\n      ],\n    };\n    \n    return phaseExercises[phase] || phaseExercises['pre_surgery'];\n  };\n\n  useEffect(() => {\n    if (currentExercise) {\n      dispatch(setCurrentExercise(currentExercise));\n    }\n  }, [currentExercise, dispatch]);\n\n  useEffect(() => {\n    // 運動時間カウンター\n    if (!isResting && !currentSession?.isPaused) {\n      intervalRef.current = setInterval(() => {\n        setExerciseTimeElapsed(prev => prev + 1);\n      }, 1000);\n    } else {\n      clearInterval(intervalRef.current);\n    }\n\n    return () => clearInterval(intervalRef.current);\n  }, [isResting, currentSession?.isPaused]);\n\n  useEffect(() => {\n    // 休憩時間カウンター\n    if (isResting && restTimeLeft > 0) {\n      restIntervalRef.current = setInterval(() => {\n        setRestTimeLeft(prev => {\n          if (prev <= 1) {\n            setIsResting(false);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      clearInterval(restIntervalRef.current);\n    }\n\n    return () => clearInterval(restIntervalRef.current);\n  }, [isResting, restTimeLeft]);\n\n  const handleNextRep = () => {\n    if (currentRep < currentExercise.assigned_reps) {\n      setCurrentRep(prev => prev + 1);\n    } else {\n      // セット完了\n      handleSetComplete();\n    }\n  };\n\n  const handleSetComplete = () => {\n    if (currentSet < currentExercise.assigned_sets) {\n      // 次のセットへ\n      setCurrentSet(prev => prev + 1);\n      setCurrentRep(0);\n      \n      // 休憩開始\n      const restTime = currentExercise.rest_time_seconds || 30;\n      setRestTimeLeft(restTime);\n      setIsResting(true);\n    } else {\n      // 運動完了\n      handleExerciseComplete();\n    }\n  };\n\n  const handleExerciseComplete = () => {\n    const exerciseData = {\n      exerciseId: currentExercise.id,\n      sets_completed: currentExercise.assigned_sets,\n      reps_completed: currentExercise.assigned_reps * currentExercise.assigned_sets,\n      duration_seconds: exerciseTimeElapsed,\n      pain_level: painLevel,\n      borg_scale: borgScale,\n      notes: sessionNotes,\n    };\n\n    dispatch(completeExercise({\n      exerciseId: currentExercise.id,\n      sessionData: exerciseData,\n    }));\n\n    // 次の運動へ\n    if (currentExerciseIndex < exercises.length - 1) {\n      setCurrentExerciseIndex(prev => prev + 1);\n      setCurrentSet(1);\n      setCurrentRep(0);\n      setExerciseTimeElapsed(0);\n      setPainLevel(0);\n      setBorgScale(6);\n    } else {\n      // 全運動完了\n      setShowCompletionModal(true);\n    }\n  };\n\n  const handleSessionComplete = () => {\n    dispatch(updateSessionInfo({\n      painLevel,\n      borgScale,\n      notes: sessionNotes,\n    }));\n    dispatch(endLocalSession());\n    \n    Alert.alert(\n      'セッション完了',\n      'お疲れ様でした！トレーニングが完了しました。',\n      [\n        { text: 'OK', onPress: () => navigation.navigate('Home') }\n      ]\n    );\n  };\n\n  const handlePauseResume = () => {\n    if (currentSession?.isPaused) {\n      dispatch(resumeSession());\n    } else {\n      dispatch(pauseSession());\n    }\n  };\n\n  const handleSkipRest = () => {\n    setIsResting(false);\n    setRestTimeLeft(0);\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const getProgressPercentage = () => {\n    const totalExercises = exercises.length;\n    const completedExercises = currentExerciseIndex;\n    const currentExerciseProgress = currentSet / currentExercise?.assigned_sets || 0;\n    return ((completedExercises + currentExerciseProgress) / totalExercises) * 100;\n  };\n\n  if (!currentSession || !currentExercise) {\n    return (\n      <View style={styles.errorContainer}>\n        <Text style={styles.errorText}>セッションが見つかりません</Text>\n        <Button mode=\"contained\" onPress={() => navigation.goBack()}>\n          戻る\n        </Button>\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView style={styles.container}>\n      {/* セッション進捗 */}\n      <Card style={styles.progressCard}>\n        <Card.Content>\n          <Text style={styles.progressTitle}>セッション進捗</Text>\n          <ProgressBar \n            progress={getProgressPercentage() / 100} \n            color=\"#4CAF50\"\n            style={styles.progressBar}\n          />\n          <Text style={styles.progressText}>\n            {currentExerciseIndex + 1} / {exercises.length} 運動完了\n          </Text>\n        </Card.Content>\n      </Card>\n\n      {/* 現在の運動情報 */}\n      <Card style={styles.exerciseCard}>\n        <Card.Content>\n          <View style={styles.exerciseHeader}>\n            <Text style={styles.exerciseName}>{currentExercise.exercise_name}</Text>\n            {currentExercise.requires_ai_analysis && (\n              <Chip \n                icon=\"camera\" \n                mode=\"outlined\" \n                compact\n                onPress={() => navigation.navigate('AIAnalysis', {\n                  exerciseType: currentExercise.exercise_name.includes('スクワット') ? 'squat' : 'general',\n                  exerciseName: currentExercise.exercise_name\n                })}\n              >\n                AI分析\n              </Chip>\n            )}\n          </View>\n          <Text style={styles.exerciseDescription}>\n            {currentExercise.description}\n          </Text>\n          <Text style={styles.exerciseCategory}>\n            カテゴリー: {currentExercise.category_name}\n          </Text>\n        </Card.Content>\n      </Card>\n\n      {/* 休憩中の表示 */}\n      {isResting && (\n        <Surface style={styles.restSurface}>\n          <Text style={styles.restTitle}>休憩中</Text>\n          <Text style={styles.restTime}>{formatTime(restTimeLeft)}</Text>\n          <Button mode=\"outlined\" onPress={handleSkipRest}>\n            休憩をスキップ\n          </Button>\n        </Surface>\n      )}\n\n      {/* セット・レップ情報 */}\n      {!isResting && (\n        <Card style={styles.setCard}>\n          <Card.Content>\n            <View style={styles.setHeader}>\n              <Text style={styles.setTitle}>\n                セット {currentSet} / {currentExercise.assigned_sets}\n              </Text>\n              <Text style={styles.repTitle}>\n                {currentRep} / {currentExercise.assigned_reps} 回\n              </Text>\n            </View>\n            \n            <View style={styles.setProgress}>\n              <ProgressBar \n                progress={currentRep / currentExercise.assigned_reps} \n                color=\"#2196F3\"\n                style={styles.setProgressBar}\n              />\n            </View>\n\n            <View style={styles.timerContainer}>\n              <Text style={styles.timerLabel}>運動時間</Text>\n              <Text style={styles.timerValue}>{formatTime(exerciseTimeElapsed)}</Text>\n            </View>\n\n            <View style={styles.controlButtons}>\n              <Button\n                mode=\"contained\"\n                onPress={handleNextRep}\n                style={styles.nextButton}\n                disabled={currentSession?.isPaused}\n              >\n                {currentRep < currentExercise.assigned_reps ? '次の回数' : 'セット完了'}\n              </Button>\n            </View>\n          </Card.Content>\n        </Card>\n      )}\n\n      {/* コントロールボタン */}\n      <Card style={styles.controlCard}>\n        <Card.Content>\n          <View style={styles.controlRow}>\n            <Button\n              mode={currentSession?.isPaused ? \"contained\" : \"outlined\"}\n              onPress={handlePauseResume}\n              style={styles.controlButton}\n            >\n              {currentSession?.isPaused ? '再開' : '一時停止'}\n            </Button>\n            \n            <Button\n              mode=\"outlined\"\n              onPress={() => setShowCompletionModal(true)}\n              style={styles.controlButton}\n            >\n              セッション終了\n            </Button>\n          </View>\n        </Card.Content>\n      </Card>\n\n      {/* 完了モーダル */}\n      <Portal>\n        <Modal \n          visible={showCompletionModal} \n          onDismiss={() => setShowCompletionModal(false)}\n          contentContainerStyle={styles.modalContainer}\n        >\n          <Text style={styles.modalTitle}>セッション完了</Text>\n          <Text style={styles.modalText}>\n            お疲れ様でした！今日のトレーニングはどうでしたか？\n          </Text>\n          \n          <Divider style={styles.modalDivider} />\n          \n          <Text style={styles.ratingLabel}>痛みレベル (0-10)</Text>\n          <View style={styles.ratingButtons}>\n            {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(level => (\n              <Button\n                key={level}\n                mode={painLevel === level ? \"contained\" : \"outlined\"}\n                onPress={() => setPainLevel(level)}\n                style={styles.ratingButton}\n                compact\n              >\n                {level}\n              </Button>\n            ))}\n          </View>\n\n          <Text style={styles.ratingLabel}>疲労度 (6-20)</Text>\n          <View style={styles.ratingButtons}>\n            {[6, 8, 10, 12, 14, 16, 18, 20].map(scale => (\n              <Button\n                key={scale}\n                mode={borgScale === scale ? \"contained\" : \"outlined\"}\n                onPress={() => setBorgScale(scale)}\n                style={styles.ratingButton}\n                compact\n              >\n                {scale}\n              </Button>\n            ))}\n          </View>\n\n          <View style={styles.modalButtons}>\n            <Button\n              mode=\"outlined\"\n              onPress={() => setShowCompletionModal(false)}\n              style={styles.modalButton}\n            >\n              キャンセル\n            </Button>\n            <Button\n              mode=\"contained\"\n              onPress={handleSessionComplete}\n              style={styles.modalButton}\n            >\n              完了\n            </Button>\n          </View>\n        </Modal>\n      </Portal>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  errorText: {\n    fontSize: 18,\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  progressCard: {\n    margin: 16,\n    elevation: 2,\n  },\n  progressTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 12,\n  },\n  progressBar: {\n    height: 8,\n    borderRadius: 4,\n    marginBottom: 8,\n  },\n  progressText: {\n    fontSize: 14,\n    textAlign: 'center',\n    color: '#666',\n  },\n  exerciseCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n  },\n  exerciseHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  exerciseName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    flex: 1,\n  },\n  exerciseDescription: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 4,\n  },\n  exerciseCategory: {\n    fontSize: 12,\n    color: '#888',\n  },\n  restSurface: {\n    margin: 16,\n    padding: 24,\n    borderRadius: 12,\n    alignItems: 'center',\n    backgroundColor: '#E3F2FD',\n    elevation: 1,\n  },\n  restTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#1976D2',\n    marginBottom: 8,\n  },\n  restTime: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    color: '#1976D2',\n    marginBottom: 16,\n  },\n  setCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n  },\n  setHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  setTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  repTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#2196F3',\n  },\n  setProgress: {\n    marginBottom: 16,\n  },\n  setProgressBar: {\n    height: 6,\n    borderRadius: 3,\n  },\n  timerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  timerLabel: {\n    fontSize: 14,\n    color: '#666',\n  },\n  timerValue: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  controlButtons: {\n    alignItems: 'center',\n  },\n  nextButton: {\n    width: '100%',\n    paddingVertical: 8,\n  },\n  controlCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n  },\n  controlRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  controlButton: {\n    flex: 1,\n    marginHorizontal: 4,\n  },\n  modalContainer: {\n    backgroundColor: 'white',\n    margin: 20,\n    padding: 20,\n    borderRadius: 12,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 16,\n  },\n  modalText: {\n    fontSize: 14,\n    textAlign: 'center',\n    color: '#666',\n    marginBottom: 20,\n  },\n  modalDivider: {\n    marginBottom: 20,\n  },\n  ratingLabel: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  ratingButtons: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginBottom: 16,\n  },\n  ratingButton: {\n    marginRight: 4,\n    marginBottom: 4,\n    minWidth: 40,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 20,\n  },\n  modalButton: {\n    flex: 1,\n    marginHorizontal: 8,\n  },\n});\n\nexport default ExerciseSessionScreen;","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  StyleSheet,\n  Animated,\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport {\n  Text,\n  Card,\n  ProgressBar,\n  Chip,\n  List,\n  Icon,\n} from 'react-native-paper';\n\nconst AIAnalysisDisplay = ({ \n  analysisResult, \n  isAnalyzing = false, \n  style \n}) => {\n  const [scoreAnimation] = useState(new Animated.Value(0));\n  const [fadeAnimation] = useState(new Animated.Value(0));\n\n  useEffect(() => {\n    if (analysisResult) {\n      // スコアアニメーション\n      Animated.timing(scoreAnimation, {\n        toValue: analysisResult.overallScore / 100,\n        duration: 1000,\n        useNativeDriver: false,\n      }).start();\n\n      // フェードインアニメーション\n      Animated.timing(fadeAnimation, {\n        toValue: 1,\n        duration: 500,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [analysisResult]);\n\n  if (!analysisResult && !isAnalyzing) {\n    return null;\n  }\n\n  if (isAnalyzing) {\n    return (\n      <Card style={[styles.container, style]}>\n        <Card.Content style={styles.analyzingContent}>\n          <View style={styles.analyzingHeader}>\n            <Icon source=\"camera\" size={24} color=\"#2196F3\" />\n            <Text style={styles.analyzingText}>AI分析中...</Text>\n          </View>\n          <ProgressBar \n            indeterminate \n            color=\"#2196F3\" \n            style={styles.loadingBar} \n          />\n        </Card.Content>\n      </Card>\n    );\n  }\n\n  const getFeedbackColor = (level) => {\n    switch (level) {\n      case 'good': return '#4CAF50';\n      case 'moderate': return '#FF9800';\n      case 'poor': return '#F44336';\n      default: return '#757575';\n    }\n  };\n\n  const getFeedbackIcon = (level) => {\n    switch (level) {\n      case 'good': return 'check-circle';\n      case 'moderate': return 'alert-circle';\n      case 'poor': return 'alert';\n      default: return 'information';\n    }\n  };\n\n  const getScoreColor = (score) => {\n    if (score >= 80) return '#4CAF50';\n    if (score >= 60) return '#FF9800';\n    return '#F44336';\n  };\n\n  return (\n    <Animated.View style={[{ opacity: fadeAnimation }, style]}>\n      <Card style={styles.container}>\n        <Card.Content>\n          {/* AI分析ヘッダー */}\n          <View style={styles.header}>\n            <View style={styles.headerLeft}>\n              <Icon source=\"robot\" size={20} color=\"#2196F3\" />\n              <Text style={styles.headerTitle}>AI動作分析</Text>\n            </View>\n            <Chip\n              mode=\"outlined\"\n              style={[styles.feedbackChip, { borderColor: getFeedbackColor(analysisResult.feedback.level) }]}\n              textStyle={{ color: getFeedbackColor(analysisResult.feedback.level) }}\n              icon={getFeedbackIcon(analysisResult.feedback.level)}\n            >\n              {analysisResult.feedback.level === 'good' ? '良好' : \n               analysisResult.feedback.level === 'moderate' ? '注意' : '要改善'}\n            </Chip>\n          </View>\n\n          {/* 総合スコア */}\n          <View style={styles.scoreSection}>\n            <Text style={styles.scoreLabel}>総合スコア</Text>\n            <View style={styles.scoreContainer}>\n              <Animated.View style={styles.scoreCircle}>\n                <Text style={[styles.scoreText, { color: getScoreColor(analysisResult.overallScore) }]}>\n                  {analysisResult.overallScore}\n                </Text>\n                <Text style={styles.scoreUnit}>点</Text>\n              </Animated.View>\n              <View style={styles.scoreDetails}>\n                <View style={styles.scoreItem}>\n                  <Text style={styles.scoreItemLabel}>Knee-in問題</Text>\n                  <Text style={[styles.scoreItemValue, { color: getScoreColor(100 - analysisResult.kneeInToeOutScore) }]}>\n                    {analysisResult.kneeInToeOutScore}%\n                  </Text>\n                </View>\n                <Animated.View style={styles.progressContainer}>\n                  <ProgressBar\n                    progress={scoreAnimation}\n                    color={getScoreColor(analysisResult.overallScore)}\n                    style={styles.scoreProgress}\n                  />\n                </Animated.View>\n              </View>\n            </View>\n          </View>\n\n          {/* 膝の位置関係分析 */}\n          <View style={styles.alignmentSection}>\n            <Text style={styles.sectionTitle}>膝の位置関係</Text>\n            <View style={styles.alignmentGrid}>\n              <View style={styles.alignmentItem}>\n                <Text style={styles.alignmentLabel}>左膝</Text>\n                <Chip\n                  mode=\"outlined\"\n                  compact\n                  style={[styles.alignmentChip, { borderColor: getAlignmentColor(analysisResult.alignment.leftKneeAlignment) }]}\n                  textStyle={{ color: getAlignmentColor(analysisResult.alignment.leftKneeAlignment) }}\n                >\n                  {getAlignmentText(analysisResult.alignment.leftKneeAlignment)}\n                </Chip>\n              </View>\n              <View style={styles.alignmentItem}>\n                <Text style={styles.alignmentLabel}>右膝</Text>\n                <Chip\n                  mode=\"outlined\"\n                  compact\n                  style={[styles.alignmentChip, { borderColor: getAlignmentColor(analysisResult.alignment.rightKneeAlignment) }]}\n                  textStyle={{ color: getAlignmentColor(analysisResult.alignment.rightKneeAlignment) }}\n                >\n                  {getAlignmentText(analysisResult.alignment.rightKneeAlignment)}\n                </Chip>\n              </View>\n            </View>\n            <View style={styles.ratioContainer}>\n              <Text style={styles.ratioLabel}>\n                膝幅/足首幅比率: {analysisResult.alignment.kneeAnkleRatio}\n              </Text>\n              <Text style={styles.ratioNote}>\n                (理想値: 0.8-1.2)\n              </Text>\n            </View>\n          </View>\n\n          {/* フィードバックメッセージ */}\n          <View style={styles.feedbackSection}>\n            <Text style={styles.feedbackMessage}>\n              {analysisResult.feedback.message}\n            </Text>\n          </View>\n\n          {/* 改善提案 */}\n          {analysisResult.feedback.suggestions.length > 0 && (\n            <View style={styles.suggestionsSection}>\n              <Text style={styles.sectionTitle}>改善提案</Text>\n              {analysisResult.feedback.suggestions.map((suggestion, index) => (\n                <List.Item\n                  key={index}\n                  title={suggestion}\n                  left={() => <Icon source=\"lightbulb-outline\" size={20} color=\"#FF9800\" />}\n                  titleStyle={styles.suggestionText}\n                  style={styles.suggestionItem}\n                />\n              ))}\n            </View>\n          )}\n\n          {/* タイムスタンプ */}\n          <Text style={styles.timestamp}>\n            分析時刻: {new Date(analysisResult.timestamp).toLocaleTimeString('ja-JP')}\n          </Text>\n        </Card.Content>\n      </Card>\n    </Animated.View>\n  );\n};\n\n// ヘルパー関数\nconst getAlignmentColor = (alignment) => {\n  switch (alignment) {\n    case 'good': return '#4CAF50';\n    case 'moderate': return '#FF9800';\n    case 'poor': return '#F44336';\n    default: return '#757575';\n  }\n};\n\nconst getAlignmentText = (alignment) => {\n  switch (alignment) {\n    case 'good': return '良好';\n    case 'moderate': return '注意';\n    case 'poor': return '要改善';\n    default: return '不明';\n  }\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    margin: 8,\n    elevation: 4,\n    backgroundColor: '#fff',\n  },\n  analyzingContent: {\n    paddingVertical: 20,\n  },\n  analyzingHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 16,\n  },\n  analyzingText: {\n    marginLeft: 8,\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#2196F3',\n  },\n  loadingBar: {\n    height: 4,\n    borderRadius: 2,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  headerLeft: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  headerTitle: {\n    marginLeft: 8,\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  feedbackChip: {\n    borderWidth: 1,\n  },\n  scoreSection: {\n    marginBottom: 20,\n  },\n  scoreLabel: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#666',\n    marginBottom: 12,\n    textAlign: 'center',\n  },\n  scoreContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  scoreCircle: {\n    width: 80,\n    height: 80,\n    borderRadius: 40,\n    backgroundColor: '#f5f5f5',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 20,\n  },\n  scoreText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  scoreUnit: {\n    fontSize: 12,\n    color: '#666',\n  },\n  scoreDetails: {\n    flex: 1,\n  },\n  scoreItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 8,\n  },\n  scoreItemLabel: {\n    fontSize: 12,\n    color: '#666',\n  },\n  scoreItemValue: {\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  progressContainer: {\n    marginTop: 8,\n  },\n  scoreProgress: {\n    height: 6,\n    borderRadius: 3,\n  },\n  alignmentSection: {\n    marginBottom: 20,\n  },\n  sectionTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 12,\n  },\n  alignmentGrid: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 12,\n  },\n  alignmentItem: {\n    alignItems: 'center',\n  },\n  alignmentLabel: {\n    fontSize: 12,\n    color: '#666',\n    marginBottom: 4,\n  },\n  alignmentChip: {\n    borderWidth: 1,\n  },\n  ratioContainer: {\n    alignItems: 'center',\n    padding: 8,\n    backgroundColor: '#f9f9f9',\n    borderRadius: 8,\n  },\n  ratioLabel: {\n    fontSize: 12,\n    color: '#333',\n  },\n  ratioNote: {\n    fontSize: 10,\n    color: '#666',\n    marginTop: 2,\n  },\n  feedbackSection: {\n    marginBottom: 16,\n    padding: 12,\n    backgroundColor: '#f0f8ff',\n    borderRadius: 8,\n    borderLeftWidth: 4,\n    borderLeftColor: '#2196F3',\n  },\n  feedbackMessage: {\n    fontSize: 14,\n    color: '#333',\n    lineHeight: 20,\n  },\n  suggestionsSection: {\n    marginBottom: 16,\n  },\n  suggestionItem: {\n    paddingVertical: 4,\n    paddingHorizontal: 0,\n  },\n  suggestionText: {\n    fontSize: 12,\n    color: '#333',\n    lineHeight: 18,\n  },\n  timestamp: {\n    fontSize: 10,\n    color: '#999',\n    textAlign: 'right',\n    marginTop: 8,\n  },\n});\n\nAIAnalysisDisplay.propTypes = {\n  analysisData: PropTypes.shape({\n    overall_score: PropTypes.number,\n    knee_stability_score: PropTypes.number,\n    movement_quality_score: PropTypes.number,\n    symmetry_score: PropTypes.number,\n    balance_score: PropTypes.number,\n    issues: PropTypes.arrayOf(PropTypes.shape({\n      issue: PropTypes.string.isRequired,\n      severity: PropTypes.oneOf(['low', 'medium', 'high']).isRequired,\n      recommendation: PropTypes.string.isRequired,\n    })),\n    recommendations: PropTypes.arrayOf(PropTypes.string),\n  }),\n  isLoading: PropTypes.bool,\n  onRetry: PropTypes.func,\n};\n\nAIAnalysisDisplay.defaultProps = {\n  analysisData: null,\n  isLoading: false,\n  onRetry: null,\n};\n\nexport default AIAnalysisDisplay;","import React, { useState, useEffect, useRef } from 'react';\nimport {\n  View,\n  StyleSheet,\n  ScrollView,\n  Alert,\n  Dimensions,\n} from 'react-native';\nimport {\n  Text,\n  Card,\n  Button,\n  ActivityIndicator,\n  Chip,\n  Divider,\n  IconButton,\n} from 'react-native-paper';\n// import { Camera } from 'expo-camera';\n// import * as MediaLibrary from 'expo-media-library';\nimport AIAnalysisDisplay from '../components/AIAnalysisDisplay';\n// import aiAnalysisService from '../services/aiAnalysis';\n\nconst { width: screenWidth, height: screenHeight } = Dimensions.get('window');\n\nconst AIAnalysisScreen = ({ navigation, route }) => {\n  const [hasPermission, setHasPermission] = useState(null);\n  const [cameraType, setCameraType] = useState(Camera.Constants.Type.front);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [currentAnalysis, setCurrentAnalysis] = useState(null);\n  const [sessionSummary, setSessionSummary] = useState(null);\n  const [analysisHistory, setAnalysisHistory] = useState([]);\n  const [isInitialized, setIsInitialized] = useState(false);\n  \n  const cameraRef = useRef(null);\n  const analysisIntervalRef = useRef(null);\n  \n  const exerciseType = route.params?.exerciseType || 'squat';\n  const exerciseName = route.params?.exerciseName || 'AI動作分析';\n\n  useEffect(() => {\n    (async () => {\n      // カメラ権限の取得\n      const cameraStatus = await Camera.requestCameraPermissionsAsync();\n      const mediaLibraryStatus = await MediaLibrary.requestPermissionsAsync();\n      \n      setHasPermission(\n        cameraStatus.status === 'granted' && mediaLibraryStatus.status === 'granted'\n      );\n\n      // AI分析サービス初期化\n      try {\n        const initialized = await aiAnalysisService.initializeModel();\n        setIsInitialized(initialized);\n      } catch (error) {\n        console.error('AI分析サービス初期化エラー:', error);\n        setIsInitialized(false);\n      }\n    })();\n\n    return () => {\n      // クリーンアップ\n      if (analysisIntervalRef.current) {\n        clearInterval(analysisIntervalRef.current);\n      }\n    };\n  }, []);\n\n  const startAnalysis = async () => {\n    if (!cameraRef.current || !isInitialized) {\n      Alert.alert('エラー', 'カメラまたはAI分析の準備ができていません。');\n      return;\n    }\n\n    setIsRecording(true);\n    setIsAnalyzing(true);\n    aiAnalysisService.resetAnalysis();\n    setAnalysisHistory([]);\n    setCurrentAnalysis(null);\n\n    // 定期的な分析実行（実際の実装では pose estimation ライブラリと連携）\n    analysisIntervalRef.current = setInterval(async () => {\n      try {\n        // ダミーのキーポイントデータ（実際の実装では pose estimation から取得）\n        const dummyKeypoints = generateDummyKeypoints();\n        \n        const result = await aiAnalysisService.analyzeFrame(dummyKeypoints, exerciseType);\n        \n        setCurrentAnalysis(result);\n        setAnalysisHistory(prev => [...prev, result].slice(-10)); // 最新10件を保持\n        \n      } catch (error) {\n        console.error('フレーム分析エラー:', error);\n      }\n    }, 2000); // 2秒間隔で分析\n  };\n\n  const stopAnalysis = () => {\n    setIsRecording(false);\n    setIsAnalyzing(false);\n    \n    if (analysisIntervalRef.current) {\n      clearInterval(analysisIntervalRef.current);\n      analysisIntervalRef.current = null;\n    }\n\n    // セッションサマリー生成\n    const summary = aiAnalysisService.getSessionSummary();\n    setSessionSummary(summary);\n\n    Alert.alert(\n      'AI分析完了',\n      `分析フレーム数: ${summary.totalFrames}\\n平均スコア: ${summary.averageScore}点\\n問題検出: ${summary.issueCount}回`,\n      [\n        { text: '確認', onPress: () => {} }\n      ]\n    );\n  };\n\n  const toggleCameraType = () => {\n    setCameraType(\n      cameraType === Camera.Constants.Type.back\n        ? Camera.Constants.Type.front\n        : Camera.Constants.Type.back\n    );\n  };\n\n  const retryAnalysis = () => {\n    setCurrentAnalysis(null);\n    setSessionSummary(null);\n    setAnalysisHistory([]);\n    aiAnalysisService.resetAnalysis();\n  };\n\n  // ダミーキーポイント生成（実際の実装では pose estimation ライブラリから取得）\n  const generateDummyKeypoints = () => {\n    const keypoints = [];\n    \n    // 主要な関節点をダミーで生成\n    const baseX = screenWidth / 2;\n    const baseY = screenHeight / 2;\n    \n    for (let i = 0; i < 17; i++) {\n      keypoints.push({\n        x: baseX + (Math.random() - 0.5) * 100,\n        y: baseY + (Math.random() - 0.5) * 200,\n        score: 0.8 + Math.random() * 0.2\n      });\n    }\n    \n    return keypoints;\n  };\n\n  if (hasPermission === null) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" />\n        <Text style={styles.loadingText}>カメラの準備中...</Text>\n      </View>\n    );\n  }\n\n  if (hasPermission === false) {\n    return (\n      <View style={styles.errorContainer}>\n        <Text style={styles.errorText}>カメラへのアクセスが必要です</Text>\n        <Button mode=\"contained\" onPress={() => navigation.goBack()}>\n          戻る\n        </Button>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      {/* カメラビュー */}\n      <View style={styles.cameraContainer}>\n        <Camera\n          ref={cameraRef}\n          style={styles.camera}\n          type={cameraType}\n          ratio=\"16:9\"\n        >\n          {/* カメラオーバーレイ */}\n          <View style={styles.cameraOverlay}>\n            {/* ヘッダー */}\n            <View style={styles.cameraHeader}>\n              <View style={styles.exerciseInfo}>\n                <Chip\n                  mode=\"outlined\"\n                  style={styles.exerciseChip}\n                  textStyle={styles.exerciseChipText}\n                >\n                  {exerciseName}\n                </Chip>\n              </View>\n              <IconButton\n                icon=\"camera-flip\"\n                size={24}\n                iconColor=\"#fff\"\n                onPress={toggleCameraType}\n                style={styles.flipButton}\n              />\n            </View>\n\n            {/* 録画状態インジケーター */}\n            {isRecording && (\n              <View style={styles.recordingIndicator}>\n                <View style={styles.recordingDot} />\n                <Text style={styles.recordingText}>AI分析中</Text>\n              </View>\n            )}\n\n            {/* コントロールボタン */}\n            <View style={styles.cameraControls}>\n              {!isRecording ? (\n                <Button\n                  mode=\"contained\"\n                  onPress={startAnalysis}\n                  style={styles.startButton}\n                  disabled={!isInitialized}\n                >\n                  分析開始\n                </Button>\n              ) : (\n                <Button\n                  mode=\"contained\"\n                  onPress={stopAnalysis}\n                  style={styles.stopButton}\n                  buttonColor=\"#F44336\"\n                >\n                  分析停止\n                </Button>\n              )}\n            </View>\n          </View>\n        </Camera>\n      </View>\n\n      {/* 分析結果表示エリア */}\n      <ScrollView style={styles.analysisContainer}>\n        {/* 現在の分析結果 */}\n        {(currentAnalysis || isAnalyzing) && (\n          <AIAnalysisDisplay\n            analysisResult={currentAnalysis}\n            isAnalyzing={isAnalyzing && !currentAnalysis}\n            style={styles.currentAnalysis}\n          />\n        )}\n\n        {/* セッションサマリー */}\n        {sessionSummary && (\n          <Card style={styles.summaryCard}>\n            <Card.Content>\n              <Text style={styles.summaryTitle}>セッション分析結果</Text>\n              \n              <View style={styles.summaryStats}>\n                <View style={styles.statItem}>\n                  <Text style={styles.statValue}>{sessionSummary.totalFrames}</Text>\n                  <Text style={styles.statLabel}>分析フレーム</Text>\n                </View>\n                <View style={styles.statItem}>\n                  <Text style={[styles.statValue, { color: getScoreColor(sessionSummary.averageScore) }]}>\n                    {sessionSummary.averageScore}\n                  </Text>\n                  <Text style={styles.statLabel}>平均スコア</Text>\n                </View>\n                <View style={styles.statItem}>\n                  <Text style={[styles.statValue, { color: sessionSummary.issueCount > 0 ? '#F44336' : '#4CAF50' }]}>\n                    {sessionSummary.issueCount}\n                  </Text>\n                  <Text style={styles.statLabel}>問題検出</Text>\n                </View>\n              </View>\n\n              {sessionSummary.improvements.length > 0 && (\n                <View style={styles.improvementsSection}>\n                  <Text style={styles.improvementsTitle}>改善提案</Text>\n                  {sessionSummary.improvements.map((improvement, index) => (\n                    <Text key={index} style={styles.improvementText}>\n                      • {improvement}\n                    </Text>\n                  ))}\n                </View>\n              )}\n\n              <View style={styles.summaryActions}>\n                <Button\n                  mode=\"outlined\"\n                  onPress={retryAnalysis}\n                  style={styles.retryButton}\n                >\n                  再分析\n                </Button>\n                <Button\n                  mode=\"contained\"\n                  onPress={() => navigation.goBack()}\n                  style={styles.completeButton}\n                >\n                  完了\n                </Button>\n              </View>\n            </Card.Content>\n          </Card>\n        )}\n\n        {/* 分析履歴 */}\n        {analysisHistory.length > 0 && !sessionSummary && (\n          <Card style={styles.historyCard}>\n            <Card.Content>\n              <Text style={styles.historyTitle}>分析履歴</Text>\n              <Divider style={styles.historyDivider} />\n              {analysisHistory.slice(-3).map((analysis, index) => (\n                <View key={analysis.timestamp} style={styles.historyItem}>\n                  <View style={styles.historyHeader}>\n                    <Text style={styles.historyTime}>\n                      {new Date(analysis.timestamp).toLocaleTimeString('ja-JP')}\n                    </Text>\n                    <Chip\n                      mode=\"outlined\"\n                      compact\n                      style={[styles.historyChip, { borderColor: getScoreColor(analysis.overallScore) }]}\n                      textStyle={{ color: getScoreColor(analysis.overallScore) }}\n                    >\n                      {analysis.overallScore}点\n                    </Chip>\n                  </View>\n                  <Text style={styles.historyFeedback}>\n                    {analysis.feedback.message}\n                  </Text>\n                  {index < Math.min(analysisHistory.length, 3) - 1 && (\n                    <Divider style={styles.historyItemDivider} />\n                  )}\n                </View>\n              ))}\n            </Card.Content>\n          </Card>\n        )}\n\n        {/* 初期化エラー */}\n        {!isInitialized && (\n          <Card style={styles.errorCard}>\n            <Card.Content>\n              <Text style={styles.errorTitle}>AI分析が利用できません</Text>\n              <Text style={styles.errorDescription}>\n                AI分析モデルの初期化に失敗しました。ネットワーク接続を確認してアプリを再起動してください。\n              </Text>\n              <Button\n                mode=\"outlined\"\n                onPress={() => navigation.goBack()}\n                style={styles.errorButton}\n              >\n                戻る\n              </Button>\n            </Card.Content>\n          </Card>\n        )}\n      </ScrollView>\n    </View>\n  );\n};\n\n// ヘルパー関数\nconst getScoreColor = (score) => {\n  if (score >= 80) return '#4CAF50';\n  if (score >= 60) return '#FF9800';\n  return '#F44336';\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n  },\n  loadingText: {\n    marginTop: 16,\n    fontSize: 16,\n    color: '#666',\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n    padding: 20,\n  },\n  errorText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#F44336',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  cameraContainer: {\n    flex: 0.6,\n  },\n  camera: {\n    flex: 1,\n  },\n  cameraOverlay: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    justifyContent: 'space-between',\n  },\n  cameraHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    paddingTop: 40,\n  },\n  exerciseInfo: {\n    flex: 1,\n  },\n  exerciseChip: {\n    backgroundColor: 'rgba(255,255,255,0.9)',\n    borderColor: '#2196F3',\n    borderWidth: 1,\n  },\n  exerciseChipText: {\n    color: '#2196F3',\n    fontSize: 12,\n  },\n  flipButton: {\n    backgroundColor: 'rgba(0,0,0,0.3)',\n  },\n  recordingIndicator: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(244,67,54,0.9)',\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 20,\n    alignSelf: 'center',\n  },\n  recordingDot: {\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n    backgroundColor: '#fff',\n    marginRight: 8,\n  },\n  recordingText: {\n    color: '#fff',\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n  cameraControls: {\n    alignItems: 'center',\n    paddingBottom: 40,\n  },\n  startButton: {\n    backgroundColor: '#4CAF50',\n    paddingHorizontal: 32,\n  },\n  stopButton: {\n    paddingHorizontal: 32,\n  },\n  analysisContainer: {\n    flex: 0.4,\n    backgroundColor: '#f5f5f5',\n  },\n  currentAnalysis: {\n    margin: 8,\n  },\n  summaryCard: {\n    margin: 8,\n    elevation: 4,\n  },\n  summaryTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    textAlign: 'center',\n  },\n  summaryStats: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 20,\n  },\n  statItem: {\n    alignItems: 'center',\n  },\n  statValue: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#2196F3',\n  },\n  statLabel: {\n    fontSize: 12,\n    color: '#666',\n    marginTop: 4,\n  },\n  improvementsSection: {\n    marginBottom: 20,\n    padding: 12,\n    backgroundColor: '#fff3cd',\n    borderRadius: 8,\n    borderLeftWidth: 4,\n    borderLeftColor: '#ffc107',\n  },\n  improvementsTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    color: '#856404',\n  },\n  improvementText: {\n    fontSize: 12,\n    color: '#856404',\n    lineHeight: 18,\n  },\n  summaryActions: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n  retryButton: {\n    flex: 0.4,\n  },\n  completeButton: {\n    flex: 0.4,\n  },\n  historyCard: {\n    margin: 8,\n    elevation: 2,\n  },\n  historyTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  historyDivider: {\n    marginBottom: 12,\n  },\n  historyItem: {\n    marginBottom: 12,\n  },\n  historyHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 4,\n  },\n  historyTime: {\n    fontSize: 12,\n    color: '#666',\n  },\n  historyChip: {\n    borderWidth: 1,\n  },\n  historyFeedback: {\n    fontSize: 12,\n    color: '#333',\n    lineHeight: 16,\n  },\n  historyItemDivider: {\n    marginTop: 8,\n  },\n  errorCard: {\n    margin: 8,\n    elevation: 2,\n    backgroundColor: '#ffebee',\n  },\n  errorTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#F44336',\n    marginBottom: 8,\n  },\n  errorDescription: {\n    fontSize: 14,\n    color: '#666',\n    lineHeight: 20,\n    marginBottom: 16,\n  },\n  errorButton: {\n    alignSelf: 'center',\n  },\n});\n\nexport default AIAnalysisScreen;","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  StyleSheet,\n  ScrollView,\n  Alert,\n  FlatList,\n  KeyboardAvoidingView,\n  Platform,\n} from 'react-native';\nimport {\n  Text,\n  Card,\n  Button,\n  TextInput,\n  Chip,\n  List,\n  Avatar,\n  Badge,\n  IconButton,\n  Divider,\n  Switch,\n  Portal,\n  Modal,\n  ActivityIndicator,\n} from 'react-native-paper';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  setActiveTab,\n  addMessage,\n  markMessageAsRead,\n  markAllMessagesAsRead,\n  setActiveConversation,\n  addPendingReport,\n  updateSharingPreferences,\n  updateNotificationSettings,\n  markNotificationAsRead,\n  dismissAlert,\n  setDummyData,\n} from '../store/slices/medicalCollaborationSlice';\n\nconst MedicalCollaborationScreen = ({ navigation }) => {\n  const dispatch = useDispatch();\n  const {\n    medicalStaff,\n    messages,\n    unreadCount,\n    activeConversation,\n    sharedReports,\n    appointments,\n    nextAppointment,\n    notifications,\n    alerts,\n    sharingPreferences,\n    notificationSettings,\n    activeTab,\n    isLoading,\n    error,\n  } = useSelector((state) => state.medicalCollaboration);\n\n  const [messageText, setMessageText] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(null);\n\n  useEffect(() => {\n    // デモ用のダミーデータを設定\n    dispatch(setDummyData());\n  }, [dispatch]);\n\n  const handleTabChange = (tab) => {\n    dispatch(setActiveTab(tab));\n  };\n\n  const handleSendMessage = () => {\n    if (messageText.trim()) {\n      dispatch(addMessage({\n        senderId: 'patient',\n        senderName: '患者',\n        content: messageText.trim(),\n        recipientId: activeConversation?.id || medicalStaff.primaryDoctor?.id,\n        recipientName: activeConversation?.name || medicalStaff.primaryDoctor?.name,\n        type: 'text',\n      }));\n      setMessageText('');\n      \n      // 自動返信（デモ用）\n      setTimeout(() => {\n        const responses = [\n          'メッセージを受信しました。内容を確認いたします。',\n          'ありがとうございます。経過良好ですね。',\n          '次回の診察時に詳しくお話しましょう。',\n          '何かご不明点があればお気軽にご連絡ください。',\n        ];\n        const randomResponse = responses[Math.floor(Math.random() * responses.length)];\n        \n        dispatch(addMessage({\n          senderId: activeConversation?.id || medicalStaff.primaryDoctor?.id,\n          senderName: activeConversation?.name || medicalStaff.primaryDoctor?.name,\n          senderTitle: activeConversation?.title || medicalStaff.primaryDoctor?.title,\n          content: randomResponse,\n          recipientId: 'patient',\n          type: 'text',\n          isSent: false,\n        }));\n      }, 2000);\n    }\n  };\n\n  const handleShareReport = (reportType) => {\n    const reportData = {\n      type: reportType,\n      title: getReportTitle(reportType),\n      recipients: [medicalStaff.primaryDoctor?.id, medicalStaff.physiotherapist?.id],\n    };\n    \n    dispatch(addPendingReport(reportData));\n    \n    Alert.alert(\n      'レポート送信',\n      `${reportData.title}を医療従事者に送信しました。`,\n      [{ text: 'OK' }]\n    );\n  };\n\n  const getReportTitle = (type) => {\n    switch (type) {\n      case 'weekly_progress': return '週間進捗レポート';\n      case 'acl_rsi': return 'ACL-RSI評価結果';\n      case 'ai_analysis': return 'AI動作分析結果';\n      case 'exercise_log': return '運動記録';\n      default: return 'レポート';\n    }\n  };\n\n  const formatDateTime = (dateTime) => {\n    const date = new Date(dateTime);\n    return date.toLocaleDateString('ja-JP', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'confirmed': return '#4CAF50';\n      case 'pending': return '#FF9800';\n      case 'cancelled': return '#F44336';\n      default: return '#666';\n    }\n  };\n\n  const renderMedicalTeamTab = () => {\n    return (\n      <View style={styles.tabContent}>\n        {/* 医療従事者チーム */}\n        <Card style={styles.staffCard}>\n          <Card.Content>\n            <Text style={styles.sectionTitle}>医療チーム</Text>\n            \n            {medicalStaff.primaryDoctor && (\n              <List.Item\n                title={medicalStaff.primaryDoctor.name}\n                description={`${medicalStaff.primaryDoctor.title} - ${medicalStaff.primaryDoctor.specialization}`}\n                left={() => (\n                  <View style={styles.avatarContainer}>\n                    <Avatar.Text size={48} label={medicalStaff.primaryDoctor.name.slice(0, 1)} />\n                    <View style={[styles.statusIndicator, { backgroundColor: '#4CAF50' }]} />\n                  </View>\n                )}\n                right={() => (\n                  <View style={styles.contactInfo}>\n                    <Text style={styles.hospitalName}>{medicalStaff.primaryDoctor.hospital}</Text>\n                    <Text style={styles.contactText}>{medicalStaff.primaryDoctor.phone}</Text>\n                  </View>\n                )}\n                style={styles.staffItem}\n              />\n            )}\n            \n            {medicalStaff.physiotherapist && (\n              <List.Item\n                title={medicalStaff.physiotherapist.name}\n                description={`${medicalStaff.physiotherapist.title} - ${medicalStaff.physiotherapist.specialization}`}\n                left={() => (\n                  <View style={styles.avatarContainer}>\n                    <Avatar.Text size={48} label={medicalStaff.physiotherapist.name.slice(0, 1)} />\n                    <View style={[styles.statusIndicator, { backgroundColor: '#2196F3' }]} />\n                  </View>\n                )}\n                right={() => (\n                  <View style={styles.contactInfo}>\n                    <Text style={styles.hospitalName}>{medicalStaff.physiotherapist.hospital}</Text>\n                    <Text style={styles.contactText}>{medicalStaff.physiotherapist.phone}</Text>\n                  </View>\n                )}\n                style={styles.staffItem}\n              />\n            )}\n\n            {medicalStaff.nurses.map((nurse) => (\n              <List.Item\n                key={nurse.id}\n                title={nurse.name}\n                description={`${nurse.title} - ${nurse.specialization}`}\n                left={() => (\n                  <View style={styles.avatarContainer}>\n                    <Avatar.Text size={48} label={nurse.name.slice(0, 1)} />\n                    <View style={[styles.statusIndicator, { backgroundColor: '#FF9800' }]} />\n                  </View>\n                )}\n                right={() => (\n                  <View style={styles.contactInfo}>\n                    <Text style={styles.hospitalName}>{nurse.hospital}</Text>\n                    <Text style={styles.contactText}>{nurse.email}</Text>\n                  </View>\n                )}\n                style={styles.staffItem}\n              />\n            ))}\n\n            {medicalStaff.specialists.map((specialist) => (\n              <List.Item\n                key={specialist.id}\n                title={specialist.name}\n                description={`${specialist.title} - ${specialist.specialization}`}\n                left={() => (\n                  <View style={styles.avatarContainer}>\n                    <Avatar.Text size={48} label={specialist.name.slice(0, 1)} />\n                    <View style={[styles.statusIndicator, { backgroundColor: '#9C27B0' }]} />\n                  </View>\n                )}\n                right={() => (\n                  <View style={styles.contactInfo}>\n                    <Text style={styles.hospitalName}>{specialist.hospital}</Text>\n                    <Text style={styles.contactText}>{specialist.email}</Text>\n                  </View>\n                )}\n                style={styles.staffItem}\n              />\n            ))}\n          </Card.Content>\n        </Card>\n\n        {/* 連絡先情報 */}\n        <Card style={styles.contactCard}>\n          <Card.Content>\n            <Text style={styles.sectionTitle}>緊急連絡先</Text>\n            <View style={styles.emergencyContact}>\n              <Text style={styles.emergencyTitle}>24時間対応</Text>\n              <Text style={styles.emergencyPhone}>📞 03-1234-9999</Text>\n              <Text style={styles.emergencyNote}>\n                痛みの悪化や異常を感じた場合は、すぐにご連絡ください。\n              </Text>\n            </View>\n          </Card.Content>\n        </Card>\n\n        {/* 医療チーム紹介 */}\n        <Card style={styles.teamInfoCard}>\n          <Card.Content>\n            <Text style={styles.sectionTitle}>チーム紹介</Text>\n            <Text style={styles.teamDescription}>\n              あなたのACLリハビリテーションを、多職種の医療専門家チームがサポートします。\n              各専門家が連携して、安全で効果的な復帰をお手伝いします。\n            </Text>\n            \n            <View style={styles.rolesList}>\n              <View style={styles.roleItem}>\n                <Text style={styles.roleTitle}>🏥 整形外科医</Text>\n                <Text style={styles.roleDescription}>\n                  診断・治療方針の決定、手術後の経過観察、復帰許可の判断\n                </Text>\n              </View>\n              \n              <View style={styles.roleItem}>\n                <Text style={styles.roleTitle}>🤸 理学療法士</Text>\n                <Text style={styles.roleDescription}>\n                  リハビリテーション計画の作成、運動指導、機能評価\n                </Text>\n              </View>\n              \n              <View style={styles.roleItem}>\n                <Text style={styles.roleTitle}>👩‍⚕️ 看護師</Text>\n                <Text style={styles.roleDescription}>\n                  日常的なケア、症状管理、患者教育とサポート\n                </Text>\n              </View>\n              \n              <View style={styles.roleItem}>\n                <Text style={styles.roleTitle}>🧠 心理専門家</Text>\n                <Text style={styles.roleDescription}>\n                  心理的サポート、復帰不安の軽減、メンタルヘルスケア\n                </Text>\n              </View>\n            </View>\n          </Card.Content>\n        </Card>\n      </View>\n    );\n  };\n\n  const renderReportsTab = () => {\n    return (\n      <View style={styles.tabContent}>\n        {/* 共有オプション */}\n        <Card style={styles.shareOptionsCard}>\n          <Card.Content>\n            <Text style={styles.sectionTitle}>データ共有</Text>\n            \n            <View style={styles.shareButtons}>\n              <Button\n                mode=\"outlined\"\n                onPress={() => handleShareReport('weekly_progress')}\n                style={styles.shareButton}\n                icon=\"chart-line\"\n              >\n                進捗レポート\n              </Button>\n              <Button\n                mode=\"outlined\"\n                onPress={() => handleShareReport('acl_rsi')}\n                style={styles.shareButton}\n                icon=\"psychology\"\n              >\n                ACL-RSI結果\n              </Button>\n              <Button\n                mode=\"outlined\"\n                onPress={() => handleShareReport('ai_analysis')}\n                style={styles.shareButton}\n                icon=\"camera\"\n              >\n                AI分析結果\n              </Button>\n              <Button\n                mode=\"outlined\"\n                onPress={() => handleShareReport('exercise_log')}\n                style={styles.shareButton}\n                icon=\"dumbbell\"\n              >\n                運動記録\n              </Button>\n            </View>\n          </Card.Content>\n        </Card>\n\n        {/* 共有済みレポート */}\n        <Card style={styles.reportsCard}>\n          <Card.Content>\n            <Text style={styles.sectionTitle}>共有済みレポート</Text>\n            \n            {sharedReports.map((report) => (\n              <View key={report.id} style={styles.reportItem}>\n                <View style={styles.reportHeader}>\n                  <Text style={styles.reportTitle}>{report.title}</Text>\n                  <Text style={styles.reportDate}>\n                    {formatDateTime(report.sentAt)}\n                  </Text>\n                </View>\n                <Text style={styles.reportRecipients}>\n                  送信先: {report.recipients.length}名\n                </Text>\n                <View style={styles.reportActions}>\n                  <Chip mode=\"outlined\" compact>\n                    {report.status === 'sent' ? '送信済み' : '送信中'}\n                  </Chip>\n                </View>\n              </View>\n            ))}\n          </Card.Content>\n        </Card>\n\n        {/* 自動共有設定 */}\n        <Card style={styles.autoShareCard}>\n          <Card.Content>\n            <Text style={styles.sectionTitle}>自動共有設定</Text>\n            \n            <View style={styles.settingItem}>\n              <Text style={styles.settingLabel}>進捗データの自動共有</Text>\n              <Switch\n                value={sharingPreferences.autoShareProgress}\n                onValueChange={(value) => \n                  dispatch(updateSharingPreferences({ autoShareProgress: value }))\n                }\n              />\n            </View>\n            \n            <View style={styles.settingItem}>\n              <Text style={styles.settingLabel}>ACL-RSI結果の自動共有</Text>\n              <Switch\n                value={sharingPreferences.autoShareACLRSI}\n                onValueChange={(value) => \n                  dispatch(updateSharingPreferences({ autoShareACLRSI: value }))\n                }\n              />\n            </View>\n            \n            <View style={styles.settingItem}>\n              <Text style={styles.settingLabel}>週間レポートの自動送信</Text>\n              <Switch\n                value={sharingPreferences.weeklyReportEnabled}\n                onValueChange={(value) => \n                  dispatch(updateSharingPreferences({ weeklyReportEnabled: value }))\n                }\n              />\n            </View>\n          </Card.Content>\n        </Card>\n      </View>\n    );\n  };\n\n\n  const renderSettingsTab = () => {\n    return (\n      <View style={styles.tabContent}>\n        {/* 通知設定 */}\n        <Card style={styles.settingsCard}>\n          <Card.Content>\n            <Text style={styles.sectionTitle}>通知設定</Text>\n            \n            <View style={styles.settingItem}>\n              <Text style={styles.settingLabel}>新しいメッセージの通知</Text>\n              <Switch\n                value={notificationSettings.newMessage}\n                onValueChange={(value) => \n                  dispatch(updateNotificationSettings({ newMessage: value }))\n                }\n              />\n            </View>\n            \n            <View style={styles.settingItem}>\n              <Text style={styles.settingLabel}>予約リマインダー</Text>\n              <Switch\n                value={notificationSettings.appointmentReminder}\n                onValueChange={(value) => \n                  dispatch(updateNotificationSettings({ appointmentReminder: value }))\n                }\n              />\n            </View>\n            \n            <View style={styles.settingItem}>\n              <Text style={styles.settingLabel}>レポート要請の通知</Text>\n              <Switch\n                value={notificationSettings.reportRequested}\n                onValueChange={(value) => \n                  dispatch(updateNotificationSettings({ reportRequested: value }))\n                }\n              />\n            </View>\n            \n            <View style={styles.settingItem}>\n              <Text style={styles.settingLabel}>緊急アラート</Text>\n              <Switch\n                value={notificationSettings.urgentAlert}\n                onValueChange={(value) => \n                  dispatch(updateNotificationSettings({ urgentAlert: value }))\n                }\n              />\n            </View>\n          </Card.Content>\n        </Card>\n\n        {/* プライバシー設定 */}\n        <Card style={styles.settingsCard}>\n          <Card.Content>\n            <Text style={styles.sectionTitle}>プライバシー設定</Text>\n            \n            <View style={styles.settingItem}>\n              <Text style={styles.settingLabel}>緊急連絡先機能</Text>\n              <Switch\n                value={sharingPreferences.emergencyContactEnabled}\n                onValueChange={(value) => \n                  dispatch(updateSharingPreferences({ emergencyContactEnabled: value }))\n                }\n              />\n            </View>\n            \n            <List.Item\n              title=\"データ使用ポリシー\"\n              description=\"医療データの使用に関するポリシーを確認\"\n              left={() => <List.Icon icon=\"shield-account\" />}\n              right={() => <List.Icon icon=\"chevron-right\" />}\n              onPress={() => Alert.alert('ポリシー', 'データ使用ポリシーの詳細画面は開発中です')}\n              style={styles.settingListItem}\n            />\n            \n            <List.Item\n              title=\"データエクスポート\"\n              description=\"自分の医療データをエクスポート\"\n              left={() => <List.Icon icon=\"download\" />}\n              right={() => <List.Icon icon=\"chevron-right\" />}\n              onPress={() => Alert.alert('エクスポート', 'データエクスポート機能は開発中です')}\n              style={styles.settingListItem}\n            />\n          </Card.Content>\n        </Card>\n\n        {/* データ共有履歴 */}\n        <Card style={styles.settingsCard}>\n          <Card.Content>\n            <Text style={styles.sectionTitle}>データ共有履歴</Text>\n            \n            <List.Item\n              title=\"共有済みレポートを確認\"\n              description=\"これまでに送信したレポートの一覧\"\n              left={() => <List.Icon icon=\"file-document-multiple\" />}\n              right={() => <List.Icon icon=\"chevron-right\" />}\n              onPress={() => handleTabChange('reports')}\n              style={styles.settingListItem}\n            />\n            \n            <List.Item\n              title=\"データエクスポート\"\n              description=\"自分の医療データをエクスポート\"\n              left={() => <List.Icon icon=\"download\" />}\n              right={() => <List.Icon icon=\"chevron-right\" />}\n              onPress={() => Alert.alert('エクスポート', 'データエクスポート機能は開発中です')}\n              style={styles.settingListItem}\n            />\n          </Card.Content>\n        </Card>\n      </View>\n    );\n  };\n\n  const renderTabContent = () => {\n    switch (activeTab) {\n      case 'team':\n        return renderMedicalTeamTab();\n      case 'reports':\n        return renderReportsTab();\n      case 'settings':\n        return renderSettingsTab();\n      default:\n        return renderMedicalTeamTab();\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" />\n        <Text style={styles.loadingText}>データを読み込み中...</Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      {/* アラート表示 */}\n      {alerts.filter(alert => alert.isActive).map((alert) => (\n        <Card key={alert.id} style={[styles.alertCard, { backgroundColor: '#ffebee' }]}>\n          <Card.Content>\n            <View style={styles.alertContent}>\n              <Text style={styles.alertText}>{alert.message}</Text>\n              <IconButton\n                icon=\"close\"\n                size={20}\n                onPress={() => dispatch(dismissAlert(alert.id))}\n              />\n            </View>\n          </Card.Content>\n        </Card>\n      ))}\n\n      {/* タブナビゲーション */}\n      <View style={styles.tabNavigation}>\n        <View style={styles.tabButtons}>\n          <Button\n            mode={activeTab === 'team' ? 'contained' : 'outlined'}\n            onPress={() => handleTabChange('team')}\n            style={styles.tabButton}\n            compact\n          >\n            医療チーム\n          </Button>\n          <Button\n            mode={activeTab === 'reports' ? 'contained' : 'outlined'}\n            onPress={() => handleTabChange('reports')}\n            style={styles.tabButton}\n            compact\n          >\n            レポート共有\n          </Button>\n          <Button\n            mode={activeTab === 'settings' ? 'contained' : 'outlined'}\n            onPress={() => handleTabChange('settings')}\n            style={styles.tabButton}\n            compact\n          >\n            設定\n          </Button>\n        </View>\n      </View>\n\n      {/* タブコンテンツ */}\n      <ScrollView style={styles.content}>\n        {renderTabContent()}\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n  },\n  loadingText: {\n    marginTop: 16,\n    fontSize: 16,\n    color: '#666',\n  },\n  alertCard: {\n    margin: 8,\n    elevation: 4,\n  },\n  alertContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  alertText: {\n    flex: 1,\n    fontSize: 14,\n    color: '#d32f2f',\n  },\n  tabNavigation: {\n    backgroundColor: '#fff',\n    paddingVertical: 8,\n    elevation: 2,\n  },\n  tabButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    paddingHorizontal: 8,\n  },\n  tabButton: {\n    flex: 1,\n    marginHorizontal: 2,\n  },\n  tabBadge: {\n    position: 'absolute',\n    top: -8,\n    right: -8,\n  },\n  content: {\n    flex: 1,\n  },\n  tabContent: {\n    padding: 16,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 16,\n  },\n  // 医療チームタブ\n  staffCard: {\n    marginBottom: 16,\n    elevation: 2,\n  },\n  staffItem: {\n    paddingVertical: 8,\n  },\n  avatarContainer: {\n    position: 'relative',\n  },\n  statusIndicator: {\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    width: 12,\n    height: 12,\n    borderRadius: 6,\n    borderWidth: 2,\n    borderColor: '#fff',\n  },\n  contactInfo: {\n    alignItems: 'flex-end',\n  },\n  hospitalName: {\n    fontSize: 12,\n    color: '#666',\n    marginBottom: 2,\n  },\n  contactText: {\n    fontSize: 12,\n    color: '#2196F3',\n    fontWeight: 'bold',\n  },\n  contactCard: {\n    marginBottom: 16,\n    elevation: 2,\n    backgroundColor: '#fff3cd',\n  },\n  emergencyContact: {\n    alignItems: 'center',\n    paddingVertical: 8,\n  },\n  emergencyTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#856404',\n    marginBottom: 4,\n  },\n  emergencyPhone: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#d32f2f',\n    marginBottom: 8,\n  },\n  emergencyNote: {\n    fontSize: 12,\n    color: '#856404',\n    textAlign: 'center',\n    lineHeight: 16,\n  },\n  teamInfoCard: {\n    elevation: 2,\n  },\n  teamDescription: {\n    fontSize: 14,\n    color: '#333',\n    lineHeight: 20,\n    marginBottom: 16,\n  },\n  rolesList: {\n    marginTop: 8,\n  },\n  roleItem: {\n    marginBottom: 16,\n    paddingBottom: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: '#f0f0f0',\n  },\n  roleTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 4,\n  },\n  roleDescription: {\n    fontSize: 12,\n    color: '#666',\n    lineHeight: 16,\n  },\n  // レポートタブ\n  shareOptionsCard: {\n    marginBottom: 16,\n    elevation: 2,\n  },\n  shareButtons: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  shareButton: {\n    flex: 1,\n    minWidth: '45%',\n  },\n  reportsCard: {\n    marginBottom: 16,\n    elevation: 2,\n  },\n  reportItem: {\n    padding: 12,\n    marginBottom: 12,\n    backgroundColor: '#f9f9f9',\n    borderRadius: 8,\n  },\n  reportHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 4,\n  },\n  reportTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  reportDate: {\n    fontSize: 12,\n    color: '#666',\n  },\n  reportRecipients: {\n    fontSize: 12,\n    color: '#666',\n    marginBottom: 8,\n  },\n  reportActions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  autoShareCard: {\n    elevation: 2,\n  },\n  settingItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee',\n  },\n  settingLabel: {\n    fontSize: 14,\n    color: '#333',\n  },\n  // 設定タブ\n  settingsCard: {\n    marginBottom: 16,\n    elevation: 2,\n  },\n  settingListItem: {\n    paddingVertical: 8,\n  },\n});\n\nexport default MedicalCollaborationScreen;","import React, { useEffect } from 'react';\nimport {\n  View,\n  StyleSheet,\n  ScrollView,\n} from 'react-native';\nimport {\n  Text,\n  Card,\n  ProgressBar,\n  Chip,\n  Divider,\n  ActivityIndicator,\n} from 'react-native-paper';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setDummyData } from '../store/slices/progressSlice';\n\nconst ProgressScreen = () => {\n  const dispatch = useDispatch();\n  const {\n    weeklyGoal,\n    monthlyStats,\n    recentSessions,\n    isLoading,\n    error,\n  } = useSelector((state) => state.progress);\n\n  useEffect(() => {\n    // デモ用ダミーデータを設定\n    dispatch(setDummyData());\n  }, [dispatch]);\n\n  const getPainLevelColor = (level) => {\n    if (level <= 3) return '#4CAF50';\n    if (level <= 6) return '#FF9800';\n    return '#F44336';\n  };\n\n  const getBorgScaleColor = (scale) => {\n    if (scale <= 11) return '#4CAF50';\n    if (scale <= 15) return '#FF9800';\n    return '#F44336';\n  };\n\n  if (isLoading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" />\n        <Text style={styles.loadingText}>進捗データを読み込み中...</Text>\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView style={styles.container}>\n      {/* 週間目標 */}\n      <Card style={styles.goalCard}>\n        <Card.Content>\n          <Text style={styles.sectionTitle}>今週の目標</Text>\n          <View style={styles.goalContent}>\n            <Text style={styles.goalText}>\n              {weeklyGoal.completed} / {weeklyGoal.total} セッション完了\n            </Text>\n            <ProgressBar\n              progress={weeklyGoal.completed / weeklyGoal.total}\n              color=\"#2E7D32\"\n              style={styles.goalProgress}\n            />\n            <Text style={styles.goalPercentage}>\n              {Math.round((weeklyGoal.completed / weeklyGoal.total) * 100)}%\n            </Text>\n          </View>\n        </Card.Content>\n      </Card>\n\n      {/* 月間統計 */}\n      <Card style={styles.statsCard}>\n        <Card.Content>\n          <Text style={styles.sectionTitle}>今月の統計</Text>\n          \n          <View style={styles.statsGrid}>\n            <View style={styles.statItem}>\n              <Text style={styles.statValue}>{monthlyStats.sessionsCompleted}</Text>\n              <Text style={styles.statLabel}>セッション数</Text>\n            </View>\n            <View style={styles.statItem}>\n              <Text style={styles.statValue}>{monthlyStats.totalExercises}</Text>\n              <Text style={styles.statLabel}>総運動回数</Text>\n            </View>\n          </View>\n\n          <Divider style={styles.statsDivider} />\n\n          <View style={styles.averageStats}>\n            <View style={styles.averageStat}>\n              <Text style={styles.averageLabel}>平均痛みレベル</Text>\n              <View style={styles.averageValue}>\n                <Text style={[styles.averageNumber, { color: getPainLevelColor(monthlyStats.averagePainLevel) }]}>\n                  {monthlyStats.averagePainLevel}\n                </Text>\n                <Text style={styles.averageUnit}>/10</Text>\n              </View>\n            </View>\n            \n            <View style={styles.averageStat}>\n              <Text style={styles.averageLabel}>平均疲労度</Text>\n              <View style={styles.averageValue}>\n                <Text style={[styles.averageNumber, { color: getBorgScaleColor(monthlyStats.averageBorgScale) }]}>\n                  {monthlyStats.averageBorgScale}\n                </Text>\n                <Text style={styles.averageUnit}>/20</Text>\n              </View>\n            </View>\n          </View>\n        </Card.Content>\n      </Card>\n\n      {/* 最近のセッション */}\n      <Card style={styles.sessionsCard}>\n        <Card.Content>\n          <Text style={styles.sectionTitle}>最近のセッション</Text>\n          \n          {recentSessions.map((session, index) => (\n            <View key={index} style={styles.sessionItem}>\n              <View style={styles.sessionHeader}>\n                <Text style={styles.sessionDate}>\n                  {new Date(session.date).toLocaleDateString('ja-JP', {\n                    month: 'short',\n                    day: 'numeric',\n                  })}\n                </Text>\n                <Chip\n                  mode=\"outlined\"\n                  style={[styles.painChip, { borderColor: getPainLevelColor(session.painLevel) }]}\n                  textStyle={{ color: getPainLevelColor(session.painLevel) }}\n                >\n                  痛み {session.painLevel}\n                </Chip>\n              </View>\n              \n              <View style={styles.sessionDetails}>\n                <Text style={styles.sessionDetail}>\n                  {session.exercises}種目 • {session.duration}分\n                </Text>\n              </View>\n              \n              {index < recentSessions.length - 1 && (\n                <Divider style={styles.sessionDivider} />\n              )}\n            </View>\n          ))}\n        </Card.Content>\n      </Card>\n\n      {/* 評価指標の説明 */}\n      <Card style={styles.legendCard}>\n        <Card.Content>\n          <Text style={styles.sectionTitle}>評価指標</Text>\n          \n          <View style={styles.legendSection}>\n            <Text style={styles.legendTitle}>痛みレベル (VAS)</Text>\n            <View style={styles.legendItems}>\n              <View style={styles.legendItem}>\n                <View style={[styles.legendColor, { backgroundColor: '#4CAF50' }]} />\n                <Text style={styles.legendText}>0-3: 軽度</Text>\n              </View>\n              <View style={styles.legendItem}>\n                <View style={[styles.legendColor, { backgroundColor: '#FF9800' }]} />\n                <Text style={styles.legendText}>4-6: 中等度</Text>\n              </View>\n              <View style={styles.legendItem}>\n                <View style={[styles.legendColor, { backgroundColor: '#F44336' }]} />\n                <Text style={styles.legendText}>7-10: 重度</Text>\n              </View>\n            </View>\n          </View>\n\n          <View style={styles.legendSection}>\n            <Text style={styles.legendTitle}>疲労度 (Borgスケール)</Text>\n            <View style={styles.legendItems}>\n              <View style={styles.legendItem}>\n                <View style={[styles.legendColor, { backgroundColor: '#4CAF50' }]} />\n                <Text style={styles.legendText}>6-11: 楽</Text>\n              </View>\n              <View style={styles.legendItem}>\n                <View style={[styles.legendColor, { backgroundColor: '#FF9800' }]} />\n                <Text style={styles.legendText}>12-15: やや〜きつい</Text>\n              </View>\n              <View style={styles.legendItem}>\n                <View style={[styles.legendColor, { backgroundColor: '#F44336' }]} />\n                <Text style={styles.legendText}>16-20: 非常にきつい</Text>\n              </View>\n            </View>\n          </View>\n        </Card.Content>\n      </Card>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  goalCard: {\n    margin: 16,\n    marginBottom: 8,\n    elevation: 2,\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 12,\n  },\n  goalContent: {\n    alignItems: 'center',\n  },\n  goalText: {\n    fontSize: 14,\n    marginBottom: 8,\n    color: '#333',\n  },\n  goalProgress: {\n    width: '100%',\n    height: 8,\n    borderRadius: 4,\n    marginBottom: 4,\n  },\n  goalPercentage: {\n    fontSize: 12,\n    color: '#666',\n    alignSelf: 'flex-end',\n  },\n  statsCard: {\n    margin: 16,\n    marginTop: 8,\n    marginBottom: 8,\n    elevation: 2,\n  },\n  statsGrid: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 16,\n  },\n  statItem: {\n    alignItems: 'center',\n  },\n  statValue: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#2E7D32',\n  },\n  statLabel: {\n    fontSize: 12,\n    color: '#666',\n    marginTop: 4,\n  },\n  statsDivider: {\n    marginBottom: 16,\n  },\n  averageStats: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n  averageStat: {\n    alignItems: 'center',\n  },\n  averageLabel: {\n    fontSize: 12,\n    color: '#666',\n    marginBottom: 4,\n  },\n  averageValue: {\n    flexDirection: 'row',\n    alignItems: 'baseline',\n  },\n  averageNumber: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  averageUnit: {\n    fontSize: 12,\n    color: '#666',\n    marginLeft: 2,\n  },\n  sessionsCard: {\n    margin: 16,\n    marginTop: 8,\n    marginBottom: 8,\n    elevation: 2,\n  },\n  sessionItem: {\n    marginBottom: 12,\n  },\n  sessionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 4,\n  },\n  sessionDate: {\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n  painChip: {\n    borderWidth: 1,\n  },\n  sessionDetails: {\n    marginLeft: 4,\n  },\n  sessionDetail: {\n    fontSize: 12,\n    color: '#666',\n  },\n  sessionDivider: {\n    marginTop: 12,\n  },\n  legendCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 1,\n    backgroundColor: '#FAFAFA',\n  },\n  legendSection: {\n    marginBottom: 12,\n  },\n  legendTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  legendItems: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  legendItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: 16,\n  },\n  legendColor: {\n    width: 12,\n    height: 12,\n    borderRadius: 6,\n    marginRight: 6,\n  },\n  legendText: {\n    fontSize: 12,\n    color: '#333',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n  },\n  loadingText: {\n    marginTop: 16,\n    fontSize: 16,\n    color: '#666',\n  },\n});\n\nexport default ProgressScreen;","import React from 'react';\nimport {\n  View,\n  StyleSheet,\n  ScrollView,\n  Alert,\n} from 'react-native';\nimport {\n  Text,\n  Card,\n  Button,\n  Divider,\n  List,\n  IconButton,\n} from 'react-native-paper';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logoutUser } from '../store/slices/authSlice';\n\nconst ProfileScreen = ({ navigation }) => {\n  const dispatch = useDispatch();\n  const { user } = useSelector((state) => state.auth);\n\n  const handleLogout = () => {\n    Alert.alert(\n      'ログアウト',\n      'ログアウトしてもよろしいですか？',\n      [\n        { text: 'キャンセル', style: 'cancel' },\n        { \n          text: 'ログアウト', \n          style: 'destructive',\n          onPress: () => {\n            dispatch(logoutUser());\n            navigation.replace('Login');\n          }\n        }\n      ]\n    );\n  };\n\n  const getPhaseDisplayName = (phase) => {\n    const phaseMap = {\n      'pre_surgery': '術前期',\n      'post_surgery_early': '術直後期',\n      'phase_3_1': '基礎回復期',\n      'phase_3_2': '筋力強化期',\n      'phase_3_3': '機能訓練期',\n      'phase_3_4': '競技復帰期',\n      'completed': '完了',\n    };\n    return phaseMap[phase] || '不明';\n  };\n\n  const formatDate = (dateString) => {\n    if (!dateString) return '未設定';\n    return new Date(dateString).toLocaleDateString('ja-JP');\n  };\n\n  const menuItems = [\n    {\n      title: 'ACL-RSI評価',\n      description: '心理的準備度の評価',\n      icon: 'clipboard-check',\n      onPress: () => Alert.alert('準備中', 'この機能は開発中です'),\n    },\n    {\n      title: '通知設定',\n      description: 'リマインダーの設定',\n      icon: 'bell',\n      onPress: () => Alert.alert('準備中', 'この機能は開発中です'),\n    },\n    {\n      title: 'データエクスポート',\n      description: '進捗データのエクスポート',\n      icon: 'download',\n      onPress: () => Alert.alert('準備中', 'この機能は開発中です'),\n    },\n    {\n      title: 'ヘルプ・サポート',\n      description: '使い方やお問い合わせ',\n      icon: 'help-circle',\n      onPress: () => Alert.alert('準備中', 'この機能は開発中です'),\n    },\n  ];\n\n  return (\n    <ScrollView style={styles.container}>\n      {/* 患者情報 */}\n      <Card style={styles.profileCard}>\n        <Card.Content>\n          <View style={styles.profileHeader}>\n            <View style={styles.avatar}>\n              <Text style={styles.avatarText}>\n                {user?.name?.charAt(0) || 'P'}\n              </Text>\n            </View>\n            <View style={styles.profileInfo}>\n              <Text style={styles.patientName}>{user?.name || '患者名'}</Text>\n              <Text style={styles.patientNumber}>\n                患者番号: {user?.patientNumber || 'N/A'}\n              </Text>\n              <Text style={styles.currentPhase}>\n                現在の段階: {getPhaseDisplayName(user?.currentPhase)}\n              </Text>\n            </View>\n          </View>\n        </Card.Content>\n      </Card>\n\n      {/* 基本情報 */}\n      <Card style={styles.infoCard}>\n        <Card.Content>\n          <Text style={styles.sectionTitle}>基本情報</Text>\n          \n          <View style={styles.infoRow}>\n            <Text style={styles.infoLabel}>生年月日</Text>\n            <Text style={styles.infoValue}>\n              {formatDate(user?.dateOfBirth)}\n            </Text>\n          </View>\n          \n          <Divider style={styles.infoDivider} />\n          \n          <View style={styles.infoRow}>\n            <Text style={styles.infoLabel}>性別</Text>\n            <Text style={styles.infoValue}>\n              {user?.gender === 'male' ? '男性' : user?.gender === 'female' ? '女性' : '未設定'}\n            </Text>\n          </View>\n          \n          <Divider style={styles.infoDivider} />\n          \n          <View style={styles.infoRow}>\n            <Text style={styles.infoLabel}>手術日</Text>\n            <Text style={styles.infoValue}>\n              {formatDate(user?.surgeryDate)}\n            </Text>\n          </View>\n          \n          <Divider style={styles.infoDivider} />\n          \n          <View style={styles.infoRow}>\n            <Text style={styles.infoLabel}>メールアドレス</Text>\n            <Text style={styles.infoValue}>\n              {user?.email || '未登録'}\n            </Text>\n          </View>\n        </Card.Content>\n      </Card>\n\n      {/* メニュー */}\n      <Card style={styles.menuCard}>\n        <Card.Content>\n          <Text style={styles.sectionTitle}>設定・その他</Text>\n          \n          {menuItems.map((item, index) => (\n            <List.Item\n              key={index}\n              title={item.title}\n              description={item.description}\n              left={(props) => (\n                <List.Icon\n                  {...props}\n                  icon={item.icon}\n                  color=\"#666\"\n                />\n              )}\n              right={(props) => (\n                <List.Icon\n                  {...props}\n                  icon=\"chevron-right\"\n                  color=\"#999\"\n                />\n              )}\n              onPress={item.onPress}\n              style={styles.menuItem}\n            />\n          ))}\n        </Card.Content>\n      </Card>\n\n      {/* アプリ情報 */}\n      <Card style={styles.appInfoCard}>\n        <Card.Content>\n          <Text style={styles.sectionTitle}>アプリ情報</Text>\n          \n          <View style={styles.infoRow}>\n            <Text style={styles.infoLabel}>バージョン</Text>\n            <Text style={styles.infoValue}>1.0.0</Text>\n          </View>\n          \n          <Divider style={styles.infoDivider} />\n          \n          <View style={styles.infoRow}>\n            <Text style={styles.infoLabel}>最終更新</Text>\n            <Text style={styles.infoValue}>2024年12月</Text>\n          </View>\n          \n          <Divider style={styles.infoDivider} />\n          \n          <Text style={styles.disclaimer}>\n            このアプリは医療従事者の指導の下でご利用ください。\n            体調不良や痛みが続く場合は、すぐに担当医師にご相談ください。\n          </Text>\n        </Card.Content>\n      </Card>\n\n      {/* ログアウトボタン */}\n      <View style={styles.logoutContainer}>\n        <Button\n          mode=\"outlined\"\n          onPress={handleLogout}\n          style={styles.logoutButton}\n          textColor=\"#F44336\"\n          icon=\"logout\"\n        >\n          ログアウト\n        </Button>\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  profileCard: {\n    margin: 16,\n    marginBottom: 8,\n    elevation: 2,\n  },\n  profileHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  avatar: {\n    width: 64,\n    height: 64,\n    borderRadius: 32,\n    backgroundColor: '#2E7D32',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 16,\n  },\n  avatarText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  profileInfo: {\n    flex: 1,\n  },\n  patientName: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 4,\n  },\n  patientNumber: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 2,\n  },\n  currentPhase: {\n    fontSize: 14,\n    color: '#2E7D32',\n    fontWeight: '500',\n  },\n  infoCard: {\n    margin: 16,\n    marginTop: 8,\n    marginBottom: 8,\n    elevation: 2,\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 12,\n  },\n  infoRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n  },\n  infoLabel: {\n    fontSize: 14,\n    color: '#333',\n    flex: 1,\n  },\n  infoValue: {\n    fontSize: 14,\n    color: '#666',\n    flex: 1,\n    textAlign: 'right',\n  },\n  infoDivider: {\n    marginVertical: 4,\n  },\n  menuCard: {\n    margin: 16,\n    marginTop: 8,\n    marginBottom: 8,\n    elevation: 2,\n  },\n  menuItem: {\n    paddingVertical: 4,\n  },\n  appInfoCard: {\n    margin: 16,\n    marginTop: 8,\n    marginBottom: 8,\n    elevation: 1,\n    backgroundColor: '#FAFAFA',\n  },\n  disclaimer: {\n    fontSize: 12,\n    color: '#666',\n    lineHeight: 18,\n    marginTop: 8,\n    fontStyle: 'italic',\n  },\n  logoutContainer: {\n    padding: 16,\n    paddingTop: 8,\n  },\n  logoutButton: {\n    borderColor: '#F44336',\n    borderWidth: 1,\n  },\n});\n\nexport default ProfileScreen;","/**\n * 競技復帰チェックリスト\n * 術後6ヶ月以降の競技復帰評価項目\n */\n\nexport const returnToSportCriteria = {\n  title: '競技復帰チェックリスト',\n  description: '術後6ヶ月以降の競技復帰に向けた総合評価項目。すべての基準をクリアしてから競技復帰を検討してください。',\n  evaluationPeriod: '術後6ヶ月以降',\n  \n  categories: [\n    {\n      id: 'medical_clearance',\n      title: '医学的クリアランス',\n      description: '医療従事者による評価と許可',\n      criteria: [\n        {\n          id: 'surgeon_clearance',\n          title: '執刀医の復帰許可',\n          description: '手術を行った医師からの競技復帰許可',\n          type: 'medical_approval',\n          required: true,\n          measurementMethod: '医師による診察・評価',\n          passingCriteria: '執刀医による競技復帰許可',\n          icon: '👨‍⚕️',\n          weight: 10, // 最重要\n        },\n        {\n          id: 'pt_clearance',\n          title: '理学療法士の評価クリア',\n          description: '理学療法士による機能評価の合格',\n          type: 'medical_approval',\n          required: true,\n          measurementMethod: '理学療法士による機能評価',\n          passingCriteria: '理学療法士による復帰推奨',\n          icon: '🤸‍♂️',\n          weight: 8,\n        }\n      ]\n    },\n    {\n      id: 'physical_function',\n      title: '身体機能評価',\n      description: '筋力・可動域・バランス等の身体機能',\n      criteria: [\n        {\n          id: 'knee_rom',\n          title: '膝関節可動域（完全回復）',\n          description: '膝関節の屈曲・伸展可動域が健側と同等',\n          type: 'rom_measurement',\n          required: true,\n          measurementMethod: 'ゴニオメーター測定',\n          passingCriteria: '健側との差2°以内',\n          icon: '📐',\n          weight: 7,\n        },\n        {\n          id: 'quadriceps_strength',\n          title: '大腿四頭筋筋力（90%以上）',\n          description: '大腿四頭筋筋力が健側の90%以上',\n          type: 'strength_test',\n          required: true,\n          measurementMethod: '等尺性筋力測定',\n          passingCriteria: '健側の90%以上',\n          icon: '💪',\n          weight: 9,\n        },\n        {\n          id: 'hamstring_strength',\n          title: 'ハムストリングス筋力（90%以上）',\n          description: 'ハムストリングス筋力が健側の90%以上',\n          type: 'strength_test',\n          required: true,\n          measurementMethod: '等尺性筋力測定',\n          passingCriteria: '健側の90%以上',\n          icon: '🦵',\n          weight: 8,\n        },\n        {\n          id: 'hamstring_quad_ratio',\n          title: 'H/Q比（60%以上）',\n          description: 'ハムストリングス/大腿四頭筋比が適正範囲',\n          type: 'ratio_calculation',\n          required: true,\n          measurementMethod: '筋力測定値から算出',\n          passingCriteria: '60%以上',\n          icon: '⚖️',\n          weight: 7,\n        }\n      ]\n    },\n    {\n      id: 'functional_tests',\n      title: '機能的テスト',\n      description: 'ホップテスト・動作パフォーマンス評価',\n      criteria: [\n        {\n          id: 'single_hop',\n          title: 'シングルホップテスト（90%以上）',\n          description: '片脚ホップ距離が健側の90%以上',\n          type: 'hop_test',\n          required: true,\n          measurementMethod: '最大跳躍距離測定（3回の平均）',\n          passingCriteria: '健側の90%以上',\n          icon: '🦘',\n          weight: 8,\n        },\n        {\n          id: 'triple_hop',\n          title: 'トリプルホップテスト（90%以上）',\n          description: '3回連続ホップ距離が健側の90%以上',\n          type: 'hop_test',\n          required: true,\n          measurementMethod: '3回連続跳躍距離測定',\n          passingCriteria: '健側の90%以上',\n          icon: '🏃‍♂️',\n          weight: 8,\n        },\n        {\n          id: 'crossover_hop',\n          title: 'クロスオーバーホップテスト（90%以上）',\n          description: '左右交互ホップ距離が健側の90%以上',\n          type: 'hop_test',\n          required: true,\n          measurementMethod: '左右交互跳躍距離測定',\n          passingCriteria: '健側の90%以上',\n          icon: '↔️',\n          weight: 8,\n        },\n        {\n          id: 'timed_hop',\n          title: '6mタイムドホップテスト（90%以上）',\n          description: '6m片脚ホップタイムが健側の110%以内',\n          type: 'hop_test',\n          required: true,\n          measurementMethod: '6m片脚ホップの時間測定',\n          passingCriteria: '健側の110%以内（時間が短いほど良い）',\n          icon: '⏱️',\n          weight: 8,\n        }\n      ]\n    },\n    {\n      id: 'movement_quality',\n      title: '動作の質',\n      description: '着地動作・動的バランス・協調性',\n      criteria: [\n        {\n          id: 'landing_technique',\n          title: '着地動作の質',\n          description: 'ドロップジャンプでの適切な着地フォーム',\n          type: 'movement_analysis',\n          required: true,\n          measurementMethod: '動作分析・観察評価',\n          passingCriteria: '膝外反なし、体幹安定',\n          icon: '🎯',\n          weight: 9,\n        },\n        {\n          id: 'cutting_movement',\n          title: 'カッティング動作',\n          description: '方向転換動作の適切な実施',\n          type: 'movement_analysis',\n          required: true,\n          measurementMethod: '45°カッティング動作評価',\n          passingCriteria: '膝外反なし、スムーズな動作',\n          icon: '🔄',\n          weight: 8,\n        },\n        {\n          id: 'single_leg_squat_quality',\n          title: '片脚スクワットの質',\n          description: '片脚スクワット60°での動作品質',\n          type: 'movement_analysis',\n          required: true,\n          measurementMethod: '片脚スクワット動作観察',\n          passingCriteria: '膝外反なし、20回連続実施可能',\n          icon: '🏋️‍♂️',\n          weight: 7,\n        }\n      ]\n    },\n    {\n      id: 'psychological_readiness',\n      title: '心理的準備度',\n      description: '競技復帰への心理的準備と恐怖心評価',\n      criteria: [\n        {\n          id: 'acl_rsi_score',\n          title: 'ACL-RSIスコア（≥56点）',\n          description: 'ACL復帰スポーツ心理準備度評価',\n          type: 'psychological_test',\n          required: true,\n          measurementMethod: 'ACL-RSI質問票（12項目）',\n          passingCriteria: '56点以上（満点84点）',\n          icon: '🧠',\n          weight: 8,\n        },\n        {\n          id: 'fear_avoidance',\n          title: '恐怖回避行動の評価',\n          description: '競技特異的動作への恐怖心の程度',\n          type: 'psychological_assessment',\n          required: true,\n          measurementMethod: '心理的評価・面談',\n          passingCriteria: '競技特異的動作への恐怖心が minimal',\n          icon: '😰',\n          weight: 7,\n        },\n        {\n          id: 'confidence_level',\n          title: '自信レベル',\n          description: '競技復帰への自信と意欲',\n          type: 'psychological_assessment',\n          required: true,\n          measurementMethod: 'VASスケール（0-10）',\n          passingCriteria: '8/10以上',\n          icon: '💪',\n          weight: 6,\n        }\n      ]\n    },\n    {\n      id: 'sport_specific',\n      title: '競技特異的能力',\n      description: '各競技に特化した技能と体力',\n      criteria: [\n        {\n          id: 'sport_specific_skills',\n          title: '競技特異的技能',\n          description: '各競技の基本的な技術動作',\n          type: 'skill_assessment',\n          required: true,\n          measurementMethod: '競技特異的動作評価',\n          passingCriteria: '受傷前レベルの80%以上',\n          icon: '⚽',\n          weight: 8,\n        },\n        {\n          id: 'agility_performance',\n          title: 'アジリティパフォーマンス',\n          description: 'T-test、505アジリティテスト等',\n          type: 'performance_test',\n          required: true,\n          measurementMethod: 'アジリティテスト実施',\n          passingCriteria: '健側の95%以上',\n          icon: '🏃‍♀️',\n          weight: 8,\n        },\n        {\n          id: 'plyometric_performance',\n          title: 'プライオメトリック能力',\n          description: '爆発的パワー・反応時間',\n          type: 'performance_test',\n          required: true,\n          measurementMethod: 'プライオメトリックテスト',\n          passingCriteria: '健側の90%以上',\n          icon: '💥',\n          weight: 7,\n        }\n      ]\n    },\n    {\n      id: 'injury_prevention',\n      title: '再損傷予防',\n      description: '継続的なトレーニングと予防策',\n      criteria: [\n        {\n          id: 'prevention_program',\n          title: '予防プログラムの理解',\n          description: 'FIFA11+等の予防プログラムの習得',\n          type: 'education_assessment',\n          required: true,\n          measurementMethod: 'プログラム実技チェック',\n          passingCriteria: '適切な実施が可能',\n          icon: '🛡️',\n          weight: 7,\n        },\n        {\n          id: 'maintenance_plan',\n          title: '維持トレーニング計画',\n          description: '復帰後の継続的トレーニング計画',\n          type: 'plan_assessment',\n          required: true,\n          measurementMethod: 'トレーニング計画書作成',\n          passingCriteria: '具体的な計画が策定済み',\n          icon: '📋',\n          weight: 6,\n        }\n      ]\n    }\n  ],\n  \n  // 総合評価の算出\n  getOverallEvaluation: (results) => {\n    const allCriteria = returnToSportCriteria.categories.flatMap(cat => cat.criteria);\n    const totalWeight = allCriteria.reduce((sum, criterion) => sum + criterion.weight, 0);\n    \n    let achievedWeight = 0;\n    let passedCount = 0;\n    let totalCount = allCriteria.length;\n    \n    allCriteria.forEach(criterion => {\n      const result = results.find(r => r.id === criterion.id);\n      if (result && result.passed) {\n        achievedWeight += criterion.weight;\n        passedCount++;\n      }\n    });\n    \n    const weightedScore = (achievedWeight / totalWeight) * 100;\n    const passRate = (passedCount / totalCount) * 100;\n    \n    return {\n      totalCriteria: totalCount,\n      passedCriteria: passedCount,\n      passRate,\n      weightedScore,\n      canReturnToSport: weightedScore >= 85 && passRate >= 90,\n      recommendation: getReturnRecommendation(weightedScore, passRate)\n    };\n  }\n};\n\nconst getReturnRecommendation = (weightedScore, passRate) => {\n  if (weightedScore >= 85 && passRate >= 90) {\n    return {\n      level: 'success',\n      title: '競技復帰可能',\n      message: 'すべての主要基準をクリアしています。段階的な競技復帰を開始できます。',\n      nextSteps: [\n        '段階的な練習参加（練習強度50%から開始）',\n        '2週間ごとの段階的強度向上',\n        '4-6週間後の試合復帰検討',\n        '継続的な予防トレーニング実施'\n      ],\n      returnPhase: 'phase_4_gradual_return'\n    };\n  } else if (weightedScore >= 75 && passRate >= 80) {\n    return {\n      level: 'warning',\n      title: '条件付き復帰可能',\n      message: '多くの基準をクリアしていますが、一部改善が必要です。',\n      nextSteps: [\n        '未達成項目の集中的改善',\n        '4週間後の再評価',\n        '医療従事者との詳細相談',\n        '段階的復帰プログラムの調整'\n      ],\n      returnPhase: 'phase_3_final_preparation'\n    };\n  } else if (weightedScore >= 60 && passRate >= 70) {\n    return {\n      level: 'caution',\n      title: '復帰準備継続',\n      message: '基礎的な基準は満たしていますが、さらなる改善が必要です。',\n      nextSteps: [\n        '機能的トレーニングの強化',\n        '心理的サポートの検討',\n        '6-8週間後の再評価',\n        '競技特異的訓練の強化'\n      ],\n      returnPhase: 'phase_3_advanced_training'\n    };\n  } else {\n    return {\n      level: 'danger',\n      title: '復帰は時期尚早',\n      message: '多くの重要な基準が未達成です。基礎的な能力向上に集中してください。',\n      nextSteps: [\n        '基礎的な筋力・機能訓練の継続',\n        '段階的なプログラム進行',\n        '8-12週間後の再評価',\n        'リハビリテーション計画の見直し'\n      ],\n      returnPhase: 'phase_2_basic_training'\n    };\n  }\n};\n\n// カテゴリ別の重要度\nexport const categoryImportance = {\n  medical_clearance: {\n    importance: 'critical',\n    description: '医学的許可は絶対条件です',\n    mustPass: true\n  },\n  physical_function: {\n    importance: 'high',\n    description: '身体機能の回復は復帰の基礎です',\n    mustPass: true\n  },\n  functional_tests: {\n    importance: 'high',\n    description: '機能的能力は競技パフォーマンスに直結します',\n    mustPass: false\n  },\n  movement_quality: {\n    importance: 'high',\n    description: '動作の質は再損傷予防に重要です',\n    mustPass: false\n  },\n  psychological_readiness: {\n    importance: 'medium',\n    description: '心理的準備は長期的成功に影響します',\n    mustPass: false\n  },\n  sport_specific: {\n    importance: 'medium',\n    description: '競技特異的能力は段階的に改善可能です',\n    mustPass: false\n  },\n  injury_prevention: {\n    importance: 'medium',\n    description: '予防知識は継続的な健康に重要です',\n    mustPass: false\n  }\n};\n\nexport default returnToSportCriteria;","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  StyleSheet,\n  ScrollView,\n  Alert,\n  Dimensions,\n} from 'react-native';\nimport {\n  Text,\n  Card,\n  Button,\n  List,\n  Chip,\n  ProgressBar,\n  IconButton,\n  Portal,\n  Modal,\n  Divider,\n  Badge,\n} from 'react-native-paper';\nimport { returnToSportCriteria, categoryImportance } from '../data/returnToSportCriteria';\n\nconst { width } = Dimensions.get('window');\n\nconst ReturnToSportScreen = ({ navigation }) => {\n  const [evaluationResults, setEvaluationResults] = useState([]);\n  const [showDetailModal, setShowDetailModal] = useState(false);\n  const [selectedCriteria, setSelectedCriteria] = useState(null);\n  const [overallResult, setOverallResult] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n\n  useEffect(() => {\n    // 初期化：すべての基準を未評価に設定\n    const allCriteria = returnToSportCriteria.categories.flatMap(cat => cat.criteria);\n    const initialResults = allCriteria.map(criteria => ({\n      id: criteria.id,\n      passed: false,\n      evaluated: false,\n      value: null,\n      notes: ''\n    }));\n    setEvaluationResults(initialResults);\n  }, []);\n\n  useEffect(() => {\n    // 評価結果が更新されたら総合判定を計算\n    if (evaluationResults.length > 0) {\n      const result = returnToSportCriteria.getOverallEvaluation(evaluationResults);\n      setOverallResult(result);\n    }\n  }, [evaluationResults]);\n\n  const handleCriteriaEvaluation = (criteriaId, passed, value = null, notes = '') => {\n    setEvaluationResults(prev => \n      prev.map(result => \n        result.id === criteriaId \n          ? { ...result, passed, evaluated: true, value, notes }\n          : result\n      )\n    );\n  };\n\n  const showCriteriaDetail = (criteria) => {\n    setSelectedCriteria(criteria);\n    setShowDetailModal(true);\n  };\n\n  const getCategoryProgress = (categoryId) => {\n    const category = returnToSportCriteria.categories.find(cat => cat.id === categoryId);\n    if (!category) return { passed: 0, total: 0, percentage: 0 };\n\n    const total = category.criteria.length;\n    const passed = category.criteria.filter(criterion => {\n      const result = evaluationResults.find(r => r.id === criterion.id);\n      return result && result.passed;\n    }).length;\n\n    return {\n      passed,\n      total,\n      percentage: total > 0 ? (passed / total) * 100 : 0\n    };\n  };\n\n  const getStatusColor = (result) => {\n    if (!result.evaluated) return '#9E9E9E';\n    return result.passed ? '#4CAF50' : '#F44336';\n  };\n\n  const getStatusIcon = (result) => {\n    if (!result.evaluated) return 'help-circle-outline';\n    return result.passed ? 'check-circle' : 'close-circle';\n  };\n\n  const getImportanceColor = (categoryId) => {\n    const importance = categoryImportance[categoryId]?.importance;\n    switch (importance) {\n      case 'critical': return '#F44336';\n      case 'high': return '#FF9800';\n      case 'medium': return '#2196F3';\n      default: return '#9E9E9E';\n    }\n  };\n\n  const getImportanceLabel = (categoryId) => {\n    const importance = categoryImportance[categoryId]?.importance;\n    switch (importance) {\n      case 'critical': return '必須';\n      case 'high': return '重要';\n      case 'medium': return '推奨';\n      default: return '標準';\n    }\n  };\n\n  const renderCategoryCard = (category) => {\n    const progress = getCategoryProgress(category.id);\n    const importance = categoryImportance[category.id];\n\n    return (\n      <Card key={category.id} style={styles.categoryCard}>\n        <Card.Content>\n          <View style={styles.categoryHeader}>\n            <View style={styles.categoryInfo}>\n              <Text style={styles.categoryTitle}>{category.title}</Text>\n              <Text style={styles.categoryDescription}>{category.description}</Text>\n            </View>\n            <View style={styles.categoryBadges}>\n              <Chip \n                mode=\"outlined\" \n                compact\n                style={[styles.importanceChip, { borderColor: getImportanceColor(category.id) }]}\n                textStyle={{ color: getImportanceColor(category.id), fontSize: 10 }}\n              >\n                {getImportanceLabel(category.id)}\n              </Chip>\n              <Badge size={24} style={styles.progressBadge}>\n                {progress.passed}/{progress.total}\n              </Badge>\n            </View>\n          </View>\n\n          <View style={styles.progressSection}>\n            <Text style={styles.progressLabel}>\n              進捗: {progress.passed}/{progress.total} ({Math.round(progress.percentage)}%)\n            </Text>\n            <ProgressBar \n              progress={progress.percentage / 100} \n              color={getImportanceColor(category.id)}\n              style={styles.progressBar}\n            />\n          </View>\n\n          {importance?.description && (\n            <Text style={styles.importanceDescription}>\n              {importance.description}\n            </Text>\n          )}\n\n          <View style={styles.criteriaList}>\n            {category.criteria.map(criterion => {\n              const result = evaluationResults.find(r => r.id === criterion.id);\n              return (\n                <List.Item\n                  key={criterion.id}\n                  title={criterion.title}\n                  description={criterion.passingCriteria}\n                  left={() => (\n                    <View style={styles.criteriaIcon}>\n                      <Text style={styles.criteriaEmoji}>{criterion.icon}</Text>\n                    </View>\n                  )}\n                  right={() => (\n                    <View style={styles.criteriaActions}>\n                      <IconButton\n                        icon={getStatusIcon(result)}\n                        iconColor={getStatusColor(result)}\n                        size={20}\n                        onPress={() => showCriteriaDetail(criterion)}\n                      />\n                      <View style={styles.evaluationButtons}>\n                        <IconButton\n                          icon=\"check\"\n                          iconColor={result?.passed && result?.evaluated ? '#4CAF50' : '#ccc'}\n                          size={16}\n                          onPress={() => handleCriteriaEvaluation(criterion.id, true)}\n                          style={styles.miniButton}\n                        />\n                        <IconButton\n                          icon=\"close\"\n                          iconColor={!result?.passed && result?.evaluated ? '#F44336' : '#ccc'}\n                          size={16}\n                          onPress={() => handleCriteriaEvaluation(criterion.id, false)}\n                          style={styles.miniButton}\n                        />\n                      </View>\n                    </View>\n                  )}\n                  onPress={() => showCriteriaDetail(criterion)}\n                  style={styles.criteriaItem}\n                />\n              );\n            })}\n          </View>\n        </Card.Content>\n      </Card>\n    );\n  };\n\n  const renderOverallResult = () => {\n    if (!overallResult) return null;\n\n    const getResultColor = () => {\n      if (overallResult.canReturnToSport) return '#4CAF50';\n      if (overallResult.weightedScore >= 75) return '#FF9800';\n      if (overallResult.weightedScore >= 60) return '#2196F3';\n      return '#F44336';\n    };\n\n    return (\n      <Card style={[styles.resultCard, { borderLeftColor: getResultColor() }]}>\n        <Card.Content>\n          <View style={styles.resultHeader}>\n            <Text style={styles.resultTitle}>総合評価結果</Text>\n            <View style={styles.resultScores}>\n              <Chip \n                mode=\"outlined\" \n                style={[styles.scoreChip, { borderColor: getResultColor() }]}\n                textStyle={{ color: getResultColor() }}\n              >\n                {Math.round(overallResult.weightedScore)}点\n              </Chip>\n            </View>\n          </View>\n          \n          <View style={styles.progressSection}>\n            <Text style={styles.progressLabel}>\n              重み付けスコア: {Math.round(overallResult.weightedScore)}/100点\n            </Text>\n            <ProgressBar \n              progress={overallResult.weightedScore / 100} \n              color={getResultColor()}\n              style={styles.progressBar}\n            />\n          </View>\n\n          <View style={styles.progressSection}>\n            <Text style={styles.progressLabel}>\n              達成率: {overallResult.passedCriteria}/{overallResult.totalCriteria}項目 ({Math.round(overallResult.passRate)}%)\n            </Text>\n            <ProgressBar \n              progress={overallResult.passRate / 100} \n              color={getResultColor()}\n              style={styles.progressBar}\n            />\n          </View>\n\n          <View style={styles.recommendationSection}>\n            <Text style={[styles.recommendationTitle, { color: getResultColor() }]}>\n              {overallResult.recommendation.title}\n            </Text>\n            <Text style={styles.recommendationMessage}>\n              {overallResult.recommendation.message}\n            </Text>\n            \n            <Text style={styles.nextStepsTitle}>推奨される次のステップ:</Text>\n            {overallResult.recommendation.nextSteps.map((step, index) => (\n              <Text key={index} style={styles.nextStepItem}>\n                • {step}\n              </Text>\n            ))}\n          </View>\n\n          {overallResult.canReturnToSport && (\n            <Button\n              mode=\"contained\"\n              onPress={() => Alert.alert('注意', '医療従事者の最終確認を得てから段階的な競技復帰を開始してください。')}\n              style={styles.returnButton}\n              buttonColor=\"#4CAF50\"\n            >\n              競技復帰準備完了\n            </Button>\n          )}\n        </Card.Content>\n      </Card>\n    );\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      {/* ヘッダー情報 */}\n      <Card style={styles.headerCard}>\n        <Card.Content>\n          <Text style={styles.screenTitle}>{returnToSportCriteria.title}</Text>\n          <Text style={styles.screenDescription}>{returnToSportCriteria.description}</Text>\n          <Chip mode=\"outlined\" style={styles.periodChip}>\n            評価時期: {returnToSportCriteria.evaluationPeriod}\n          </Chip>\n        </Card.Content>\n      </Card>\n\n      {/* 総合結果 */}\n      {renderOverallResult()}\n\n      {/* カテゴリ別評価 */}\n      <Text style={styles.sectionTitle}>カテゴリ別評価</Text>\n      {returnToSportCriteria.categories.map(renderCategoryCard)}\n\n      {/* 詳細モーダル */}\n      <Portal>\n        <Modal\n          visible={showDetailModal}\n          onDismiss={() => setShowDetailModal(false)}\n          contentContainerStyle={styles.modalContainer}\n        >\n          {selectedCriteria && (\n            <ScrollView style={styles.modalScroll}>\n              <View style={styles.modalHeader}>\n                <Text style={styles.modalTitle}>{selectedCriteria.title}</Text>\n                <IconButton\n                  icon=\"close\"\n                  onPress={() => setShowDetailModal(false)}\n                />\n              </View>\n              <Divider />\n              <View style={styles.modalContent}>\n                <Text style={styles.modalDescription}>\n                  {selectedCriteria.description}\n                </Text>\n                \n                <Text style={styles.detailSectionTitle}>測定方法</Text>\n                <Text style={styles.detailText}>\n                  {selectedCriteria.measurementMethod}\n                </Text>\n                \n                <Text style={styles.detailSectionTitle}>合格基準</Text>\n                <Text style={[styles.detailText, styles.passingCriteriaText]}>\n                  {selectedCriteria.passingCriteria}\n                </Text>\n                \n                <Text style={styles.detailSectionTitle}>重要度</Text>\n                <Text style={styles.detailText}>\n                  重み: {selectedCriteria.weight}/10\n                </Text>\n\n                <View style={styles.modalEvaluation}>\n                  <Text style={styles.modalEvaluationTitle}>評価結果</Text>\n                  <View style={styles.modalEvaluationButtons}>\n                    <Button\n                      mode=\"contained\"\n                      onPress={() => {\n                        handleCriteriaEvaluation(selectedCriteria.id, true);\n                        setShowDetailModal(false);\n                      }}\n                      style={styles.modalEvalButton}\n                      buttonColor=\"#4CAF50\"\n                    >\n                      合格\n                    </Button>\n                    <Button\n                      mode=\"contained\"\n                      onPress={() => {\n                        handleCriteriaEvaluation(selectedCriteria.id, false);\n                        setShowDetailModal(false);\n                      }}\n                      style={styles.modalEvalButton}\n                      buttonColor=\"#F44336\"\n                    >\n                      未達成\n                    </Button>\n                  </View>\n                </View>\n              </View>\n            </ScrollView>\n          )}\n        </Modal>\n      </Portal>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  headerCard: {\n    margin: 16,\n    elevation: 2,\n  },\n  screenTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  screenDescription: {\n    fontSize: 14,\n    color: '#666',\n    lineHeight: 20,\n    marginBottom: 12,\n  },\n  periodChip: {\n    alignSelf: 'flex-start',\n  },\n  resultCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n    borderLeftWidth: 4,\n  },\n  resultHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  resultTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  resultScores: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  scoreChip: {\n    borderWidth: 1,\n  },\n  progressSection: {\n    marginBottom: 12,\n  },\n  progressLabel: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 4,\n  },\n  progressBar: {\n    height: 8,\n    borderRadius: 4,\n  },\n  recommendationSection: {\n    marginTop: 8,\n  },\n  recommendationTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  recommendationMessage: {\n    fontSize: 14,\n    color: '#333',\n    lineHeight: 20,\n    marginBottom: 12,\n  },\n  nextStepsTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  nextStepItem: {\n    fontSize: 14,\n    color: '#666',\n    lineHeight: 20,\n    marginLeft: 8,\n  },\n  returnButton: {\n    marginTop: 16,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginHorizontal: 16,\n    marginBottom: 12,\n  },\n  categoryCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n  },\n  categoryHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: 12,\n  },\n  categoryInfo: {\n    flex: 1,\n    marginRight: 8,\n  },\n  categoryTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 4,\n  },\n  categoryDescription: {\n    fontSize: 12,\n    color: '#666',\n    lineHeight: 16,\n  },\n  categoryBadges: {\n    alignItems: 'flex-end',\n  },\n  importanceChip: {\n    marginBottom: 4,\n    borderWidth: 1,\n  },\n  progressBadge: {\n    backgroundColor: '#2196F3',\n  },\n  importanceDescription: {\n    fontSize: 12,\n    color: '#666',\n    fontStyle: 'italic',\n    marginBottom: 12,\n  },\n  criteriaList: {\n    marginTop: 8,\n  },\n  criteriaItem: {\n    paddingVertical: 4,\n    paddingHorizontal: 0,\n  },\n  criteriaIcon: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 8,\n  },\n  criteriaEmoji: {\n    fontSize: 20,\n  },\n  criteriaActions: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  evaluationButtons: {\n    flexDirection: 'row',\n  },\n  miniButton: {\n    margin: 0,\n    width: 32,\n    height: 32,\n  },\n  modalContainer: {\n    backgroundColor: 'white',\n    margin: 20,\n    borderRadius: 8,\n    maxHeight: '90%',\n  },\n  modalScroll: {\n    maxHeight: '100%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    flex: 1,\n  },\n  modalContent: {\n    padding: 16,\n  },\n  modalDescription: {\n    fontSize: 14,\n    color: '#333',\n    lineHeight: 20,\n    marginBottom: 16,\n  },\n  detailSectionTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#333',\n    marginTop: 12,\n    marginBottom: 8,\n  },\n  detailText: {\n    fontSize: 14,\n    color: '#666',\n    lineHeight: 20,\n  },\n  passingCriteriaText: {\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  modalEvaluation: {\n    marginTop: 20,\n    paddingTop: 16,\n    borderTopWidth: 1,\n    borderTopColor: '#eee',\n  },\n  modalEvaluationTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 12,\n    textAlign: 'center',\n  },\n  modalEvaluationButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n  modalEvalButton: {\n    minWidth: 100,\n  },\n});\n\nexport default ReturnToSportScreen;","/**\n * ランニング開始基準評価項目\n * 術後3ヶ月時点での評価項目\n */\n\nexport const runningStartCriteria = {\n  title: 'ランニング開始基準評価',\n  description: '術後3ヶ月時点での評価項目。すべての基準をクリアしてからランニングを開始してください。',\n  evaluationPeriod: '術後12週以降',\n  \n  criteria: [\n    {\n      id: 'period',\n      category: '期間',\n      title: '術後12週以上経過していること',\n      description: '手術から最低12週間が経過している必要があります',\n      type: 'period_check',\n      required: true,\n      measurementMethod: '手術日からの経過日数',\n      passingCriteria: '84日以上（12週間）',\n      icon: '📅',\n    },\n    {\n      id: 'pain_swelling',\n      category: '症状',\n      title: '日常活動で痛みや腫れがないこと',\n      description: '歩行、階段昇降、日常動作において痛みや腫れが認められない',\n      type: 'symptom_check',\n      required: true,\n      measurementMethod: 'VASスケール評価',\n      passingCriteria: 'VAS 0-1/10（日常活動時）',\n      icon: '🚫',\n    },\n    {\n      id: 'knee_extension',\n      category: 'ROM',\n      title: '完全な膝伸展ROM',\n      description: '膝関節の完全伸展（0°）が達成されている',\n      type: 'rom_measurement',\n      required: true,\n      measurementMethod: 'ゴニオメーター測定',\n      passingCriteria: '0°（完全伸展）',\n      icon: '📐',\n    },\n    {\n      id: 'knee_flexion',\n      category: 'ROM',\n      title: '膝屈曲ROM（健側との差）',\n      description: '膝屈曲可動域が健側との差が許容範囲内である',\n      type: 'rom_measurement',\n      required: true,\n      measurementMethod: 'ゴニオメーター測定（両側比較）',\n      passingCriteria: '健側との差が5°から10°以内',\n      icon: '📏',\n    },\n    {\n      id: 'quadriceps_strength',\n      category: '筋力',\n      title: '大腿四頭筋筋力（健側の80%以上）',\n      description: '大腿四頭筋の筋力が健側と比較して十分回復している',\n      type: 'strength_test',\n      required: true,\n      measurementMethod: '筋力測定器または5RMレッグプレス',\n      passingCriteria: '健側の80%以上',\n      icon: '💪',\n    },\n    {\n      id: 'single_leg_squat',\n      category: '機能評価',\n      title: '片脚スクワット（45°-60°、外反なし）',\n      description: '良好なコントロールで片脚スクワットを実施できる',\n      type: 'functional_test',\n      required: true,\n      measurementMethod: '動作観察・分析',\n      passingCriteria: '45°-60°の範囲で外反なく10回実施可能',\n      icon: '🏃',\n    }\n  ],\n  \n  // 評価結果の判定\n  getEvaluationResult: (results) => {\n    const totalCriteria = runningStartCriteria.criteria.length;\n    const passedCriteria = results.filter(result => result.passed).length;\n    const passRate = (passedCriteria / totalCriteria) * 100;\n    \n    return {\n      totalCriteria,\n      passedCriteria,\n      passRate,\n      canStartRunning: passedCriteria === totalCriteria,\n      recommendation: getRecommendation(passedCriteria, totalCriteria)\n    };\n  }\n};\n\nconst getRecommendation = (passed, total) => {\n  if (passed === total) {\n    return {\n      level: 'success',\n      title: 'ランニング開始可能',\n      message: 'すべての基準をクリアしています。医療従事者の許可を得てランニングを開始できます。',\n      nextSteps: [\n        'トレッドミルでのウォーキングから開始',\n        '段階的にランニング強度を上げる',\n        '症状の変化を注意深く観察する'\n      ]\n    };\n  } else if (passed >= total * 0.8) {\n    return {\n      level: 'warning',\n      title: 'もう少しで開始可能',\n      message: 'ほとんどの基準をクリアしています。未達成の項目を重点的に改善してください。',\n      nextSteps: [\n        '未達成項目の集中的なトレーニング',\n        '2週間後の再評価',\n        '医療従事者との相談'\n      ]\n    };\n  } else {\n    return {\n      level: 'danger',\n      title: 'ランニング開始は時期尚早',\n      message: 'まだ多くの基準が未達成です。基礎的なトレーニングを継続してください。',\n      nextSteps: [\n        '基礎的な筋力・可動域訓練の継続',\n        '4週間後の再評価',\n        'リハビリテーション計画の見直し'\n      ]\n    };\n  }\n};\n\n// 各基準の詳細情報\nexport const criteriaDetails = {\n  period: {\n    rationale: '組織の治癒と強度回復には最低12週間が必要とされています。',\n    tips: '焦らず段階的な回復を心がけてください。',\n  },\n  pain_swelling: {\n    rationale: '炎症や痛みがある状態でのランニングは再損傷のリスクを高めます。',\n    tips: 'アイシング、適切な休息、抗炎症対策を継続してください。',\n  },\n  knee_extension: {\n    rationale: '完全伸展の欠如は歩行やランニングの効率性を著しく低下させます。',\n    tips: 'ヒールプロップス、膝裏伸展ストレッチを継続してください。',\n  },\n  knee_flexion: {\n    rationale: 'ランニングには最低120°の屈曲可動域が必要とされています。',\n    tips: 'ヒールスライド、自転車エクササイズを継続してください。',\n  },\n  quadriceps_strength: {\n    rationale: '大腿四頭筋の筋力不足は膝の不安定性と再損傷リスクを高めます。',\n    tips: 'レッグエクステンション、スクワット、レッグプレスを継続してください。',\n  },\n  single_leg_squat: {\n    rationale: '片脚スクワットは機能的な筋力と動的安定性を評価する重要な指標です。',\n    tips: '鏡を見ながらフォームを確認し、徐々に深く行ってください。',\n  }\n};\n\nexport default runningStartCriteria;","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  StyleSheet,\n  ScrollView,\n  Alert,\n  Dimensions,\n} from 'react-native';\nimport {\n  Text,\n  Card,\n  Button,\n  List,\n  Chip,\n  ProgressBar,\n  IconButton,\n  Portal,\n  Modal,\n  Divider,\n} from 'react-native-paper';\nimport { runningStartCriteria, criteriaDetails } from '../data/runningCriteria';\n\nconst { width } = Dimensions.get('window');\n\nconst RunningCriteriaScreen = ({ navigation }) => {\n  const [evaluationResults, setEvaluationResults] = useState([]);\n  const [showDetailModal, setShowDetailModal] = useState(false);\n  const [selectedCriteria, setSelectedCriteria] = useState(null);\n  const [overallResult, setOverallResult] = useState(null);\n\n  useEffect(() => {\n    // 初期化：すべての基準を未評価に設定\n    const initialResults = runningStartCriteria.criteria.map(criteria => ({\n      id: criteria.id,\n      passed: false,\n      evaluated: false,\n      value: null,\n      notes: ''\n    }));\n    setEvaluationResults(initialResults);\n  }, []);\n\n  useEffect(() => {\n    // 評価結果が更新されたら総合判定を計算\n    if (evaluationResults.length > 0) {\n      const result = runningStartCriteria.getEvaluationResult(evaluationResults);\n      setOverallResult(result);\n    }\n  }, [evaluationResults]);\n\n  const handleCriteriaEvaluation = (criteriaId, passed, value = null, notes = '') => {\n    setEvaluationResults(prev => \n      prev.map(result => \n        result.id === criteriaId \n          ? { ...result, passed, evaluated: true, value, notes }\n          : result\n      )\n    );\n  };\n\n  const showCriteriaDetail = (criteria) => {\n    setSelectedCriteria(criteria);\n    setShowDetailModal(true);\n  };\n\n  const getStatusColor = (result) => {\n    if (!result.evaluated) return '#9E9E9E';\n    return result.passed ? '#4CAF50' : '#F44336';\n  };\n\n  const getStatusIcon = (result) => {\n    if (!result.evaluated) return 'help-circle-outline';\n    return result.passed ? 'check-circle' : 'close-circle';\n  };\n\n  const getRecommendationColor = (level) => {\n    switch (level) {\n      case 'success': return '#4CAF50';\n      case 'warning': return '#FF9800';\n      case 'danger': return '#F44336';\n      default: return '#9E9E9E';\n    }\n  };\n\n  const renderCriteriaCard = (criteria) => {\n    const result = evaluationResults.find(r => r.id === criteria.id);\n    if (!result) return null;\n\n    return (\n      <Card key={criteria.id} style={styles.criteriaCard}>\n        <Card.Content>\n          <View style={styles.criteriaHeader}>\n            <View style={styles.criteriaInfo}>\n              <Text style={styles.criteriaIcon}>{criteria.icon}</Text>\n              <View style={styles.criteriaText}>\n                <Text style={styles.criteriaCategory}>{criteria.category}</Text>\n                <Text style={styles.criteriaTitle}>{criteria.title}</Text>\n              </View>\n            </View>\n            <IconButton\n              icon={getStatusIcon(result)}\n              iconColor={getStatusColor(result)}\n              size={24}\n              onPress={() => showCriteriaDetail(criteria)}\n            />\n          </View>\n          \n          <Text style={styles.criteriaDescription}>{criteria.description}</Text>\n          \n          <View style={styles.measurementInfo}>\n            <Text style={styles.measurementLabel}>測定方法:</Text>\n            <Text style={styles.measurementText}>{criteria.measurementMethod}</Text>\n          </View>\n          \n          <View style={styles.passingCriteria}>\n            <Text style={styles.passingLabel}>合格基準:</Text>\n            <Text style={styles.passingText}>{criteria.passingCriteria}</Text>\n          </View>\n\n          <View style={styles.evaluationButtons}>\n            <Button\n              mode={result.passed && result.evaluated ? \"contained\" : \"outlined\"}\n              onPress={() => handleCriteriaEvaluation(criteria.id, true)}\n              style={[styles.evalButton, { marginRight: 8 }]}\n              buttonColor={result.passed && result.evaluated ? '#4CAF50' : undefined}\n              compact\n            >\n              合格\n            </Button>\n            <Button\n              mode={!result.passed && result.evaluated ? \"contained\" : \"outlined\"}\n              onPress={() => handleCriteriaEvaluation(criteria.id, false)}\n              style={styles.evalButton}\n              buttonColor={!result.passed && result.evaluated ? '#F44336' : undefined}\n              compact\n            >\n              未達成\n            </Button>\n          </View>\n        </Card.Content>\n      </Card>\n    );\n  };\n\n  const renderOverallResult = () => {\n    if (!overallResult) return null;\n\n    return (\n      <Card style={[styles.resultCard, { borderLeftColor: getRecommendationColor(overallResult.recommendation.level) }]}>\n        <Card.Content>\n          <View style={styles.resultHeader}>\n            <Text style={styles.resultTitle}>総合評価結果</Text>\n            <Chip \n              mode=\"outlined\" \n              style={[styles.resultChip, { borderColor: getRecommendationColor(overallResult.recommendation.level) }]}\n              textStyle={{ color: getRecommendationColor(overallResult.recommendation.level) }}\n            >\n              {overallResult.passedCriteria}/{overallResult.totalCriteria}項目\n            </Chip>\n          </View>\n          \n          <View style={styles.progressSection}>\n            <Text style={styles.progressLabel}>\n              達成率: {Math.round(overallResult.passRate)}%\n            </Text>\n            <ProgressBar \n              progress={overallResult.passRate / 100} \n              color={getRecommendationColor(overallResult.recommendation.level)}\n              style={styles.progressBar}\n            />\n          </View>\n\n          <View style={styles.recommendationSection}>\n            <Text style={[styles.recommendationTitle, { color: getRecommendationColor(overallResult.recommendation.level) }]}>\n              {overallResult.recommendation.title}\n            </Text>\n            <Text style={styles.recommendationMessage}>\n              {overallResult.recommendation.message}\n            </Text>\n            \n            <Text style={styles.nextStepsTitle}>推奨される次のステップ:</Text>\n            {overallResult.recommendation.nextSteps.map((step, index) => (\n              <Text key={index} style={styles.nextStepItem}>\n                • {step}\n              </Text>\n            ))}\n          </View>\n\n          {overallResult.canStartRunning && (\n            <Button\n              mode=\"contained\"\n              onPress={() => Alert.alert('注意', '医療従事者の最終確認を得てからランニングを開始してください。')}\n              style={styles.startRunningButton}\n              buttonColor=\"#4CAF50\"\n            >\n              ランニング開始準備完了\n            </Button>\n          )}\n        </Card.Content>\n      </Card>\n    );\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      {/* ヘッダー情報 */}\n      <Card style={styles.headerCard}>\n        <Card.Content>\n          <Text style={styles.screenTitle}>{runningStartCriteria.title}</Text>\n          <Text style={styles.screenDescription}>{runningStartCriteria.description}</Text>\n          <Chip mode=\"outlined\" style={styles.periodChip}>\n            評価時期: {runningStartCriteria.evaluationPeriod}\n          </Chip>\n        </Card.Content>\n      </Card>\n\n      {/* 総合結果 */}\n      {renderOverallResult()}\n\n      {/* 評価項目リスト */}\n      <Text style={styles.sectionTitle}>評価項目</Text>\n      {runningStartCriteria.criteria.map(renderCriteriaCard)}\n\n      {/* 詳細モーダル */}\n      <Portal>\n        <Modal\n          visible={showDetailModal}\n          onDismiss={() => setShowDetailModal(false)}\n          contentContainerStyle={styles.modalContainer}\n        >\n          {selectedCriteria && (\n            <View>\n              <View style={styles.modalHeader}>\n                <Text style={styles.modalTitle}>{selectedCriteria.title}</Text>\n                <IconButton\n                  icon=\"close\"\n                  onPress={() => setShowDetailModal(false)}\n                />\n              </View>\n              <Divider />\n              <View style={styles.modalContent}>\n                <Text style={styles.modalDescription}>\n                  {selectedCriteria.description}\n                </Text>\n                \n                <Text style={styles.detailSectionTitle}>根拠・理由</Text>\n                <Text style={styles.detailText}>\n                  {criteriaDetails[selectedCriteria.id]?.rationale}\n                </Text>\n                \n                <Text style={styles.detailSectionTitle}>改善のためのヒント</Text>\n                <Text style={styles.detailText}>\n                  {criteriaDetails[selectedCriteria.id]?.tips}\n                </Text>\n                \n                <Text style={styles.detailSectionTitle}>測定方法</Text>\n                <Text style={styles.detailText}>\n                  {selectedCriteria.measurementMethod}\n                </Text>\n                \n                <Text style={styles.detailSectionTitle}>合格基準</Text>\n                <Text style={[styles.detailText, styles.passingCriteriaText]}>\n                  {selectedCriteria.passingCriteria}\n                </Text>\n              </View>\n            </View>\n          )}\n        </Modal>\n      </Portal>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  headerCard: {\n    margin: 16,\n    elevation: 2,\n  },\n  screenTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  screenDescription: {\n    fontSize: 14,\n    color: '#666',\n    lineHeight: 20,\n    marginBottom: 12,\n  },\n  periodChip: {\n    alignSelf: 'flex-start',\n  },\n  resultCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n    borderLeftWidth: 4,\n  },\n  resultHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  resultTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  resultChip: {\n    borderWidth: 1,\n  },\n  progressSection: {\n    marginBottom: 16,\n  },\n  progressLabel: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 4,\n  },\n  progressBar: {\n    height: 8,\n    borderRadius: 4,\n  },\n  recommendationSection: {\n    marginTop: 8,\n  },\n  recommendationTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  recommendationMessage: {\n    fontSize: 14,\n    color: '#333',\n    lineHeight: 20,\n    marginBottom: 12,\n  },\n  nextStepsTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  nextStepItem: {\n    fontSize: 14,\n    color: '#666',\n    lineHeight: 20,\n    marginLeft: 8,\n  },\n  startRunningButton: {\n    marginTop: 16,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginHorizontal: 16,\n    marginBottom: 12,\n  },\n  criteriaCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n  },\n  criteriaHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  criteriaInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  criteriaIcon: {\n    fontSize: 24,\n    marginRight: 12,\n  },\n  criteriaText: {\n    flex: 1,\n  },\n  criteriaCategory: {\n    fontSize: 12,\n    color: '#666',\n    textTransform: 'uppercase',\n  },\n  criteriaTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  criteriaDescription: {\n    fontSize: 14,\n    color: '#666',\n    lineHeight: 18,\n    marginBottom: 12,\n  },\n  measurementInfo: {\n    marginBottom: 8,\n  },\n  measurementLabel: {\n    fontSize: 12,\n    color: '#666',\n    fontWeight: 'bold',\n  },\n  measurementText: {\n    fontSize: 12,\n    color: '#333',\n  },\n  passingCriteria: {\n    marginBottom: 12,\n  },\n  passingLabel: {\n    fontSize: 12,\n    color: '#666',\n    fontWeight: 'bold',\n  },\n  passingText: {\n    fontSize: 12,\n    color: '#333',\n    fontWeight: 'bold',\n  },\n  evaluationButtons: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  evalButton: {\n    minWidth: 70,\n  },\n  modalContainer: {\n    backgroundColor: 'white',\n    margin: 20,\n    borderRadius: 8,\n    maxHeight: '80%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    flex: 1,\n  },\n  modalContent: {\n    padding: 16,\n  },\n  modalDescription: {\n    fontSize: 14,\n    color: '#333',\n    lineHeight: 20,\n    marginBottom: 16,\n  },\n  detailSectionTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#333',\n    marginTop: 12,\n    marginBottom: 8,\n  },\n  detailText: {\n    fontSize: 14,\n    color: '#666',\n    lineHeight: 20,\n  },\n  passingCriteriaText: {\n    fontWeight: 'bold',\n    color: '#333',\n  },\n});\n\nexport default RunningCriteriaScreen;","import React, { useState } from 'react';\nimport {\n  View,\n  StyleSheet,\n  ScrollView,\n  Dimensions,\n} from 'react-native';\nimport {\n  Text,\n  Card,\n  Button,\n  List,\n  Chip,\n  Divider,\n  IconButton,\n  Portal,\n  Modal,\n} from 'react-native-paper';\nimport { runningStartCriteria } from '../data/runningCriteria';\nimport { returnToSportCriteria } from '../data/returnToSportCriteria';\n\nconst { width } = Dimensions.get('window');\n\nconst EvaluationCheckpointsScreen = ({ navigation }) => {\n  const [selectedCheckpoint, setSelectedCheckpoint] = useState(null);\n  const [showDetailModal, setShowDetailModal] = useState(false);\n\n  const evaluationCheckpoints = [\n    {\n      id: 'month_3',\n      title: '術後3ヶ月評価',\n      subtitle: 'ランニング開始基準',\n      description: 'ランニングを安全に開始するための必須評価項目',\n      timeline: '術後12週以降',\n      icon: '🏃‍♂️',\n      color: '#FF9800',\n      data: runningStartCriteria,\n      totalCriteria: runningStartCriteria.criteria.length,\n      nextStep: 'ランニング・プライオメトリクス開始',\n      screen: 'RunningCriteria'\n    },\n    {\n      id: 'month_6_plus',\n      title: '術後6ヶ月以降評価',\n      subtitle: '競技復帰チェックリスト',\n      description: '競技への安全な復帰のための包括的評価項目',\n      timeline: '術後6ヶ月以降',\n      icon: '⚽',\n      color: '#4CAF50',\n      data: returnToSportCriteria,\n      totalCriteria: returnToSportCriteria.categories.reduce((sum, cat) => sum + cat.criteria.length, 0),\n      nextStep: '段階的競技復帰開始',\n      screen: 'ReturnToSport'\n    }\n  ];\n\n  const handleCheckpointPress = (checkpoint) => {\n    if (checkpoint.screen === 'RunningCriteria') {\n      navigation.navigate('RunningCriteria');\n    } else if (checkpoint.screen === 'ReturnToSport') {\n      navigation.navigate('ReturnToSport');\n    }\n  };\n\n  const showCheckpointDetail = (checkpoint) => {\n    setSelectedCheckpoint(checkpoint);\n    setShowDetailModal(true);\n  };\n\n  const renderCheckpointCard = (checkpoint) => {\n    return (\n      <Card key={checkpoint.id} style={[styles.checkpointCard, { borderLeftColor: checkpoint.color }]}>\n        <Card.Content>\n          <View style={styles.checkpointHeader}>\n            <View style={styles.checkpointInfo}>\n              <Text style={styles.checkpointIcon}>{checkpoint.icon}</Text>\n              <View style={styles.checkpointText}>\n                <Text style={styles.checkpointTitle}>{checkpoint.title}</Text>\n                <Text style={styles.checkpointSubtitle}>{checkpoint.subtitle}</Text>\n              </View>\n            </View>\n            <IconButton\n              icon=\"information-outline\"\n              iconColor={checkpoint.color}\n              size={24}\n              onPress={() => showCheckpointDetail(checkpoint)}\n            />\n          </View>\n\n          <Text style={styles.checkpointDescription}>{checkpoint.description}</Text>\n\n          <View style={styles.checkpointDetails}>\n            <View style={styles.detailRow}>\n              <Text style={styles.detailLabel}>評価時期:</Text>\n              <Chip mode=\"outlined\" style={[styles.timelineChip, { borderColor: checkpoint.color }]}>\n                {checkpoint.timeline}\n              </Chip>\n            </View>\n\n            <View style={styles.detailRow}>\n              <Text style={styles.detailLabel}>評価項目数:</Text>\n              <Text style={styles.detailValue}>{checkpoint.totalCriteria}項目</Text>\n            </View>\n\n            <View style={styles.detailRow}>\n              <Text style={styles.detailLabel}>次のステップ:</Text>\n              <Text style={styles.detailValue}>{checkpoint.nextStep}</Text>\n            </View>\n          </View>\n\n          <Button\n            mode=\"contained\"\n            onPress={() => handleCheckpointPress(checkpoint)}\n            style={[styles.evaluationButton, { backgroundColor: checkpoint.color }]}\n            icon=\"clipboard-check\"\n          >\n            評価を開始\n          </Button>\n        </Card.Content>\n      </Card>\n    );\n  };\n\n  const renderCheckpointOverview = (checkpoint) => {\n    if (checkpoint.id === 'month_3') {\n      return (\n        <View style={styles.overviewSection}>\n          <Text style={styles.overviewTitle}>主要評価項目:</Text>\n          {checkpoint.data.criteria.map((criterion, index) => (\n            <View key={criterion.id} style={styles.overviewItem}>\n              <Text style={styles.overviewIcon}>{criterion.icon}</Text>\n              <View style={styles.overviewText}>\n                <Text style={styles.overviewItemTitle}>{criterion.title}</Text>\n                <Text style={styles.overviewItemCriteria}>{criterion.passingCriteria}</Text>\n              </View>\n            </View>\n          ))}\n        </View>\n      );\n    } else {\n      return (\n        <View style={styles.overviewSection}>\n          <Text style={styles.overviewTitle}>評価カテゴリ:</Text>\n          {checkpoint.data.categories.map((category, index) => (\n            <View key={category.id} style={styles.overviewCategory}>\n              <Text style={styles.overviewCategoryTitle}>{category.title}</Text>\n              <Text style={styles.overviewCategoryDesc}>{category.description}</Text>\n              <Text style={styles.overviewCategoryCount}>\n                {category.criteria.length}項目の評価\n              </Text>\n            </View>\n          ))}\n        </View>\n      );\n    }\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      {/* ヘッダー */}\n      <Card style={styles.headerCard}>\n        <Card.Content>\n          <Text style={styles.screenTitle}>評価チェックポイント</Text>\n          <Text style={styles.screenDescription}>\n            ACLリハビリテーションの重要な評価時期における必須チェック項目です。\n            各段階で適切な評価を行い、安全な回復と競技復帰を目指しましょう。\n          </Text>\n        </Card.Content>\n      </Card>\n\n      {/* タイムライン概要 */}\n      <Card style={styles.timelineCard}>\n        <Card.Content>\n          <Text style={styles.timelineTitle}>評価タイムライン</Text>\n          <View style={styles.timeline}>\n            <View style={styles.timelineItem}>\n              <View style={[styles.timelineMarker, { backgroundColor: '#FF9800' }]} />\n              <View style={styles.timelineContent}>\n                <Text style={styles.timelineItemTitle}>術後3ヶ月</Text>\n                <Text style={styles.timelineItemDesc}>ランニング開始基準評価</Text>\n              </View>\n            </View>\n            <View style={styles.timelineLine} />\n            <View style={styles.timelineItem}>\n              <View style={[styles.timelineMarker, { backgroundColor: '#4CAF50' }]} />\n              <View style={styles.timelineContent}>\n                <Text style={styles.timelineItemTitle}>術後6ヶ月以降</Text>\n                <Text style={styles.timelineItemDesc}>競技復帰チェックリスト</Text>\n              </View>\n            </View>\n          </View>\n        </Card.Content>\n      </Card>\n\n      {/* 評価チェックポイント */}\n      <Text style={styles.sectionTitle}>評価チェックポイント</Text>\n      {evaluationCheckpoints.map(renderCheckpointCard)}\n\n      {/* 詳細モーダル */}\n      <Portal>\n        <Modal\n          visible={showDetailModal}\n          onDismiss={() => setShowDetailModal(false)}\n          contentContainerStyle={styles.modalContainer}\n        >\n          {selectedCheckpoint && (\n            <ScrollView style={styles.modalScroll}>\n              <View style={styles.modalHeader}>\n                <Text style={styles.modalTitle}>{selectedCheckpoint.title}</Text>\n                <IconButton\n                  icon=\"close\"\n                  onPress={() => setShowDetailModal(false)}\n                />\n              </View>\n              <Divider />\n              \n              <View style={styles.modalContent}>\n                <Text style={styles.modalDescription}>\n                  {selectedCheckpoint.description}\n                </Text>\n\n                <View style={styles.modalDetailSection}>\n                  <Text style={styles.modalDetailTitle}>評価の目的</Text>\n                  <Text style={styles.modalDetailText}>\n                    {selectedCheckpoint.id === 'month_3' \n                      ? 'ランニングを安全に開始するための身体機能と症状の評価を行います。すべての基準をクリアすることで、より高強度の訓練に進むことができます。'\n                      : '競技への完全復帰に向けた包括的な評価を行います。身体機能、動作の質、心理的準備度など多角的な視点から復帰可能性を判定します。'\n                    }\n                  </Text>\n                </View>\n\n                <View style={styles.modalDetailSection}>\n                  <Text style={styles.modalDetailTitle}>評価のタイミング</Text>\n                  <Text style={styles.modalDetailText}>\n                    {selectedCheckpoint.timeline}に実施してください。\n                    {selectedCheckpoint.id === 'month_3' \n                      ? '術後12週間が経過し、基礎的なリハビリテーションが完了した時点で評価を行います。'\n                      : '術後6ヶ月以降で、高強度トレーニングを十分に実施した後に評価を行います。'\n                    }\n                  </Text>\n                </View>\n\n                {renderCheckpointOverview(selectedCheckpoint)}\n\n                <View style={styles.modalDetailSection}>\n                  <Text style={styles.modalDetailTitle}>注意事項</Text>\n                  <Text style={styles.modalDetailText}>\n                    • すべての評価は医療従事者の指導の下で実施してください{'\\n'}\n                    • 痛みや不快感がある場合は評価を中止してください{'\\n'}\n                    • 基準に達しない場合は、さらなるトレーニングを継続してください{'\\n'}\n                    • 個人差があるため、医師との相談を欠かさないでください\n                  </Text>\n                </View>\n\n                <Button\n                  mode=\"contained\"\n                  onPress={() => {\n                    setShowDetailModal(false);\n                    handleCheckpointPress(selectedCheckpoint);\n                  }}\n                  style={[styles.modalButton, { backgroundColor: selectedCheckpoint.color }]}\n                >\n                  評価を開始する\n                </Button>\n              </View>\n            </ScrollView>\n          )}\n        </Modal>\n      </Portal>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  headerCard: {\n    margin: 16,\n    elevation: 2,\n  },\n  screenTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    color: '#333',\n  },\n  screenDescription: {\n    fontSize: 14,\n    color: '#666',\n    lineHeight: 20,\n  },\n  timelineCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n  },\n  timelineTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    color: '#333',\n  },\n  timeline: {\n    paddingHorizontal: 8,\n  },\n  timelineItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  timelineMarker: {\n    width: 12,\n    height: 12,\n    borderRadius: 6,\n    marginRight: 16,\n  },\n  timelineContent: {\n    flex: 1,\n  },\n  timelineItemTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  timelineItemDesc: {\n    fontSize: 14,\n    color: '#666',\n  },\n  timelineLine: {\n    width: 2,\n    height: 20,\n    backgroundColor: '#ddd',\n    marginLeft: 5,\n    marginBottom: 8,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginHorizontal: 16,\n    marginBottom: 12,\n    color: '#333',\n  },\n  checkpointCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n    borderLeftWidth: 4,\n  },\n  checkpointHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  checkpointInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  checkpointIcon: {\n    fontSize: 32,\n    marginRight: 12,\n  },\n  checkpointText: {\n    flex: 1,\n  },\n  checkpointTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  checkpointSubtitle: {\n    fontSize: 14,\n    color: '#666',\n  },\n  checkpointDescription: {\n    fontSize: 14,\n    color: '#666',\n    lineHeight: 18,\n    marginBottom: 16,\n  },\n  checkpointDetails: {\n    marginBottom: 16,\n  },\n  detailRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  detailLabel: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#333',\n    marginRight: 8,\n    minWidth: 80,\n  },\n  detailValue: {\n    fontSize: 14,\n    color: '#666',\n    flex: 1,\n  },\n  timelineChip: {\n    borderWidth: 1,\n  },\n  evaluationButton: {\n    borderRadius: 8,\n  },\n  modalContainer: {\n    backgroundColor: 'white',\n    margin: 20,\n    borderRadius: 8,\n    maxHeight: '90%',\n  },\n  modalScroll: {\n    maxHeight: '100%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    flex: 1,\n    color: '#333',\n  },\n  modalContent: {\n    padding: 16,\n  },\n  modalDescription: {\n    fontSize: 16,\n    color: '#333',\n    lineHeight: 22,\n    marginBottom: 20,\n  },\n  modalDetailSection: {\n    marginBottom: 20,\n  },\n  modalDetailTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 8,\n  },\n  modalDetailText: {\n    fontSize: 14,\n    color: '#666',\n    lineHeight: 20,\n  },\n  overviewSection: {\n    marginBottom: 20,\n  },\n  overviewTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 12,\n  },\n  overviewItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 12,\n    paddingLeft: 8,\n  },\n  overviewIcon: {\n    fontSize: 20,\n    marginRight: 12,\n    width: 24,\n  },\n  overviewText: {\n    flex: 1,\n  },\n  overviewItemTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  overviewItemCriteria: {\n    fontSize: 12,\n    color: '#666',\n  },\n  overviewCategory: {\n    marginBottom: 16,\n    paddingLeft: 8,\n    borderLeftWidth: 3,\n    borderLeftColor: '#ddd',\n    paddingVertical: 8,\n  },\n  overviewCategoryTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 4,\n  },\n  overviewCategoryDesc: {\n    fontSize: 12,\n    color: '#666',\n    marginBottom: 4,\n  },\n  overviewCategoryCount: {\n    fontSize: 12,\n    color: '#999',\n    fontStyle: 'italic',\n  },\n  modalButton: {\n    marginTop: 16,\n    borderRadius: 8,\n  },\n});\n\nexport default EvaluationCheckpointsScreen;","import React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Alert } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport PropTypes from 'prop-types';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false, error: null, errorInfo: null };\n  }\n\n  static getDerivedStateFromError(error) {\n    // エラーが発生したときに state を更新し、フォールバック UI を表示\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // エラーログを記録\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    });\n\n    // 開発環境でのみ詳細なエラー情報を表示\n    if (__DEV__) {\n      console.error('ErrorBoundary caught an error:', error, errorInfo);\n    }\n\n    // 本番環境では適切なエラー追跡サービスに送信\n    // 例: Sentry, Crashlytics など\n    // ErrorTracker.logError(error, errorInfo);\n  }\n\n  handleRetry = () => {\n    this.setState({ hasError: false, error: null, errorInfo: null });\n  };\n\n  handleReportError = () => {\n    const errorMessage = this.state.error?.message || 'Unknown error';\n    const errorStack = this.state.error?.stack || '';\n    \n    Alert.alert(\n      'エラーレポート',\n      `以下のエラー情報をサポートに報告できます：\\n\\n${errorMessage}`,\n      [\n        { text: 'キャンセル', style: 'cancel' },\n        { \n          text: 'レポート送信', \n          onPress: () => {\n            // ここで実際のエラーレポート送信処理を実装\n            Alert.alert('送信完了', 'エラーレポートを送信しました。');\n          }\n        }\n      ]\n    );\n  };\n\n  render() {\n    if (this.state.hasError) {\n      // カスタムフォールバック UI\n      return (\n        <View style={styles.container}>\n          <View style={styles.errorContainer}>\n            <Text style={styles.title}>問題が発生しました</Text>\n            <Text style={styles.message}>\n              アプリで予期しないエラーが発生しました。\n              下記のボタンをお試しください。\n            </Text>\n            \n            {__DEV__ && this.state.error && (\n              <View style={styles.debugContainer}>\n                <Text style={styles.debugTitle}>開発者情報:</Text>\n                <Text style={styles.debugText}>{this.state.error.toString()}</Text>\n                {this.state.errorInfo && (\n                  <Text style={styles.debugText}>{this.state.errorInfo.componentStack}</Text>\n                )}\n              </View>\n            )}\n            \n            <View style={styles.buttonContainer}>\n              <Button \n                mode=\"contained\" \n                onPress={this.handleRetry}\n                style={styles.button}\n              >\n                もう一度試す\n              </Button>\n              \n              <Button \n                mode=\"outlined\" \n                onPress={this.handleReportError}\n                style={styles.button}\n              >\n                エラーを報告\n              </Button>\n              \n              {this.props.onReset && (\n                <Button \n                  mode=\"text\" \n                  onPress={this.props.onReset}\n                  style={styles.button}\n                >\n                  ホームに戻る\n                </Button>\n              )}\n            </View>\n          </View>\n        </View>\n      );\n    }\n\n    // エラーがない場合は通常の子コンポーネントを表示\n    return this.props.children;\n  }\n}\n\nErrorBoundary.propTypes = {\n  children: PropTypes.node.isRequired,\n  onReset: PropTypes.func, // ホーム画面に戻るなどのリセット処理\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n    padding: 20,\n  },\n  errorContainer: {\n    backgroundColor: '#fff',\n    padding: 24,\n    borderRadius: 12,\n    width: '100%',\n    maxWidth: 400,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#d32f2f',\n    marginBottom: 16,\n    textAlign: 'center',\n  },\n  message: {\n    fontSize: 16,\n    color: '#333',\n    textAlign: 'center',\n    marginBottom: 24,\n    lineHeight: 24,\n  },\n  buttonContainer: {\n    width: '100%',\n    gap: 12,\n  },\n  button: {\n    marginVertical: 4,\n  },\n  debugContainer: {\n    backgroundColor: '#f5f5f5',\n    padding: 12,\n    borderRadius: 8,\n    marginBottom: 20,\n    width: '100%',\n  },\n  debugTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#666',\n    marginBottom: 8,\n  },\n  debugText: {\n    fontSize: 12,\n    color: '#666',\n    fontFamily: 'monospace',\n  },\n});\n\nexport default ErrorBoundary;","import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { store } from './src/store';\nimport { theme } from './src/theme';\n\n// Screens\nimport LoginScreen from './src/screens/LoginScreen';\nimport HomeScreen from './src/screens/HomeScreen';\nimport ExerciseScreen from './src/screens/ExerciseScreen';\nimport ExerciseMenuScreen from './src/screens/ExerciseMenuScreen';\nimport ExerciseSessionScreen from './src/screens/ExerciseSessionScreen';\nimport AIAnalysisScreen from './src/screens/AIAnalysisScreen';\nimport MedicalCollaborationScreen from './src/screens/MedicalCollaborationScreen';\nimport ProgressScreen from './src/screens/ProgressScreen';\nimport ProfileScreen from './src/screens/ProfileScreen';\nimport ReturnToSportScreen from './src/screens/ReturnToSportScreen';\nimport RunningCriteriaScreen from './src/screens/RunningCriteriaScreen';\nimport EvaluationCheckpointsScreen from './src/screens/EvaluationCheckpointsScreen';\n\n// Components\nimport ErrorBoundary from './src/components/ErrorBoundary';\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  return (\n    <ErrorBoundary>\n      <ReduxProvider store={store}>\n        <PaperProvider theme={theme}>\n          <NavigationContainer>\n            <Stack.Navigator\n            initialRouteName=\"Login\"\n            screenOptions={{\n              headerStyle: {\n                backgroundColor: theme.colors.primary,\n              },\n              headerTintColor: '#fff',\n              headerTitleStyle: {\n                fontWeight: 'bold',\n              },\n            }}\n          >\n            <Stack.Screen \n              name=\"Login\" \n              component={LoginScreen}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen \n              name=\"Home\" \n              component={HomeScreen}\n              options={{ title: 'ACL リハビリ' }}\n            />\n            <Stack.Screen \n              name=\"Exercise\" \n              component={ExerciseScreen}\n              options={{ title: '自主トレーニング' }}\n            />\n            <Stack.Screen \n              name=\"ExerciseMenu\" \n              component={ExerciseMenuScreen}\n              options={{ title: '今日のトレーニング' }}\n            />\n            <Stack.Screen \n              name=\"ExerciseSession\" \n              component={ExerciseSessionScreen}\n              options={{ title: 'トレーニング実行' }}\n            />\n            <Stack.Screen \n              name=\"AIAnalysis\" \n              component={AIAnalysisScreen}\n              options={{ title: 'AI動作分析' }}\n            />\n            <Stack.Screen \n              name=\"MedicalCollaboration\" \n              component={MedicalCollaborationScreen}\n              options={{ title: '医療従事者連携' }}\n            />\n            <Stack.Screen \n              name=\"Progress\" \n              component={ProgressScreen}\n              options={{ title: '進捗確認' }}\n            />\n            <Stack.Screen \n              name=\"Profile\" \n              component={ProfileScreen}\n              options={{ title: 'プロフィール' }}\n            />\n            <Stack.Screen \n              name=\"ReturnToSport\" \n              component={ReturnToSportScreen}\n              options={{ title: '競技復帰評価' }}\n            />\n            <Stack.Screen \n              name=\"RunningCriteria\" \n              component={RunningCriteriaScreen}\n              options={{ title: 'ランニング基準' }}\n            />\n            <Stack.Screen \n              name=\"EvaluationCheckpoints\" \n              component={EvaluationCheckpointsScreen}\n              options={{ title: '評価チェックポイント' }}\n            />\n            </Stack.Navigator>\n          </NavigationContainer>\n        </PaperProvider>\n      </ReduxProvider>\n    </ErrorBoundary>\n  );\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [453], () => (__webpack_require__(5819)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["API_BASE_URL","_Constants$expoConfig","Constants","expoConfig","_Constants$expoConfig2","extra","apiUrl","apiClient","axios","create","baseURL","timeout","headers","interceptors","request","use","config","error","Promise","reject","response","data","_error$response","status","authAPI","login","_login","_asyncToGenerator","patientNumber","password","post","_x","_x2","apply","arguments","getProfile","_getProfile","token","get","Authorization","_x3","logout","_logout","_x4","exerciseAPI","getCategories","_getCategories","phase","params","_x5","_x6","getExercisesByPhase","_getExercisesByPhase","_x7","_x8","getExercisesByCategory","_getExercisesByCategory","categoryId","_x9","_x0","getPatientExercisePlan","_getPatientExercisePlan","patientId","_x1","_x10","_x11","getExerciseDetails","_getExerciseDetails","exerciseId","_x12","_x13","recordSession","_recordSession","sessionData","_x14","_x15","uploadVideo","_uploadVideo","formData","_x16","_x17","progressAPI","getProgress","_getProgress","_x18","submitACLRSI","_submitACLRSI","rsiData","_x19","_x20","medicalCollaborationAPI","getMedicalStaff","_getMedicalStaff","_x21","_x22","sendReport","_sendReport","reportData","_x23","_x24","getMessages","_getMessages","limit","_x25","_x26","_x27","sendMessage","_sendMessage","messageData","_x28","_x29","getAppointments","_getAppointments","_x30","_x31","loginUser","createAsyncThunk","_ref3","_ref","_ref2","rejectWithValue","SecureStore","setItemAsync","user","_error$response$data","logoutUser","_ref5","_","_ref4","deleteItemAsync","checkAuthToken","_ref7","_ref6","getItemAsync","Error","authSlice","createSlice","name","initialState","isLoading","isAuthenticated","reducers","clearError","state","updateUserProfile","action","_objectSpread","payload","demoLogin","id","currentPhase","surgeryDate","email","extraReducers","builder","addCase","pending","fulfilled","rejected","_authSlice$actions","actions","fetchCategories","fetchExercisesByPhase","_error$response2","_error$response2$data","fetchPatientExercisePlan","_ref9","_ref8","_error$response3","_error$response3$data","recordExerciseSession","_ref10","_ref0","_ref1","_error$response4","_error$response4$data","exerciseSlice","categories","exercises","patientPlan","currentSession","sessionHistory","currentExerciseIndex","exerciseProgress","setCurrentExerciseIndex","updateExerciseProgress","_action$payload","progress","resetExerciseProgress","setCurrentPhase","startLocalSession","Date","now","startTime","toISOString","painLevel","borgScale","location","notes","endLocalSession","endTime","completed","addExerciseToSession","push","setCurrentExercise","currentExercise","completeExercise","_action$payload2","completedAt","updateSessionInfo","pauseSession","isPaused","pausedAt","resumeSession","pauseDuration","totalPauseDuration","_exerciseSlice$action","fetchProgressData","timeRange","getProgressData","fetchSessionHistory","getSessionHistory","fetchProgressStats","period","getProgressStats","weeklyGoal","total","targetSessions","monthlyGoal","monthlyStats","sessionsCompleted","totalExercises","totalDuration","averagePainLevel","averageBorgScale","improvementRate","recentSessions","painLevelTrend","borgScaleTrend","exerciseCountTrend","phaseProgressData","selectedTimeRange","selectedMetric","lastUpdated","progressSlice","addSessionToHistory","date","split","unshift","length","slice","sessions","today","weekStart","setDate","getDate","getDay","weekSessions","filter","session","monthStart","getFullYear","getMonth","monthSessions","reduce","sum","s","duration","updateStatsFromSessions","setWeeklyGoal","setMonthlyGoal","setTimeRange","setSelectedMetric","resetProgress","setDummyData","value","stats","_progressSlice$action","fetchMedicalStaff","fetchMessages","fetchAppointments","_ref13","_ref11","_ref12","_error$response5","_error$response5$data","medicalCollaborationSlice","medicalStaff","primaryDoctor","physiotherapist","nurses","specialists","messages","unreadCount","activeConversation","sharedReports","pendingReports","reportTemplates","appointments","nextAppointment","notifications","alerts","sharingPreferences","autoShareProgress","autoShareACLRSI","autoShareAIAnalysis","weeklyReportEnabled","emergencyContactEnabled","notificationSettings","newMessage","appointmentReminder","reportRequested","urgentAlert","weeklyDigest","activeTab","addMessage","message","toString","timestamp","isRead","isSent","markMessageAsRead","messageId","find","m","Math","max","markAllMessagesAsRead","forEach","setActiveConversation","addPendingReport","report","createdAt","updateReportStatus","reportId","pendingIndex","findIndex","r","sentAt","splice","addNotification","notification","type","markNotificationAsRead","notificationId","n","addAlert","alert","isActive","dismissAlert","alertId","a","dismissedAt","updateSharingPreferences","updateNotificationSettings","setActiveTab","title","specialization","hospital","phone","avatar","isOnline","lastSeen","getTime","senderId","senderName","senderTitle","content","recipients","noteableProgress","totalScore","emotionScore","confidenceScore","interpretation","recommendations","doctor","datetime","sender","appointment","_medicalCollaboration","store","configureStore","reducer","auth","exercise","medicalCollaboration","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","theme","DefaultTheme","colors","primary","primaryContainer","secondary","secondaryContainer","tertiary","surface","surfaceVariant","background","onPrimary","onSecondary","onSurface","onBackground","fonts","labelLarge","fontFamily","fontSize","fontWeight","LoginScreen","navigation","_useState","useState","_useState2","_slicedToArray","setPatientNumber","_useState3","_useState4","setPassword","_useState5","_useState6","showPassword","setShowPassword","dispatch","useDispatch","_useSelector","useSelector","useEffect","replace","Alert","text","onPress","handleDemoLogin","_jsxs","View","style","styles","loadingContainer","children","_jsx","ActivityIndicator","size","Text","loadingText","KeyboardAvoidingView","container","behavior","Card","card","Content","Title","Paragraph","subtitle","TextInput","label","onChangeText","mode","input","autoCapitalize","autoCorrect","textContentType","disabled","secureTextEntry","right","Icon","icon","Button","trim","loginButton","loading","helpText","demoCard","demoTitle","demoSubtitle","demoButtonContainer","demoButton","compact","StyleSheet","flex","backgroundColor","justifyContent","alignItems","marginTop","padding","elevation","borderRadius","textAlign","marginBottom","color","paddingVertical","lineHeight","flexDirection","marginHorizontal","borderColor","propTypes","PropTypes","navigate","isRequired","HomeScreen","Dimensions","width","currentPhaseInfo","phaseMap","description","getPhaseInfo","menuItems","ScrollView","headerCard","headerContent","userInfo","welcomeText","userName","IconButton","logoutButton","phaseCard","phaseHeader","phaseTitle","Chip","phaseChip","textStyle","phaseDescription","progressContainer","progressLabel","ProgressBar","progressBar","progressText","round","toLocaleDateString","menuContainer","map","item","index","menuCard","menuContent","menuTextContainer","menuTitle","menuDescription","iconColor","menuIcon","menuButton","labelStyle","menuButtonLabel","tipCard","tipTitle","Divider","tipDivider","tipText","margin","borderWidth","height","paddingTop","infoCard","infoTitle","List","left","errorContainer","errorText","errorMessage","sessionCard","sessionTitle","sessionDescription","startButton","categoryCard","categoryHeader","paddingHorizontal","categoryHeaderContent","categoryTitle","exerciseItem","exerciseIcon","marginRight","exerciseInfo","difficultyChip","completedIcon","emptyCard","emptyTitle","emptyDescription","_useSelector2","userPhase","dummyPlan","getDummyExercisePlan","setLocalPatientPlan","localPatientPlan","exercise_name","category_name","assigned_sets","assigned_reps","frequency","difficulty_level","requires_ai_analysis","is_completed","hold_time","note","getDifficultyColor","level","getDifficultyLabel","phaseInfo","currentPlan","groupedExercises","grouped","categoryName","groupExercisesByCategory","planToUse","Object","keys","entries","Badge","handleExercisePress","progressCard","progressTitle","exerciseCard","exerciseHeader","exerciseName","exerciseDescription","exerciseCategory","restSurface","restTitle","restTime","setCard","setHeader","setTitle","repTitle","setProgress","setProgressBar","timerContainer","timerLabel","timerValue","controlButtons","nextButton","controlCard","controlRow","controlButton","modalContainer","modalTitle","modalText","modalDivider","ratingLabel","ratingButtons","flexWrap","ratingButton","minWidth","modalButtons","modalButton","currentSet","setCurrentSet","currentRep","setCurrentRep","_useState7","_useState8","isResting","setIsResting","_useState9","_useState0","restTimeLeft","setRestTimeLeft","_useState1","_useState10","exerciseTimeElapsed","setExerciseTimeElapsed","_useState11","_useState12","showCompletionModal","setShowCompletionModal","_useState13","_useState14","sessionNotes","_useState15","_useState16","setPainLevel","_useState17","_useState18","setBorgScale","intervalRef","useRef","restIntervalRef","phaseExercises","rest_time_seconds","assigned_duration_seconds","clearInterval","current","setInterval","prev","handleSetComplete","handleExerciseComplete","exerciseData","sets_completed","reps_completed","duration_seconds","pain_level","borg_scale","formatTime","seconds","secs","floor","padStart","getProgressPercentage","exerciseType","includes","Surface","Portal","Modal","visible","onDismiss","contentContainerStyle","scale","goBack","AIAnalysisDisplay","analysisResult","_ref$isAnalyzing","isAnalyzing","Animated","Value","scoreAnimation","fadeAnimation","timing","toValue","overallScore","useNativeDriver","start","analyzingContent","analyzingHeader","source","analyzingText","indeterminate","loadingBar","getFeedbackColor","getScoreColor","score","opacity","header","headerLeft","headerTitle","feedbackChip","feedback","getFeedbackIcon","scoreSection","scoreLabel","scoreContainer","scoreCircle","scoreText","scoreUnit","scoreDetails","scoreItem","scoreItemLabel","scoreItemValue","kneeInToeOutScore","scoreProgress","alignmentSection","sectionTitle","alignmentGrid","alignmentItem","alignmentLabel","alignmentChip","getAlignmentColor","alignment","leftKneeAlignment","getAlignmentText","rightKneeAlignment","ratioContainer","ratioLabel","kneeAnkleRatio","ratioNote","feedbackSection","feedbackMessage","suggestions","suggestionsSection","suggestion","titleStyle","suggestionText","suggestionItem","toLocaleTimeString","marginLeft","borderLeftWidth","borderLeftColor","analysisData","overall_score","knee_stability_score","movement_quality_score","symmetry_score","balance_score","issues","issue","severity","recommendation","onRetry","defaultProps","_Dimensions$get","screenWidth","screenHeight","cameraContainer","camera","cameraOverlay","cameraHeader","exerciseChip","exerciseChipText","flipButton","recordingIndicator","alignSelf","recordingDot","recordingText","cameraControls","paddingBottom","stopButton","analysisContainer","currentAnalysis","summaryCard","summaryTitle","summaryStats","statItem","statValue","statLabel","improvementsSection","improvementsTitle","improvementText","summaryActions","retryButton","completeButton","historyCard","historyTitle","historyDivider","historyItem","historyHeader","historyTime","historyChip","historyFeedback","historyItemDivider","errorCard","errorTitle","errorDescription","errorButton","_route$params","_route$params2","route","hasPermission","setHasPermission","Camera","Type","front","cameraType","setCameraType","isRecording","setIsRecording","setIsAnalyzing","setCurrentAnalysis","sessionSummary","setSessionSummary","analysisHistory","setAnalysisHistory","isInitialized","setIsInitialized","cameraRef","analysisIntervalRef","cameraStatus","requestCameraPermissionsAsync","mediaLibraryStatus","MediaLibrary","requestPermissionsAsync","initialized","aiAnalysisService","initializeModel","console","startAnalysis","resetAnalysis","dummyKeypoints","generateDummyKeypoints","result","analyzeFrame","concat","_toConsumableArray","keypoints","baseX","baseY","i","x","random","y","ref","ratio","back","summary","getSessionSummary","totalFrames","averageScore","issueCount","buttonColor","improvements","improvement","analysis","min","alertCard","alertContent","alertText","tabNavigation","tabButtons","tabButton","tabBadge","position","top","tabContent","staffCard","staffItem","avatarContainer","statusIndicator","bottom","contactInfo","hospitalName","contactText","contactCard","emergencyContact","emergencyTitle","emergencyPhone","emergencyNote","teamInfoCard","teamDescription","rolesList","roleItem","borderBottomWidth","borderBottomColor","roleTitle","roleDescription","shareOptionsCard","shareButtons","gap","shareButton","reportsCard","reportItem","reportHeader","reportTitle","reportDate","reportRecipients","reportActions","autoShareCard","settingItem","settingLabel","settingsCard","settingListItem","handleTabChange","tab","handleShareReport","reportType","_medicalStaff$primary6","_medicalStaff$physiot","getReportTitle","renderMedicalTeamTab","Avatar","nurse","specialist","dateTime","month","day","hour","minute","Switch","onValueChange","renderTabContent","goalCard","goalContent","goalText","goalProgress","goalPercentage","statsCard","statsGrid","statsDivider","averageStats","averageStat","averageLabel","averageValue","averageNumber","averageUnit","sessionsCard","sessionItem","sessionHeader","sessionDate","painChip","sessionDetails","sessionDetail","sessionDivider","legendCard","legendSection","legendTitle","legendItems","legendItem","legendColor","legendText","getPainLevelColor","profileCard","profileHeader","avatarText","profileInfo","patientName","infoRow","infoLabel","infoValue","infoDivider","marginVertical","menuItem","appInfoCard","disclaimer","fontStyle","logoutContainer","_user$name","formatDate","dateString","charAt","dateOfBirth","gender","props","textColor","returnToSportCriteria","evaluationPeriod","criteria","required","measurementMethod","passingCriteria","weight","getOverallEvaluation","results","allCriteria","flatMap","cat","totalWeight","criterion","achievedWeight","passedCount","totalCount","passed","weightedScore","passRate","totalCriteria","passedCriteria","canReturnToSport","getReturnRecommendation","nextSteps","returnPhase","categoryImportance","medical_clearance","importance","mustPass","physical_function","functional_tests","movement_quality","psychological_readiness","sport_specific","injury_prevention","screenTitle","screenDescription","periodChip","resultCard","resultHeader","resultTitle","resultScores","scoreChip","progressSection","recommendationSection","recommendationTitle","recommendationMessage","nextStepsTitle","nextStepItem","returnButton","categoryInfo","categoryDescription","categoryBadges","importanceChip","progressBadge","importanceDescription","criteriaList","criteriaItem","criteriaIcon","criteriaEmoji","criteriaActions","evaluationButtons","miniButton","maxHeight","modalScroll","modalHeader","modalContent","modalDescription","detailSectionTitle","detailText","passingCriteriaText","modalEvaluation","borderTopWidth","borderTopColor","modalEvaluationTitle","modalEvaluationButtons","modalEvalButton","evaluationResults","setEvaluationResults","showDetailModal","setShowDetailModal","selectedCriteria","setSelectedCriteria","overallResult","setOverallResult","initialResults","evaluated","handleCriteriaEvaluation","criteriaId","undefined","showCriteriaDetail","getStatusColor","getStatusIcon","getImportanceColor","_categoryImportance$c","getImportanceLabel","_categoryImportance$c2","getResultColor","step","renderOverallResult","category","percentage","getCategoryProgress","runningStartCriteria","getEvaluationResult","canStartRunning","getRecommendation","criteriaDetails","rationale","tips","pain_swelling","knee_extension","knee_flexion","quadriceps_strength","single_leg_squat","resultChip","startRunningButton","criteriaCard","criteriaHeader","criteriaInfo","criteriaText","criteriaCategory","textTransform","criteriaTitle","criteriaDescription","measurementInfo","measurementLabel","measurementText","passingLabel","passingText","evalButton","_criteriaDetails$sele","_criteriaDetails$sele2","getRecommendationColor","timelineCard","timelineTitle","timeline","timelineItem","timelineMarker","timelineContent","timelineItemTitle","timelineItemDesc","timelineLine","checkpointCard","checkpointHeader","checkpointInfo","checkpointIcon","checkpointText","checkpointTitle","checkpointSubtitle","checkpointDescription","checkpointDetails","detailRow","detailLabel","detailValue","timelineChip","evaluationButton","modalDetailSection","modalDetailTitle","modalDetailText","overviewSection","overviewTitle","overviewItem","paddingLeft","overviewIcon","overviewText","overviewItemTitle","overviewItemCriteria","overviewCategory","overviewCategoryTitle","overviewCategoryDesc","overviewCategoryCount","checkpoint","selectedCheckpoint","setSelectedCheckpoint","evaluationCheckpoints","nextStep","screen","handleCheckpointPress","showCheckpointDetail","ErrorBoundary","_React$Component","_this","_classCallCheck","handleRetry","setState","hasError","errorInfo","handleReportError","_this$state$error","_this$state$error2","stack","_inherits","_createClass","key","this","buttonContainer","button","onReset","React","maxWidth","shadowColor","shadowOffset","shadowOpacity","shadowRadius","debugContainer","debugTitle","debugText","Stack","createStackNavigator","App","ReduxProvider","PaperProvider","NavigationContainer","Navigator","initialRouteName","screenOptions","headerStyle","headerTintColor","headerTitleStyle","Screen","component","options","headerShown","ExerciseScreen","ExerciseMenuScreen","ExerciseSessionScreen","AIAnalysisScreen","MedicalCollaborationScreen","ProgressScreen","ProfileScreen","ReturnToSportScreen","RunningCriteriaScreen","EvaluationCheckpointsScreen","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","j","every","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}