{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/shota/Desktop/\\u6587\\u732E\\u691C\\u7D22/acl-rehab-app/mobile/src/screens/ExerciseSessionScreen.js\",\n  _this = this;\nimport React, { useState, useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Text, Card, Button, IconButton, ProgressBar, Chip, Divider, Surface, Portal, Modal } from 'react-native-paper';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { endLocalSession, completeExercise, updateSessionInfo, pauseSession, resumeSession, setCurrentExercise } from \"../store/slices/exerciseSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width;\nvar ExerciseSessionScreen = function ExerciseSessionScreen(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    user = _useSelector.user,\n    token = _useSelector.token;\n  var _useSelector2 = useSelector(function (state) {\n      return state.exercise;\n    }),\n    currentSession = _useSelector2.currentSession,\n    patientPlan = _useSelector2.patientPlan,\n    currentPhase = _useSelector2.currentPhase,\n    exerciseProgress = _useSelector2.exerciseProgress;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentExerciseIndex = _useState2[0],\n    setCurrentExerciseIndex = _useState2[1];\n  var _useState3 = useState(1),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentSet = _useState4[0],\n    setCurrentSet = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    currentRep = _useState6[0],\n    setCurrentRep = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isResting = _useState8[0],\n    setIsResting = _useState8[1];\n  var _useState9 = useState(0),\n    _useState0 = _slicedToArray(_useState9, 2),\n    restTimeLeft = _useState0[0],\n    setRestTimeLeft = _useState0[1];\n  var _useState1 = useState(0),\n    _useState10 = _slicedToArray(_useState1, 2),\n    exerciseTimeElapsed = _useState10[0],\n    setExerciseTimeElapsed = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    showCompletionModal = _useState12[0],\n    setShowCompletionModal = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    sessionNotes = _useState14[0],\n    setSessionNotes = _useState14[1];\n  var _useState15 = useState(0),\n    _useState16 = _slicedToArray(_useState15, 2),\n    painLevel = _useState16[0],\n    setPainLevel = _useState16[1];\n  var _useState17 = useState(6),\n    _useState18 = _slicedToArray(_useState17, 2),\n    borgScale = _useState18[0],\n    setBorgScale = _useState18[1];\n  var intervalRef = useRef(null);\n  var restIntervalRef = useRef(null);\n  var exercises = token ? patientPlan : getDummyExercisePlan(currentPhase);\n  var currentExercise = exercises[currentExerciseIndex];\n  var getDummyExercisePlan = function getDummyExercisePlan(phase) {\n    var phaseExercises = {\n      'pre_surgery': [{\n        id: '1',\n        exercise_name: '大腿四頭筋セッティング',\n        description: '膝を伸ばした状態で太ももの前の筋肉を収縮',\n        category_name: '筋力維持',\n        assigned_sets: 3,\n        assigned_reps: 15,\n        difficulty_level: 'beginner',\n        requires_ai_analysis: false,\n        rest_time_seconds: 30,\n        assigned_duration_seconds: 5\n      }, {\n        id: '2',\n        exercise_name: '立ち上がり練習',\n        description: '椅子からの立ち上がり動作の練習',\n        category_name: '基本動作訓練',\n        assigned_sets: 3,\n        assigned_reps: 10,\n        difficulty_level: 'beginner',\n        requires_ai_analysis: false,\n        rest_time_seconds: 60,\n        assigned_duration_seconds: 0\n      }],\n      'phase_3_2': [{\n        id: '5',\n        exercise_name: 'ミニスクワット',\n        description: '膝屈曲30度までの浅いスクワット',\n        category_name: '筋力強化',\n        assigned_sets: 3,\n        assigned_reps: 10,\n        difficulty_level: 'intermediate',\n        requires_ai_analysis: true,\n        rest_time_seconds: 60,\n        assigned_duration_seconds: 3\n      }]\n    };\n    return phaseExercises[phase] || phaseExercises['pre_surgery'];\n  };\n  useEffect(function () {\n    if (currentExercise) {\n      dispatch(setCurrentExercise(currentExercise));\n    }\n  }, [currentExercise, dispatch]);\n  useEffect(function () {\n    if (!isResting && !(currentSession != null && currentSession.isPaused)) {\n      intervalRef.current = setInterval(function () {\n        setExerciseTimeElapsed(function (prev) {\n          return prev + 1;\n        });\n      }, 1000);\n    } else {\n      clearInterval(intervalRef.current);\n    }\n    return function () {\n      return clearInterval(intervalRef.current);\n    };\n  }, [isResting, currentSession == null ? void 0 : currentSession.isPaused]);\n  useEffect(function () {\n    if (isResting && restTimeLeft > 0) {\n      restIntervalRef.current = setInterval(function () {\n        setRestTimeLeft(function (prev) {\n          if (prev <= 1) {\n            setIsResting(false);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      clearInterval(restIntervalRef.current);\n    }\n    return function () {\n      return clearInterval(restIntervalRef.current);\n    };\n  }, [isResting, restTimeLeft]);\n  var handleNextRep = function handleNextRep() {\n    if (currentRep < currentExercise.assigned_reps) {\n      setCurrentRep(function (prev) {\n        return prev + 1;\n      });\n    } else {\n      handleSetComplete();\n    }\n  };\n  var handleSetComplete = function handleSetComplete() {\n    if (currentSet < currentExercise.assigned_sets) {\n      setCurrentSet(function (prev) {\n        return prev + 1;\n      });\n      setCurrentRep(0);\n      var restTime = currentExercise.rest_time_seconds || 30;\n      setRestTimeLeft(restTime);\n      setIsResting(true);\n    } else {\n      handleExerciseComplete();\n    }\n  };\n  var handleExerciseComplete = function handleExerciseComplete() {\n    var exerciseData = {\n      exerciseId: currentExercise.id,\n      sets_completed: currentExercise.assigned_sets,\n      reps_completed: currentExercise.assigned_reps * currentExercise.assigned_sets,\n      duration_seconds: exerciseTimeElapsed,\n      pain_level: painLevel,\n      borg_scale: borgScale,\n      notes: sessionNotes\n    };\n    dispatch(completeExercise({\n      exerciseId: currentExercise.id,\n      sessionData: exerciseData\n    }));\n    if (currentExerciseIndex < exercises.length - 1) {\n      setCurrentExerciseIndex(function (prev) {\n        return prev + 1;\n      });\n      setCurrentSet(1);\n      setCurrentRep(0);\n      setExerciseTimeElapsed(0);\n      setPainLevel(0);\n      setBorgScale(6);\n    } else {\n      setShowCompletionModal(true);\n    }\n  };\n  var handleSessionComplete = function handleSessionComplete() {\n    dispatch(updateSessionInfo({\n      painLevel: painLevel,\n      borgScale: borgScale,\n      notes: sessionNotes\n    }));\n    dispatch(endLocalSession());\n    Alert.alert('セッション完了', 'お疲れ様でした！トレーニングが完了しました。', [{\n      text: 'OK',\n      onPress: function onPress() {\n        return navigation.navigate('Home');\n      }\n    }]);\n  };\n  var handlePauseResume = function handlePauseResume() {\n    if (currentSession != null && currentSession.isPaused) {\n      dispatch(resumeSession());\n    } else {\n      dispatch(pauseSession());\n    }\n  };\n  var handleSkipRest = function handleSkipRest() {\n    setIsResting(false);\n    setRestTimeLeft(0);\n  };\n  var formatTime = function formatTime(seconds) {\n    var mins = Math.floor(seconds / 60);\n    var secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  var getProgressPercentage = function getProgressPercentage() {\n    var totalExercises = exercises.length;\n    var completedExercises = currentExerciseIndex;\n    var currentExerciseProgress = currentSet / (currentExercise == null ? void 0 : currentExercise.assigned_sets) || 0;\n    return (completedExercises + currentExerciseProgress) / totalExercises * 100;\n  };\n  if (!currentSession || !currentExercise) {\n    return _jsxDEV(View, {\n      style: styles.errorContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.errorText,\n        children: \"\\u30BB\\u30C3\\u30B7\\u30E7\\u30F3\\u304C\\u898B\\u3064\\u304B\\u308A\\u307E\\u305B\\u3093\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, _this), _jsxDEV(Button, {\n        mode: \"contained\",\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        children: \"\\u623B\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, _this);\n  }\n  return _jsxDEV(ScrollView, {\n    style: styles.container,\n    children: [_jsxDEV(Card, {\n      style: styles.progressCard,\n      children: _jsxDEV(Card.Content, {\n        children: [_jsxDEV(Text, {\n          style: styles.progressTitle,\n          children: \"\\u30BB\\u30C3\\u30B7\\u30E7\\u30F3\\u9032\\u6357\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, _this), _jsxDEV(ProgressBar, {\n          progress: getProgressPercentage() / 100,\n          color: \"#4CAF50\",\n          style: styles.progressBar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.progressText,\n          children: [currentExerciseIndex + 1, \" / \", exercises.length, \" \\u904B\\u52D5\\u5B8C\\u4E86\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, _this), _jsxDEV(Card, {\n      style: styles.exerciseCard,\n      children: _jsxDEV(Card.Content, {\n        children: [_jsxDEV(View, {\n          style: styles.exerciseHeader,\n          children: [_jsxDEV(Text, {\n            style: styles.exerciseName,\n            children: currentExercise.exercise_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, _this), currentExercise.requires_ai_analysis && _jsxDEV(Chip, {\n            icon: \"camera\",\n            mode: \"outlined\",\n            compact: true,\n            onPress: function onPress() {\n              return navigation.navigate('AIAnalysis', {\n                exerciseType: currentExercise.exercise_name.includes('スクワット') ? 'squat' : 'general',\n                exerciseName: currentExercise.exercise_name\n              });\n            },\n            children: \"AI\\u5206\\u6790\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.exerciseDescription,\n          children: currentExercise.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.exerciseCategory,\n          children: [\"\\u30AB\\u30C6\\u30B4\\u30EA\\u30FC: \", currentExercise.category_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, _this), isResting && _jsxDEV(Surface, {\n      style: styles.restSurface,\n      children: [_jsxDEV(Text, {\n        style: styles.restTitle,\n        children: \"\\u4F11\\u61A9\\u4E2D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, _this), _jsxDEV(Text, {\n        style: styles.restTime,\n        children: formatTime(restTimeLeft)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, _this), _jsxDEV(Button, {\n        mode: \"outlined\",\n        onPress: handleSkipRest,\n        children: \"\\u4F11\\u61A9\\u3092\\u30B9\\u30AD\\u30C3\\u30D7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }, _this), !isResting && _jsxDEV(Card, {\n      style: styles.setCard,\n      children: _jsxDEV(Card.Content, {\n        children: [_jsxDEV(View, {\n          style: styles.setHeader,\n          children: [_jsxDEV(Text, {\n            style: styles.setTitle,\n            children: [\"\\u30BB\\u30C3\\u30C8 \", currentSet, \" / \", currentExercise.assigned_sets]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, _this), _jsxDEV(Text, {\n            style: styles.repTitle,\n            children: [currentRep, \" / \", currentExercise.assigned_reps, \" \\u56DE\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, _this), _jsxDEV(View, {\n          style: styles.setProgress,\n          children: _jsxDEV(ProgressBar, {\n            progress: currentRep / currentExercise.assigned_reps,\n            color: \"#2196F3\",\n            style: styles.setProgressBar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, _this), _jsxDEV(View, {\n          style: styles.timerContainer,\n          children: [_jsxDEV(Text, {\n            style: styles.timerLabel,\n            children: \"\\u904B\\u52D5\\u6642\\u9593\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, _this), _jsxDEV(Text, {\n            style: styles.timerValue,\n            children: formatTime(exerciseTimeElapsed)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, _this), _jsxDEV(View, {\n          style: styles.controlButtons,\n          children: _jsxDEV(Button, {\n            mode: \"contained\",\n            onPress: handleNextRep,\n            style: styles.nextButton,\n            disabled: currentSession == null ? void 0 : currentSession.isPaused,\n            children: currentRep < currentExercise.assigned_reps ? '次の回数' : 'セット完了'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }, _this), _jsxDEV(Card, {\n      style: styles.controlCard,\n      children: _jsxDEV(Card.Content, {\n        children: _jsxDEV(View, {\n          style: styles.controlRow,\n          children: [_jsxDEV(Button, {\n            mode: currentSession != null && currentSession.isPaused ? \"contained\" : \"outlined\",\n            onPress: handlePauseResume,\n            style: styles.controlButton,\n            children: currentSession != null && currentSession.isPaused ? '再開' : '一時停止'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, _this), _jsxDEV(Button, {\n            mode: \"outlined\",\n            onPress: function onPress() {\n              return setShowCompletionModal(true);\n            },\n            style: styles.controlButton,\n            children: \"\\u30BB\\u30C3\\u30B7\\u30E7\\u30F3\\u7D42\\u4E86\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, _this), _jsxDEV(Portal, {\n      children: _jsxDEV(Modal, {\n        visible: showCompletionModal,\n        onDismiss: function onDismiss() {\n          return setShowCompletionModal(false);\n        },\n        contentContainerStyle: styles.modalContainer,\n        children: [_jsxDEV(Text, {\n          style: styles.modalTitle,\n          children: \"\\u30BB\\u30C3\\u30B7\\u30E7\\u30F3\\u5B8C\\u4E86\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.modalText,\n          children: \"\\u304A\\u75B2\\u308C\\u69D8\\u3067\\u3057\\u305F\\uFF01\\u4ECA\\u65E5\\u306E\\u30C8\\u30EC\\u30FC\\u30CB\\u30F3\\u30B0\\u306F\\u3069\\u3046\\u3067\\u3057\\u305F\\u304B\\uFF1F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, _this), _jsxDEV(Divider, {\n          style: styles.modalDivider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.ratingLabel,\n          children: \"\\u75DB\\u307F\\u30EC\\u30D9\\u30EB (0-10)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, _this), _jsxDEV(View, {\n          style: styles.ratingButtons,\n          children: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(function (level) {\n            return _jsxDEV(Button, {\n              mode: painLevel === level ? \"contained\" : \"outlined\",\n              onPress: function onPress() {\n                return setPainLevel(level);\n              },\n              style: styles.ratingButton,\n              compact: true,\n              children: level\n            }, level, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.ratingLabel,\n          children: \"\\u75B2\\u52B4\\u5EA6 (6-20)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, _this), _jsxDEV(View, {\n          style: styles.ratingButtons,\n          children: [6, 8, 10, 12, 14, 16, 18, 20].map(function (scale) {\n            return _jsxDEV(Button, {\n              mode: borgScale === scale ? \"contained\" : \"outlined\",\n              onPress: function onPress() {\n                return setBorgScale(scale);\n              },\n              style: styles.ratingButton,\n              compact: true,\n              children: scale\n            }, scale, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, _this), _jsxDEV(View, {\n          style: styles.modalButtons,\n          children: [_jsxDEV(Button, {\n            mode: \"outlined\",\n            onPress: function onPress() {\n              return setShowCompletionModal(false);\n            },\n            style: styles.modalButton,\n            children: \"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, _this), _jsxDEV(Button, {\n            mode: \"contained\",\n            onPress: handleSessionComplete,\n            style: styles.modalButton,\n            children: \"\\u5B8C\\u4E86\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  errorText: {\n    fontSize: 18,\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  progressCard: {\n    margin: 16,\n    elevation: 2\n  },\n  progressTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 12\n  },\n  progressBar: {\n    height: 8,\n    borderRadius: 4,\n    marginBottom: 8\n  },\n  progressText: {\n    fontSize: 14,\n    textAlign: 'center',\n    color: '#666'\n  },\n  exerciseCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2\n  },\n  exerciseHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  exerciseName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    flex: 1\n  },\n  exerciseDescription: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 4\n  },\n  exerciseCategory: {\n    fontSize: 12,\n    color: '#888'\n  },\n  restSurface: {\n    margin: 16,\n    padding: 24,\n    borderRadius: 12,\n    alignItems: 'center',\n    backgroundColor: '#E3F2FD',\n    elevation: 1\n  },\n  restTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#1976D2',\n    marginBottom: 8\n  },\n  restTime: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    color: '#1976D2',\n    marginBottom: 16\n  },\n  setCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2\n  },\n  setHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16\n  },\n  setTitle: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  repTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#2196F3'\n  },\n  setProgress: {\n    marginBottom: 16\n  },\n  setProgressBar: {\n    height: 6,\n    borderRadius: 3\n  },\n  timerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  timerLabel: {\n    fontSize: 14,\n    color: '#666'\n  },\n  timerValue: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333'\n  },\n  controlButtons: {\n    alignItems: 'center'\n  },\n  nextButton: {\n    width: '100%',\n    paddingVertical: 8\n  },\n  controlCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2\n  },\n  controlRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  controlButton: {\n    flex: 1,\n    marginHorizontal: 4\n  },\n  modalContainer: {\n    backgroundColor: 'white',\n    margin: 20,\n    padding: 20,\n    borderRadius: 12\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 16\n  },\n  modalText: {\n    fontSize: 14,\n    textAlign: 'center',\n    color: '#666',\n    marginBottom: 20\n  },\n  modalDivider: {\n    marginBottom: 20\n  },\n  ratingLabel: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 8\n  },\n  ratingButtons: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginBottom: 16\n  },\n  ratingButton: {\n    marginRight: 4,\n    marginBottom: 4,\n    minWidth: 40\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 20\n  },\n  modalButton: {\n    flex: 1,\n    marginHorizontal: 8\n  }\n});\nexport default ExerciseSessionScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","StyleSheet","ScrollView","Alert","Dimensions","Text","Card","Button","IconButton","ProgressBar","Chip","Divider","Surface","Portal","Modal","useSelector","useDispatch","endLocalSession","completeExercise","updateSessionInfo","pauseSession","resumeSession","setCurrentExercise","jsxDEV","_jsxDEV","_Dimensions$get","get","width","ExerciseSessionScreen","_ref","navigation","dispatch","_useSelector","state","auth","user","token","_useSelector2","exercise","currentSession","patientPlan","currentPhase","exerciseProgress","_useState","_useState2","_slicedToArray","currentExerciseIndex","setCurrentExerciseIndex","_useState3","_useState4","currentSet","setCurrentSet","_useState5","_useState6","currentRep","setCurrentRep","_useState7","_useState8","isResting","setIsResting","_useState9","_useState0","restTimeLeft","setRestTimeLeft","_useState1","_useState10","exerciseTimeElapsed","setExerciseTimeElapsed","_useState11","_useState12","showCompletionModal","setShowCompletionModal","_useState13","_useState14","sessionNotes","setSessionNotes","_useState15","_useState16","painLevel","setPainLevel","_useState17","_useState18","borgScale","setBorgScale","intervalRef","restIntervalRef","exercises","getDummyExercisePlan","currentExercise","phase","phaseExercises","id","exercise_name","description","category_name","assigned_sets","assigned_reps","difficulty_level","requires_ai_analysis","rest_time_seconds","assigned_duration_seconds","isPaused","current","setInterval","prev","clearInterval","handleNextRep","handleSetComplete","restTime","handleExerciseComplete","exerciseData","exerciseId","sets_completed","reps_completed","duration_seconds","pain_level","borg_scale","notes","sessionData","length","handleSessionComplete","alert","text","onPress","navigate","handlePauseResume","handleSkipRest","formatTime","seconds","mins","Math","floor","secs","toString","padStart","getProgressPercentage","totalExercises","completedExercises","currentExerciseProgress","style","styles","errorContainer","children","errorText","fileName","_jsxFileName","lineNumber","columnNumber","_this","mode","goBack","container","progressCard","Content","progressTitle","progress","color","progressBar","progressText","exerciseCard","exerciseHeader","exerciseName","icon","compact","exerciseType","includes","exerciseDescription","exerciseCategory","restSurface","restTitle","setCard","setHeader","setTitle","repTitle","setProgress","setProgressBar","timerContainer","timerLabel","timerValue","controlButtons","nextButton","disabled","controlCard","controlRow","controlButton","visible","onDismiss","contentContainerStyle","modalContainer","modalTitle","modalText","modalDivider","ratingLabel","ratingButtons","map","level","ratingButton","scale","modalButtons","modalButton","create","flex","backgroundColor","justifyContent","alignItems","padding","fontSize","marginBottom","textAlign","margin","elevation","fontWeight","height","borderRadius","marginTop","flexDirection","paddingVertical","marginHorizontal","flexWrap","marginRight","minWidth"],"sources":["/Users/shota/Desktop/文献検索/acl-rehab-app/mobile/src/screens/ExerciseSessionScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  View,\n  StyleSheet,\n  ScrollView,\n  Alert,\n  Dimensions,\n} from 'react-native';\nimport {\n  Text,\n  Card,\n  Button,\n  IconButton,\n  ProgressBar,\n  Chip,\n  Divider,\n  Surface,\n  Portal,\n  Modal,\n} from 'react-native-paper';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  endLocalSession,\n  completeExercise,\n  updateSessionInfo,\n  pauseSession,\n  resumeSession,\n  setCurrentExercise,\n} from '../store/slices/exerciseSlice';\n\nconst { width } = Dimensions.get('window');\n\nconst ExerciseSessionScreen = ({ navigation }) => {\n  const dispatch = useDispatch();\n  const { user, token } = useSelector((state) => state.auth);\n  const { \n    currentSession, \n    patientPlan, \n    currentPhase,\n    exerciseProgress \n  } = useSelector((state) => state.exercise);\n\n  const [currentExerciseIndex, setCurrentExerciseIndex] = useState(0);\n  const [currentSet, setCurrentSet] = useState(1);\n  const [currentRep, setCurrentRep] = useState(0);\n  const [isResting, setIsResting] = useState(false);\n  const [restTimeLeft, setRestTimeLeft] = useState(0);\n  const [exerciseTimeElapsed, setExerciseTimeElapsed] = useState(0);\n  const [showCompletionModal, setShowCompletionModal] = useState(false);\n  const [sessionNotes, setSessionNotes] = useState('');\n  const [painLevel, setPainLevel] = useState(0);\n  const [borgScale, setBorgScale] = useState(6);\n\n  const intervalRef = useRef(null);\n  const restIntervalRef = useRef(null);\n\n  // 使用するプランを取得（APIまたはダミーデータ）\n  const exercises = token ? patientPlan : getDummyExercisePlan(currentPhase);\n  const currentExercise = exercises[currentExerciseIndex];\n\n  // ダミーデータ（ExerciseMenuScreenと同じ）\n  const getDummyExercisePlan = (phase) => {\n    const phaseExercises = {\n      'pre_surgery': [\n        {\n          id: '1',\n          exercise_name: '大腿四頭筋セッティング',\n          description: '膝を伸ばした状態で太ももの前の筋肉を収縮',\n          category_name: '筋力維持',\n          assigned_sets: 3,\n          assigned_reps: 15,\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          rest_time_seconds: 30,\n          assigned_duration_seconds: 5,\n        },\n        {\n          id: '2',\n          exercise_name: '立ち上がり練習',\n          description: '椅子からの立ち上がり動作の練習',\n          category_name: '基本動作訓練',\n          assigned_sets: 3,\n          assigned_reps: 10,\n          difficulty_level: 'beginner',\n          requires_ai_analysis: false,\n          rest_time_seconds: 60,\n          assigned_duration_seconds: 0,\n        },\n      ],\n      'phase_3_2': [\n        {\n          id: '5',\n          exercise_name: 'ミニスクワット',\n          description: '膝屈曲30度までの浅いスクワット',\n          category_name: '筋力強化',\n          assigned_sets: 3,\n          assigned_reps: 10,\n          difficulty_level: 'intermediate',\n          requires_ai_analysis: true,\n          rest_time_seconds: 60,\n          assigned_duration_seconds: 3,\n        },\n      ],\n    };\n    \n    return phaseExercises[phase] || phaseExercises['pre_surgery'];\n  };\n\n  useEffect(() => {\n    if (currentExercise) {\n      dispatch(setCurrentExercise(currentExercise));\n    }\n  }, [currentExercise, dispatch]);\n\n  useEffect(() => {\n    // 運動時間カウンター\n    if (!isResting && !currentSession?.isPaused) {\n      intervalRef.current = setInterval(() => {\n        setExerciseTimeElapsed(prev => prev + 1);\n      }, 1000);\n    } else {\n      clearInterval(intervalRef.current);\n    }\n\n    return () => clearInterval(intervalRef.current);\n  }, [isResting, currentSession?.isPaused]);\n\n  useEffect(() => {\n    // 休憩時間カウンター\n    if (isResting && restTimeLeft > 0) {\n      restIntervalRef.current = setInterval(() => {\n        setRestTimeLeft(prev => {\n          if (prev <= 1) {\n            setIsResting(false);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      clearInterval(restIntervalRef.current);\n    }\n\n    return () => clearInterval(restIntervalRef.current);\n  }, [isResting, restTimeLeft]);\n\n  const handleNextRep = () => {\n    if (currentRep < currentExercise.assigned_reps) {\n      setCurrentRep(prev => prev + 1);\n    } else {\n      // セット完了\n      handleSetComplete();\n    }\n  };\n\n  const handleSetComplete = () => {\n    if (currentSet < currentExercise.assigned_sets) {\n      // 次のセットへ\n      setCurrentSet(prev => prev + 1);\n      setCurrentRep(0);\n      \n      // 休憩開始\n      const restTime = currentExercise.rest_time_seconds || 30;\n      setRestTimeLeft(restTime);\n      setIsResting(true);\n    } else {\n      // 運動完了\n      handleExerciseComplete();\n    }\n  };\n\n  const handleExerciseComplete = () => {\n    const exerciseData = {\n      exerciseId: currentExercise.id,\n      sets_completed: currentExercise.assigned_sets,\n      reps_completed: currentExercise.assigned_reps * currentExercise.assigned_sets,\n      duration_seconds: exerciseTimeElapsed,\n      pain_level: painLevel,\n      borg_scale: borgScale,\n      notes: sessionNotes,\n    };\n\n    dispatch(completeExercise({\n      exerciseId: currentExercise.id,\n      sessionData: exerciseData,\n    }));\n\n    // 次の運動へ\n    if (currentExerciseIndex < exercises.length - 1) {\n      setCurrentExerciseIndex(prev => prev + 1);\n      setCurrentSet(1);\n      setCurrentRep(0);\n      setExerciseTimeElapsed(0);\n      setPainLevel(0);\n      setBorgScale(6);\n    } else {\n      // 全運動完了\n      setShowCompletionModal(true);\n    }\n  };\n\n  const handleSessionComplete = () => {\n    dispatch(updateSessionInfo({\n      painLevel,\n      borgScale,\n      notes: sessionNotes,\n    }));\n    dispatch(endLocalSession());\n    \n    Alert.alert(\n      'セッション完了',\n      'お疲れ様でした！トレーニングが完了しました。',\n      [\n        { text: 'OK', onPress: () => navigation.navigate('Home') }\n      ]\n    );\n  };\n\n  const handlePauseResume = () => {\n    if (currentSession?.isPaused) {\n      dispatch(resumeSession());\n    } else {\n      dispatch(pauseSession());\n    }\n  };\n\n  const handleSkipRest = () => {\n    setIsResting(false);\n    setRestTimeLeft(0);\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const getProgressPercentage = () => {\n    const totalExercises = exercises.length;\n    const completedExercises = currentExerciseIndex;\n    const currentExerciseProgress = currentSet / currentExercise?.assigned_sets || 0;\n    return ((completedExercises + currentExerciseProgress) / totalExercises) * 100;\n  };\n\n  if (!currentSession || !currentExercise) {\n    return (\n      <View style={styles.errorContainer}>\n        <Text style={styles.errorText}>セッションが見つかりません</Text>\n        <Button mode=\"contained\" onPress={() => navigation.goBack()}>\n          戻る\n        </Button>\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView style={styles.container}>\n      {/* セッション進捗 */}\n      <Card style={styles.progressCard}>\n        <Card.Content>\n          <Text style={styles.progressTitle}>セッション進捗</Text>\n          <ProgressBar \n            progress={getProgressPercentage() / 100} \n            color=\"#4CAF50\"\n            style={styles.progressBar}\n          />\n          <Text style={styles.progressText}>\n            {currentExerciseIndex + 1} / {exercises.length} 運動完了\n          </Text>\n        </Card.Content>\n      </Card>\n\n      {/* 現在の運動情報 */}\n      <Card style={styles.exerciseCard}>\n        <Card.Content>\n          <View style={styles.exerciseHeader}>\n            <Text style={styles.exerciseName}>{currentExercise.exercise_name}</Text>\n            {currentExercise.requires_ai_analysis && (\n              <Chip \n                icon=\"camera\" \n                mode=\"outlined\" \n                compact\n                onPress={() => navigation.navigate('AIAnalysis', {\n                  exerciseType: currentExercise.exercise_name.includes('スクワット') ? 'squat' : 'general',\n                  exerciseName: currentExercise.exercise_name\n                })}\n              >\n                AI分析\n              </Chip>\n            )}\n          </View>\n          <Text style={styles.exerciseDescription}>\n            {currentExercise.description}\n          </Text>\n          <Text style={styles.exerciseCategory}>\n            カテゴリー: {currentExercise.category_name}\n          </Text>\n        </Card.Content>\n      </Card>\n\n      {/* 休憩中の表示 */}\n      {isResting && (\n        <Surface style={styles.restSurface}>\n          <Text style={styles.restTitle}>休憩中</Text>\n          <Text style={styles.restTime}>{formatTime(restTimeLeft)}</Text>\n          <Button mode=\"outlined\" onPress={handleSkipRest}>\n            休憩をスキップ\n          </Button>\n        </Surface>\n      )}\n\n      {/* セット・レップ情報 */}\n      {!isResting && (\n        <Card style={styles.setCard}>\n          <Card.Content>\n            <View style={styles.setHeader}>\n              <Text style={styles.setTitle}>\n                セット {currentSet} / {currentExercise.assigned_sets}\n              </Text>\n              <Text style={styles.repTitle}>\n                {currentRep} / {currentExercise.assigned_reps} 回\n              </Text>\n            </View>\n            \n            <View style={styles.setProgress}>\n              <ProgressBar \n                progress={currentRep / currentExercise.assigned_reps} \n                color=\"#2196F3\"\n                style={styles.setProgressBar}\n              />\n            </View>\n\n            <View style={styles.timerContainer}>\n              <Text style={styles.timerLabel}>運動時間</Text>\n              <Text style={styles.timerValue}>{formatTime(exerciseTimeElapsed)}</Text>\n            </View>\n\n            <View style={styles.controlButtons}>\n              <Button\n                mode=\"contained\"\n                onPress={handleNextRep}\n                style={styles.nextButton}\n                disabled={currentSession?.isPaused}\n              >\n                {currentRep < currentExercise.assigned_reps ? '次の回数' : 'セット完了'}\n              </Button>\n            </View>\n          </Card.Content>\n        </Card>\n      )}\n\n      {/* コントロールボタン */}\n      <Card style={styles.controlCard}>\n        <Card.Content>\n          <View style={styles.controlRow}>\n            <Button\n              mode={currentSession?.isPaused ? \"contained\" : \"outlined\"}\n              onPress={handlePauseResume}\n              style={styles.controlButton}\n            >\n              {currentSession?.isPaused ? '再開' : '一時停止'}\n            </Button>\n            \n            <Button\n              mode=\"outlined\"\n              onPress={() => setShowCompletionModal(true)}\n              style={styles.controlButton}\n            >\n              セッション終了\n            </Button>\n          </View>\n        </Card.Content>\n      </Card>\n\n      {/* 完了モーダル */}\n      <Portal>\n        <Modal \n          visible={showCompletionModal} \n          onDismiss={() => setShowCompletionModal(false)}\n          contentContainerStyle={styles.modalContainer}\n        >\n          <Text style={styles.modalTitle}>セッション完了</Text>\n          <Text style={styles.modalText}>\n            お疲れ様でした！今日のトレーニングはどうでしたか？\n          </Text>\n          \n          <Divider style={styles.modalDivider} />\n          \n          <Text style={styles.ratingLabel}>痛みレベル (0-10)</Text>\n          <View style={styles.ratingButtons}>\n            {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(level => (\n              <Button\n                key={level}\n                mode={painLevel === level ? \"contained\" : \"outlined\"}\n                onPress={() => setPainLevel(level)}\n                style={styles.ratingButton}\n                compact\n              >\n                {level}\n              </Button>\n            ))}\n          </View>\n\n          <Text style={styles.ratingLabel}>疲労度 (6-20)</Text>\n          <View style={styles.ratingButtons}>\n            {[6, 8, 10, 12, 14, 16, 18, 20].map(scale => (\n              <Button\n                key={scale}\n                mode={borgScale === scale ? \"contained\" : \"outlined\"}\n                onPress={() => setBorgScale(scale)}\n                style={styles.ratingButton}\n                compact\n              >\n                {scale}\n              </Button>\n            ))}\n          </View>\n\n          <View style={styles.modalButtons}>\n            <Button\n              mode=\"outlined\"\n              onPress={() => setShowCompletionModal(false)}\n              style={styles.modalButton}\n            >\n              キャンセル\n            </Button>\n            <Button\n              mode=\"contained\"\n              onPress={handleSessionComplete}\n              style={styles.modalButton}\n            >\n              完了\n            </Button>\n          </View>\n        </Modal>\n      </Portal>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  errorText: {\n    fontSize: 18,\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  progressCard: {\n    margin: 16,\n    elevation: 2,\n  },\n  progressTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 12,\n  },\n  progressBar: {\n    height: 8,\n    borderRadius: 4,\n    marginBottom: 8,\n  },\n  progressText: {\n    fontSize: 14,\n    textAlign: 'center',\n    color: '#666',\n  },\n  exerciseCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n  },\n  exerciseHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  exerciseName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    flex: 1,\n  },\n  exerciseDescription: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 4,\n  },\n  exerciseCategory: {\n    fontSize: 12,\n    color: '#888',\n  },\n  restSurface: {\n    margin: 16,\n    padding: 24,\n    borderRadius: 12,\n    alignItems: 'center',\n    backgroundColor: '#E3F2FD',\n    elevation: 1,\n  },\n  restTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#1976D2',\n    marginBottom: 8,\n  },\n  restTime: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    color: '#1976D2',\n    marginBottom: 16,\n  },\n  setCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n  },\n  setHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  setTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  repTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#2196F3',\n  },\n  setProgress: {\n    marginBottom: 16,\n  },\n  setProgressBar: {\n    height: 6,\n    borderRadius: 3,\n  },\n  timerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  timerLabel: {\n    fontSize: 14,\n    color: '#666',\n  },\n  timerValue: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  controlButtons: {\n    alignItems: 'center',\n  },\n  nextButton: {\n    width: '100%',\n    paddingVertical: 8,\n  },\n  controlCard: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 2,\n  },\n  controlRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  controlButton: {\n    flex: 1,\n    marginHorizontal: 4,\n  },\n  modalContainer: {\n    backgroundColor: 'white',\n    margin: 20,\n    padding: 20,\n    borderRadius: 12,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 16,\n  },\n  modalText: {\n    fontSize: 14,\n    textAlign: 'center',\n    color: '#666',\n    marginBottom: 20,\n  },\n  modalDivider: {\n    marginBottom: 20,\n  },\n  ratingLabel: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  ratingButtons: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginBottom: 16,\n  },\n  ratingButton: {\n    marginRight: 4,\n    marginBottom: 4,\n    minWidth: 40,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 20,\n  },\n  modalButton: {\n    flex: 1,\n    marginHorizontal: 8,\n  },\n});\n\nexport default ExerciseSessionScreen;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAQ3D,SACEC,IAAI,EACJC,IAAI,EACJC,MAAM,EACNC,UAAU,EACVC,WAAW,EACXC,IAAI,EACJC,OAAO,EACPC,OAAO,EACPC,MAAM,EACNC,KAAK,QACA,oBAAoB;AAC3B,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SACEC,eAAe,EACfC,gBAAgB,EAChBC,iBAAiB,EACjBC,YAAY,EACZC,aAAa,EACbC,kBAAkB;AACmB,SAAAC,MAAA,IAAAC,OAAA;AAEvC,IAAAC,eAAA,GAAkBrB,UAAU,CAACsB,GAAG,CAAC,QAAQ,CAAC;EAAlCC,KAAK,GAAAF,eAAA,CAALE,KAAK;AAEb,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACzC,IAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,IAAAgB,YAAA,GAAwBjB,WAAW,CAAC,UAACkB,KAAK;MAAA,OAAKA,KAAK,CAACC,IAAI;IAAA,EAAC;IAAlDC,IAAI,GAAAH,YAAA,CAAJG,IAAI;IAAEC,KAAK,GAAAJ,YAAA,CAALI,KAAK;EACnB,IAAAC,aAAA,GAKItB,WAAW,CAAC,UAACkB,KAAK;MAAA,OAAKA,KAAK,CAACK,QAAQ;IAAA,EAAC;IAJxCC,cAAc,GAAAF,aAAA,CAAdE,cAAc;IACdC,WAAW,GAAAH,aAAA,CAAXG,WAAW;IACXC,YAAY,GAAAJ,aAAA,CAAZI,YAAY;IACZC,gBAAgB,GAAAL,aAAA,CAAhBK,gBAAgB;EAGlB,IAAAC,SAAA,GAAwD9C,QAAQ,CAAC,CAAC,CAAC;IAAA+C,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5DG,oBAAoB,GAAAF,UAAA;IAAEG,uBAAuB,GAAAH,UAAA;EACpD,IAAAI,UAAA,GAAoCnD,QAAQ,CAAC,CAAC,CAAC;IAAAoD,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAxCE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAChC,IAAAG,UAAA,GAAoCvD,QAAQ,CAAC,CAAC,CAAC;IAAAwD,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAxCE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAChC,IAAAG,UAAA,GAAkC3D,QAAQ,CAAC,KAAK,CAAC;IAAA4D,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA1CE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAC9B,IAAAG,UAAA,GAAwC/D,QAAQ,CAAC,CAAC,CAAC;IAAAgE,UAAA,GAAAhB,cAAA,CAAAe,UAAA;IAA5CE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EACpC,IAAAG,UAAA,GAAsDnE,QAAQ,CAAC,CAAC,CAAC;IAAAoE,WAAA,GAAApB,cAAA,CAAAmB,UAAA;IAA1DE,mBAAmB,GAAAD,WAAA;IAAEE,sBAAsB,GAAAF,WAAA;EAClD,IAAAG,WAAA,GAAsDvE,QAAQ,CAAC,KAAK,CAAC;IAAAwE,WAAA,GAAAxB,cAAA,CAAAuB,WAAA;IAA9DE,mBAAmB,GAAAD,WAAA;IAAEE,sBAAsB,GAAAF,WAAA;EAClD,IAAAG,WAAA,GAAwC3E,QAAQ,CAAC,EAAE,CAAC;IAAA4E,WAAA,GAAA5B,cAAA,CAAA2B,WAAA;IAA7CE,YAAY,GAAAD,WAAA;IAAEE,eAAe,GAAAF,WAAA;EACpC,IAAAG,WAAA,GAAkC/E,QAAQ,CAAC,CAAC,CAAC;IAAAgF,WAAA,GAAAhC,cAAA,CAAA+B,WAAA;IAAtCE,SAAS,GAAAD,WAAA;IAAEE,YAAY,GAAAF,WAAA;EAC9B,IAAAG,WAAA,GAAkCnF,QAAQ,CAAC,CAAC,CAAC;IAAAoF,WAAA,GAAApC,cAAA,CAAAmC,WAAA;IAAtCE,SAAS,GAAAD,WAAA;IAAEE,YAAY,GAAAF,WAAA;EAE9B,IAAMG,WAAW,GAAGrF,MAAM,CAAC,IAAI,CAAC;EAChC,IAAMsF,eAAe,GAAGtF,MAAM,CAAC,IAAI,CAAC;EAGpC,IAAMuF,SAAS,GAAGlD,KAAK,GAAGI,WAAW,GAAG+C,oBAAoB,CAAC9C,YAAY,CAAC;EAC1E,IAAM+C,eAAe,GAAGF,SAAS,CAACxC,oBAAoB,CAAC;EAGvD,IAAMyC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIE,KAAK,EAAK;IACtC,IAAMC,cAAc,GAAG;MACrB,aAAa,EAAE,CACb;QACEC,EAAE,EAAE,GAAG;QACPC,aAAa,EAAE,aAAa;QAC5BC,WAAW,EAAE,sBAAsB;QACnCC,aAAa,EAAE,MAAM;QACrBC,aAAa,EAAE,CAAC;QAChBC,aAAa,EAAE,EAAE;QACjBC,gBAAgB,EAAE,UAAU;QAC5BC,oBAAoB,EAAE,KAAK;QAC3BC,iBAAiB,EAAE,EAAE;QACrBC,yBAAyB,EAAE;MAC7B,CAAC,EACD;QACET,EAAE,EAAE,GAAG;QACPC,aAAa,EAAE,SAAS;QACxBC,WAAW,EAAE,iBAAiB;QAC9BC,aAAa,EAAE,QAAQ;QACvBC,aAAa,EAAE,CAAC;QAChBC,aAAa,EAAE,EAAE;QACjBC,gBAAgB,EAAE,UAAU;QAC5BC,oBAAoB,EAAE,KAAK;QAC3BC,iBAAiB,EAAE,EAAE;QACrBC,yBAAyB,EAAE;MAC7B,CAAC,CACF;MACD,WAAW,EAAE,CACX;QACET,EAAE,EAAE,GAAG;QACPC,aAAa,EAAE,SAAS;QACxBC,WAAW,EAAE,kBAAkB;QAC/BC,aAAa,EAAE,MAAM;QACrBC,aAAa,EAAE,CAAC;QAChBC,aAAa,EAAE,EAAE;QACjBC,gBAAgB,EAAE,cAAc;QAChCC,oBAAoB,EAAE,IAAI;QAC1BC,iBAAiB,EAAE,EAAE;QACrBC,yBAAyB,EAAE;MAC7B,CAAC;IAEL,CAAC;IAED,OAAOV,cAAc,CAACD,KAAK,CAAC,IAAIC,cAAc,CAAC,aAAa,CAAC;EAC/D,CAAC;EAED5F,SAAS,CAAC,YAAM;IACd,IAAI0F,eAAe,EAAE;MACnBzD,QAAQ,CAACT,kBAAkB,CAACkE,eAAe,CAAC,CAAC;IAC/C;EACF,CAAC,EAAE,CAACA,eAAe,EAAEzD,QAAQ,CAAC,CAAC;EAE/BjC,SAAS,CAAC,YAAM;IAEd,IAAI,CAAC4D,SAAS,IAAI,EAACnB,cAAc,YAAdA,cAAc,CAAE8D,QAAQ,GAAE;MAC3CjB,WAAW,CAACkB,OAAO,GAAGC,WAAW,CAAC,YAAM;QACtCpC,sBAAsB,CAAC,UAAAqC,IAAI;UAAA,OAAIA,IAAI,GAAG,CAAC;QAAA,EAAC;MAC1C,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACLC,aAAa,CAACrB,WAAW,CAACkB,OAAO,CAAC;IACpC;IAEA,OAAO;MAAA,OAAMG,aAAa,CAACrB,WAAW,CAACkB,OAAO,CAAC;IAAA;EACjD,CAAC,EAAE,CAAC5C,SAAS,EAAEnB,cAAc,oBAAdA,cAAc,CAAE8D,QAAQ,CAAC,CAAC;EAEzCvG,SAAS,CAAC,YAAM;IAEd,IAAI4D,SAAS,IAAII,YAAY,GAAG,CAAC,EAAE;MACjCuB,eAAe,CAACiB,OAAO,GAAGC,WAAW,CAAC,YAAM;QAC1CxC,eAAe,CAAC,UAAAyC,IAAI,EAAI;UACtB,IAAIA,IAAI,IAAI,CAAC,EAAE;YACb7C,YAAY,CAAC,KAAK,CAAC;YACnB,OAAO,CAAC;UACV;UACA,OAAO6C,IAAI,GAAG,CAAC;QACjB,CAAC,CAAC;MACJ,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACLC,aAAa,CAACpB,eAAe,CAACiB,OAAO,CAAC;IACxC;IAEA,OAAO;MAAA,OAAMG,aAAa,CAACpB,eAAe,CAACiB,OAAO,CAAC;IAAA;EACrD,CAAC,EAAE,CAAC5C,SAAS,EAAEI,YAAY,CAAC,CAAC;EAE7B,IAAM4C,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IAC1B,IAAIpD,UAAU,GAAGkC,eAAe,CAACQ,aAAa,EAAE;MAC9CzC,aAAa,CAAC,UAAAiD,IAAI;QAAA,OAAIA,IAAI,GAAG,CAAC;MAAA,EAAC;IACjC,CAAC,MAAM;MAELG,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC;EAED,IAAMA,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;IAC9B,IAAIzD,UAAU,GAAGsC,eAAe,CAACO,aAAa,EAAE;MAE9C5C,aAAa,CAAC,UAAAqD,IAAI;QAAA,OAAIA,IAAI,GAAG,CAAC;MAAA,EAAC;MAC/BjD,aAAa,CAAC,CAAC,CAAC;MAGhB,IAAMqD,QAAQ,GAAGpB,eAAe,CAACW,iBAAiB,IAAI,EAAE;MACxDpC,eAAe,CAAC6C,QAAQ,CAAC;MACzBjD,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,MAAM;MAELkD,sBAAsB,CAAC,CAAC;IAC1B;EACF,CAAC;EAED,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAA,EAAS;IACnC,IAAMC,YAAY,GAAG;MACnBC,UAAU,EAAEvB,eAAe,CAACG,EAAE;MAC9BqB,cAAc,EAAExB,eAAe,CAACO,aAAa;MAC7CkB,cAAc,EAAEzB,eAAe,CAACQ,aAAa,GAAGR,eAAe,CAACO,aAAa;MAC7EmB,gBAAgB,EAAEhD,mBAAmB;MACrCiD,UAAU,EAAErC,SAAS;MACrBsC,UAAU,EAAElC,SAAS;MACrBmC,KAAK,EAAE3C;IACT,CAAC;IAED3C,QAAQ,CAACb,gBAAgB,CAAC;MACxB6F,UAAU,EAAEvB,eAAe,CAACG,EAAE;MAC9B2B,WAAW,EAAER;IACf,CAAC,CAAC,CAAC;IAGH,IAAIhE,oBAAoB,GAAGwC,SAAS,CAACiC,MAAM,GAAG,CAAC,EAAE;MAC/CxE,uBAAuB,CAAC,UAAAyD,IAAI;QAAA,OAAIA,IAAI,GAAG,CAAC;MAAA,EAAC;MACzCrD,aAAa,CAAC,CAAC,CAAC;MAChBI,aAAa,CAAC,CAAC,CAAC;MAChBY,sBAAsB,CAAC,CAAC,CAAC;MACzBY,YAAY,CAAC,CAAC,CAAC;MACfI,YAAY,CAAC,CAAC,CAAC;IACjB,CAAC,MAAM;MAELZ,sBAAsB,CAAC,IAAI,CAAC;IAC9B;EACF,CAAC;EAED,IAAMiD,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAA,EAAS;IAClCzF,QAAQ,CAACZ,iBAAiB,CAAC;MACzB2D,SAAS,EAATA,SAAS;MACTI,SAAS,EAATA,SAAS;MACTmC,KAAK,EAAE3C;IACT,CAAC,CAAC,CAAC;IACH3C,QAAQ,CAACd,eAAe,CAAC,CAAC,CAAC;IAE3Bd,KAAK,CAACsH,KAAK,CACT,SAAS,EACT,wBAAwB,EACxB,CACE;MAAEC,IAAI,EAAE,IAAI;MAAEC,OAAO,EAAE,SAATA,OAAOA,CAAA;QAAA,OAAQ7F,UAAU,CAAC8F,QAAQ,CAAC,MAAM,CAAC;MAAA;IAAC,CAAC,CAE9D,CAAC;EACH,CAAC;EAED,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;IAC9B,IAAItF,cAAc,YAAdA,cAAc,CAAE8D,QAAQ,EAAE;MAC5BtE,QAAQ,CAACV,aAAa,CAAC,CAAC,CAAC;IAC3B,CAAC,MAAM;MACLU,QAAQ,CAACX,YAAY,CAAC,CAAC,CAAC;IAC1B;EACF,CAAC;EAED,IAAM0G,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAC3BnE,YAAY,CAAC,KAAK,CAAC;IACnBI,eAAe,CAAC,CAAC,CAAC;EACpB,CAAC;EAED,IAAMgE,UAAU,GAAG,SAAbA,UAAUA,CAAIC,OAAO,EAAK;IAC9B,IAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,EAAE,CAAC;IACrC,IAAMI,IAAI,GAAGJ,OAAO,GAAG,EAAE;IACzB,OAAO,GAAGC,IAAI,CAACI,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIF,IAAI,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EAClF,CAAC;EAED,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAA,EAAS;IAClC,IAAMC,cAAc,GAAGlD,SAAS,CAACiC,MAAM;IACvC,IAAMkB,kBAAkB,GAAG3F,oBAAoB;IAC/C,IAAM4F,uBAAuB,GAAGxF,UAAU,IAAGsC,eAAe,oBAAfA,eAAe,CAAEO,aAAa,KAAI,CAAC;IAChF,OAAQ,CAAC0C,kBAAkB,GAAGC,uBAAuB,IAAIF,cAAc,GAAI,GAAG;EAChF,CAAC;EAED,IAAI,CAACjG,cAAc,IAAI,CAACiD,eAAe,EAAE;IACvC,OACEhE,OAAA,CAACxB,IAAI;MAAC2I,KAAK,EAAEC,MAAM,CAACC,cAAe;MAAAC,QAAA,GACjCtH,OAAA,CAACnB,IAAI;QAACsI,KAAK,EAAEC,MAAM,CAACG,SAAU;QAAAD,QAAA,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAM,CAAC,EACnD5H,OAAA,CAACjB,MAAM;QAAC8I,IAAI,EAAC,WAAW;QAAC1B,OAAO,EAAE,SAATA,OAAOA,CAAA;UAAA,OAAQ7F,UAAU,CAACwH,MAAM,CAAC,CAAC;QAAA,CAAC;QAAAR,QAAA,EAAC;MAE7D;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAQ,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACL,CAAC;EAEX;EAEA,OACE5H,OAAA,CAACtB,UAAU;IAACyI,KAAK,EAAEC,MAAM,CAACW,SAAU;IAAAT,QAAA,GAElCtH,OAAA,CAAClB,IAAI;MAACqI,KAAK,EAAEC,MAAM,CAACY,YAAa;MAAAV,QAAA,EAC/BtH,OAAA,CAAClB,IAAI,CAACmJ,OAAO;QAAAX,QAAA,GACXtH,OAAA,CAACnB,IAAI;UAACsI,KAAK,EAAEC,MAAM,CAACc,aAAc;UAAAZ,QAAA,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAM,CAAC,EACjD5H,OAAA,CAACf,WAAW;UACVkJ,QAAQ,EAAEpB,qBAAqB,CAAC,CAAC,GAAG,GAAI;UACxCqB,KAAK,EAAC,SAAS;UACfjB,KAAK,EAAEC,MAAM,CAACiB;QAAY;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAC3B,CAAC,EACF5H,OAAA,CAACnB,IAAI;UAACsI,KAAK,EAAEC,MAAM,CAACkB,YAAa;UAAAhB,QAAA,GAC9BhG,oBAAoB,GAAG,CAAC,EAAC,KAAG,EAACwC,SAAS,CAACiC,MAAM,EAAC,2BACjD;QAAA;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAM,CAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACK;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACX,CAAC,EAGP5H,OAAA,CAAClB,IAAI;MAACqI,KAAK,EAAEC,MAAM,CAACmB,YAAa;MAAAjB,QAAA,EAC/BtH,OAAA,CAAClB,IAAI,CAACmJ,OAAO;QAAAX,QAAA,GACXtH,OAAA,CAACxB,IAAI;UAAC2I,KAAK,EAAEC,MAAM,CAACoB,cAAe;UAAAlB,QAAA,GACjCtH,OAAA,CAACnB,IAAI;YAACsI,KAAK,EAAEC,MAAM,CAACqB,YAAa;YAAAnB,QAAA,EAAEtD,eAAe,CAACI;UAAa;YAAAoD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAAO,CAAC,EACvE5D,eAAe,CAACU,oBAAoB,IACnC1E,OAAA,CAACd,IAAI;YACHwJ,IAAI,EAAC,QAAQ;YACbb,IAAI,EAAC,UAAU;YACfc,OAAO;YACPxC,OAAO,EAAE,SAATA,OAAOA,CAAA;cAAA,OAAQ7F,UAAU,CAAC8F,QAAQ,CAAC,YAAY,EAAE;gBAC/CwC,YAAY,EAAE5E,eAAe,CAACI,aAAa,CAACyE,QAAQ,CAAC,OAAO,CAAC,GAAG,OAAO,GAAG,SAAS;gBACnFJ,YAAY,EAAEzE,eAAe,CAACI;cAChC,CAAC,CAAC;YAAA,CAAC;YAAAkD,QAAA,EACJ;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAAM,CACP;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACG,CAAC,EACP5H,OAAA,CAACnB,IAAI;UAACsI,KAAK,EAAEC,MAAM,CAAC0B,mBAAoB;UAAAxB,QAAA,EACrCtD,eAAe,CAACK;QAAW;UAAAmD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACxB,CAAC,EACP5H,OAAA,CAACnB,IAAI;UAACsI,KAAK,EAAEC,MAAM,CAAC2B,gBAAiB;UAAAzB,QAAA,GAAC,kCAC7B,EAACtD,eAAe,CAACM,aAAa;QAAA;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACjC,CAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACK;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACX,CAAC,EAGN1F,SAAS,IACRlC,OAAA,CAACZ,OAAO;MAAC+H,KAAK,EAAEC,MAAM,CAAC4B,WAAY;MAAA1B,QAAA,GACjCtH,OAAA,CAACnB,IAAI;QAACsI,KAAK,EAAEC,MAAM,CAAC6B,SAAU;QAAA3B,QAAA,EAAC;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAM,CAAC,EACzC5H,OAAA,CAACnB,IAAI;QAACsI,KAAK,EAAEC,MAAM,CAAChC,QAAS;QAAAkC,QAAA,EAAEf,UAAU,CAACjE,YAAY;MAAC;QAAAkF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAO,CAAC,EAC/D5H,OAAA,CAACjB,MAAM;QAAC8I,IAAI,EAAC,UAAU;QAAC1B,OAAO,EAAEG,cAAe;QAAAgB,QAAA,EAAC;MAEjD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAQ,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACF,CACV,EAGA,CAAC1F,SAAS,IACTlC,OAAA,CAAClB,IAAI;MAACqI,KAAK,EAAEC,MAAM,CAAC8B,OAAQ;MAAA5B,QAAA,EAC1BtH,OAAA,CAAClB,IAAI,CAACmJ,OAAO;QAAAX,QAAA,GACXtH,OAAA,CAACxB,IAAI;UAAC2I,KAAK,EAAEC,MAAM,CAAC+B,SAAU;UAAA7B,QAAA,GAC5BtH,OAAA,CAACnB,IAAI;YAACsI,KAAK,EAAEC,MAAM,CAACgC,QAAS;YAAA9B,QAAA,GAAC,qBACxB,EAAC5F,UAAU,EAAC,KAAG,EAACsC,eAAe,CAACO,aAAa;UAAA;YAAAiD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAC7C,CAAC,EACP5H,OAAA,CAACnB,IAAI;YAACsI,KAAK,EAAEC,MAAM,CAACiC,QAAS;YAAA/B,QAAA,GAC1BxF,UAAU,EAAC,KAAG,EAACkC,eAAe,CAACQ,aAAa,EAAC,SAChD;UAAA;YAAAgD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAAM,CAAC;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACH,CAAC,EAEP5H,OAAA,CAACxB,IAAI;UAAC2I,KAAK,EAAEC,MAAM,CAACkC,WAAY;UAAAhC,QAAA,EAC9BtH,OAAA,CAACf,WAAW;YACVkJ,QAAQ,EAAErG,UAAU,GAAGkC,eAAe,CAACQ,aAAc;YACrD4D,KAAK,EAAC,SAAS;YACfjB,KAAK,EAAEC,MAAM,CAACmC;UAAe;YAAA/B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAC9B;QAAC;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACE,CAAC,EAEP5H,OAAA,CAACxB,IAAI;UAAC2I,KAAK,EAAEC,MAAM,CAACoC,cAAe;UAAAlC,QAAA,GACjCtH,OAAA,CAACnB,IAAI;YAACsI,KAAK,EAAEC,MAAM,CAACqC,UAAW;YAAAnC,QAAA,EAAC;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAAM,CAAC,EAC3C5H,OAAA,CAACnB,IAAI;YAACsI,KAAK,EAAEC,MAAM,CAACsC,UAAW;YAAApC,QAAA,EAAEf,UAAU,CAAC7D,mBAAmB;UAAC;YAAA8E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAAO,CAAC;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACpE,CAAC,EAEP5H,OAAA,CAACxB,IAAI;UAAC2I,KAAK,EAAEC,MAAM,CAACuC,cAAe;UAAArC,QAAA,EACjCtH,OAAA,CAACjB,MAAM;YACL8I,IAAI,EAAC,WAAW;YAChB1B,OAAO,EAAEjB,aAAc;YACvBiC,KAAK,EAAEC,MAAM,CAACwC,UAAW;YACzBC,QAAQ,EAAE9I,cAAc,oBAAdA,cAAc,CAAE8D,QAAS;YAAAyC,QAAA,EAElCxF,UAAU,GAAGkC,eAAe,CAACQ,aAAa,GAAG,MAAM,GAAG;UAAO;YAAAgD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KACxD;QAAC;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACL,CAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACK;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACX,CACP,EAGD5H,OAAA,CAAClB,IAAI;MAACqI,KAAK,EAAEC,MAAM,CAAC0C,WAAY;MAAAxC,QAAA,EAC9BtH,OAAA,CAAClB,IAAI,CAACmJ,OAAO;QAAAX,QAAA,EACXtH,OAAA,CAACxB,IAAI;UAAC2I,KAAK,EAAEC,MAAM,CAAC2C,UAAW;UAAAzC,QAAA,GAC7BtH,OAAA,CAACjB,MAAM;YACL8I,IAAI,EAAE9G,cAAc,YAAdA,cAAc,CAAE8D,QAAQ,GAAG,WAAW,GAAG,UAAW;YAC1DsB,OAAO,EAAEE,iBAAkB;YAC3Bc,KAAK,EAAEC,MAAM,CAAC4C,aAAc;YAAA1C,QAAA,EAE3BvG,cAAc,YAAdA,cAAc,CAAE8D,QAAQ,GAAG,IAAI,GAAG;UAAM;YAAA2C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KACnC,CAAC,EAET5H,OAAA,CAACjB,MAAM;YACL8I,IAAI,EAAC,UAAU;YACf1B,OAAO,EAAE,SAATA,OAAOA,CAAA;cAAA,OAAQpD,sBAAsB,CAAC,IAAI,CAAC;YAAA,CAAC;YAC5CoE,KAAK,EAAEC,MAAM,CAAC4C,aAAc;YAAA1C,QAAA,EAC7B;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAAQ,CAAC;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACL;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACK;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACX,CAAC,EAGP5H,OAAA,CAACX,MAAM;MAAAiI,QAAA,EACLtH,OAAA,CAACV,KAAK;QACJ2K,OAAO,EAAEnH,mBAAoB;QAC7BoH,SAAS,EAAE,SAAXA,SAASA,CAAA;UAAA,OAAQnH,sBAAsB,CAAC,KAAK,CAAC;QAAA,CAAC;QAC/CoH,qBAAqB,EAAE/C,MAAM,CAACgD,cAAe;QAAA9C,QAAA,GAE7CtH,OAAA,CAACnB,IAAI;UAACsI,KAAK,EAAEC,MAAM,CAACiD,UAAW;UAAA/C,QAAA,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAM,CAAC,EAC9C5H,OAAA,CAACnB,IAAI;UAACsI,KAAK,EAAEC,MAAM,CAACkD,SAAU;UAAAhD,QAAA,EAAC;QAE/B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAM,CAAC,EAEP5H,OAAA,CAACb,OAAO;UAACgI,KAAK,EAAEC,MAAM,CAACmD;QAAa;UAAA/C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAE,CAAC,EAEvC5H,OAAA,CAACnB,IAAI;UAACsI,KAAK,EAAEC,MAAM,CAACoD,WAAY;UAAAlD,QAAA,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAM,CAAC,EACpD5H,OAAA,CAACxB,IAAI;UAAC2I,KAAK,EAAEC,MAAM,CAACqD,aAAc;UAAAnD,QAAA,EAC/B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAACoD,GAAG,CAAC,UAAAC,KAAK;YAAA,OAC3C3K,OAAA,CAACjB,MAAM;cAEL8I,IAAI,EAAEvE,SAAS,KAAKqH,KAAK,GAAG,WAAW,GAAG,UAAW;cACrDxE,OAAO,EAAE,SAATA,OAAOA,CAAA;gBAAA,OAAQ5C,YAAY,CAACoH,KAAK,CAAC;cAAA,CAAC;cACnCxD,KAAK,EAAEC,MAAM,CAACwD,YAAa;cAC3BjC,OAAO;cAAArB,QAAA,EAENqD;YAAK,GANDA,KAAK;cAAAnD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAC,KAOJ,CAAC;UAAA,CACV;QAAC;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACE,CAAC,EAEP5H,OAAA,CAACnB,IAAI;UAACsI,KAAK,EAAEC,MAAM,CAACoD,WAAY;UAAAlD,QAAA,EAAC;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAM,CAAC,EAClD5H,OAAA,CAACxB,IAAI;UAAC2I,KAAK,EAAEC,MAAM,CAACqD,aAAc;UAAAnD,QAAA,EAC/B,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAACoD,GAAG,CAAC,UAAAG,KAAK;YAAA,OACvC7K,OAAA,CAACjB,MAAM;cAEL8I,IAAI,EAAEnE,SAAS,KAAKmH,KAAK,GAAG,WAAW,GAAG,UAAW;cACrD1E,OAAO,EAAE,SAATA,OAAOA,CAAA;gBAAA,OAAQxC,YAAY,CAACkH,KAAK,CAAC;cAAA,CAAC;cACnC1D,KAAK,EAAEC,MAAM,CAACwD,YAAa;cAC3BjC,OAAO;cAAArB,QAAA,EAENuD;YAAK,GANDA,KAAK;cAAArD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAC,KAOJ,CAAC;UAAA,CACV;QAAC;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACE,CAAC,EAEP5H,OAAA,CAACxB,IAAI;UAAC2I,KAAK,EAAEC,MAAM,CAAC0D,YAAa;UAAAxD,QAAA,GAC/BtH,OAAA,CAACjB,MAAM;YACL8I,IAAI,EAAC,UAAU;YACf1B,OAAO,EAAE,SAATA,OAAOA,CAAA;cAAA,OAAQpD,sBAAsB,CAAC,KAAK,CAAC;YAAA,CAAC;YAC7CoE,KAAK,EAAEC,MAAM,CAAC2D,WAAY;YAAAzD,QAAA,EAC3B;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAAQ,CAAC,EACT5H,OAAA,CAACjB,MAAM;YACL8I,IAAI,EAAC,WAAW;YAChB1B,OAAO,EAAEH,qBAAsB;YAC/BmB,KAAK,EAAEC,MAAM,CAAC2D,WAAY;YAAAzD,QAAA,EAC3B;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAAQ,CAAC;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACL,CAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACF;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACF,CAAC;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACC,CAAC;AAEjB,CAAC;AAED,IAAMR,MAAM,GAAG3I,UAAU,CAACuM,MAAM,CAAC;EAC/BjD,SAAS,EAAE;IACTkD,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACnB,CAAC;EACD7D,cAAc,EAAE;IACd4D,IAAI,EAAE,CAAC;IACPE,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE;EACX,CAAC;EACD9D,SAAS,EAAE;IACT+D,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE;EACb,CAAC;EACDxD,YAAY,EAAE;IACZyD,MAAM,EAAE,EAAE;IACVC,SAAS,EAAE;EACb,CAAC;EACDxD,aAAa,EAAE;IACboD,QAAQ,EAAE,EAAE;IACZK,UAAU,EAAE,MAAM;IAClBJ,YAAY,EAAE;EAChB,CAAC;EACDlD,WAAW,EAAE;IACXuD,MAAM,EAAE,CAAC;IACTC,YAAY,EAAE,CAAC;IACfN,YAAY,EAAE;EAChB,CAAC;EACDjD,YAAY,EAAE;IACZgD,QAAQ,EAAE,EAAE;IACZE,SAAS,EAAE,QAAQ;IACnBpD,KAAK,EAAE;EACT,CAAC;EACDG,YAAY,EAAE;IACZkD,MAAM,EAAE,EAAE;IACVK,SAAS,EAAE,CAAC;IACZJ,SAAS,EAAE;EACb,CAAC;EACDlD,cAAc,EAAE;IACduD,aAAa,EAAE,KAAK;IACpBZ,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBG,YAAY,EAAE;EAChB,CAAC;EACD9C,YAAY,EAAE;IACZ6C,QAAQ,EAAE,EAAE;IACZK,UAAU,EAAE,MAAM;IAClBV,IAAI,EAAE;EACR,CAAC;EACDnC,mBAAmB,EAAE;IACnBwC,QAAQ,EAAE,EAAE;IACZlD,KAAK,EAAE,MAAM;IACbmD,YAAY,EAAE;EAChB,CAAC;EACDxC,gBAAgB,EAAE;IAChBuC,QAAQ,EAAE,EAAE;IACZlD,KAAK,EAAE;EACT,CAAC;EACDY,WAAW,EAAE;IACXyC,MAAM,EAAE,EAAE;IACVJ,OAAO,EAAE,EAAE;IACXQ,YAAY,EAAE,EAAE;IAChBT,UAAU,EAAE,QAAQ;IACpBF,eAAe,EAAE,SAAS;IAC1BQ,SAAS,EAAE;EACb,CAAC;EACDzC,SAAS,EAAE;IACTqC,QAAQ,EAAE,EAAE;IACZK,UAAU,EAAE,MAAM;IAClBvD,KAAK,EAAE,SAAS;IAChBmD,YAAY,EAAE;EAChB,CAAC;EACDnG,QAAQ,EAAE;IACRkG,QAAQ,EAAE,EAAE;IACZK,UAAU,EAAE,MAAM;IAClBvD,KAAK,EAAE,SAAS;IAChBmD,YAAY,EAAE;EAChB,CAAC;EACDrC,OAAO,EAAE;IACPuC,MAAM,EAAE,EAAE;IACVK,SAAS,EAAE,CAAC;IACZJ,SAAS,EAAE;EACb,CAAC;EACDvC,SAAS,EAAE;IACT4C,aAAa,EAAE,KAAK;IACpBZ,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBG,YAAY,EAAE;EAChB,CAAC;EACDnC,QAAQ,EAAE;IACRkC,QAAQ,EAAE,EAAE;IACZK,UAAU,EAAE;EACd,CAAC;EACDtC,QAAQ,EAAE;IACRiC,QAAQ,EAAE,EAAE;IACZK,UAAU,EAAE,MAAM;IAClBvD,KAAK,EAAE;EACT,CAAC;EACDkB,WAAW,EAAE;IACXiC,YAAY,EAAE;EAChB,CAAC;EACDhC,cAAc,EAAE;IACdqC,MAAM,EAAE,CAAC;IACTC,YAAY,EAAE;EAChB,CAAC;EACDrC,cAAc,EAAE;IACduC,aAAa,EAAE,KAAK;IACpBZ,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBG,YAAY,EAAE;EAChB,CAAC;EACD9B,UAAU,EAAE;IACV6B,QAAQ,EAAE,EAAE;IACZlD,KAAK,EAAE;EACT,CAAC;EACDsB,UAAU,EAAE;IACV4B,QAAQ,EAAE,EAAE;IACZK,UAAU,EAAE,MAAM;IAClBvD,KAAK,EAAE;EACT,CAAC;EACDuB,cAAc,EAAE;IACdyB,UAAU,EAAE;EACd,CAAC;EACDxB,UAAU,EAAE;IACVzJ,KAAK,EAAE,MAAM;IACb6L,eAAe,EAAE;EACnB,CAAC;EACDlC,WAAW,EAAE;IACX2B,MAAM,EAAE,EAAE;IACVK,SAAS,EAAE,CAAC;IACZJ,SAAS,EAAE;EACb,CAAC;EACD3B,UAAU,EAAE;IACVgC,aAAa,EAAE,KAAK;IACpBZ,cAAc,EAAE;EAClB,CAAC;EACDnB,aAAa,EAAE;IACbiB,IAAI,EAAE,CAAC;IACPgB,gBAAgB,EAAE;EACpB,CAAC;EACD7B,cAAc,EAAE;IACdc,eAAe,EAAE,OAAO;IACxBO,MAAM,EAAE,EAAE;IACVJ,OAAO,EAAE,EAAE;IACXQ,YAAY,EAAE;EAChB,CAAC;EACDxB,UAAU,EAAE;IACViB,QAAQ,EAAE,EAAE;IACZK,UAAU,EAAE,MAAM;IAClBH,SAAS,EAAE,QAAQ;IACnBD,YAAY,EAAE;EAChB,CAAC;EACDjB,SAAS,EAAE;IACTgB,QAAQ,EAAE,EAAE;IACZE,SAAS,EAAE,QAAQ;IACnBpD,KAAK,EAAE,MAAM;IACbmD,YAAY,EAAE;EAChB,CAAC;EACDhB,YAAY,EAAE;IACZgB,YAAY,EAAE;EAChB,CAAC;EACDf,WAAW,EAAE;IACXc,QAAQ,EAAE,EAAE;IACZK,UAAU,EAAE,MAAM;IAClBJ,YAAY,EAAE;EAChB,CAAC;EACDd,aAAa,EAAE;IACbsB,aAAa,EAAE,KAAK;IACpBG,QAAQ,EAAE,MAAM;IAChBX,YAAY,EAAE;EAChB,CAAC;EACDX,YAAY,EAAE;IACZuB,WAAW,EAAE,CAAC;IACdZ,YAAY,EAAE,CAAC;IACfa,QAAQ,EAAE;EACZ,CAAC;EACDtB,YAAY,EAAE;IACZiB,aAAa,EAAE,KAAK;IACpBZ,cAAc,EAAE,eAAe;IAC/BW,SAAS,EAAE;EACb,CAAC;EACDf,WAAW,EAAE;IACXE,IAAI,EAAE,CAAC;IACPgB,gBAAgB,EAAE;EACpB;AACF,CAAC,CAAC;AAEF,eAAe7L,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}